{
	"info": {
		"_postman_id": "2df3a95d-68d6-40ee-aeba-1f9abe016740",
		"name": "Cord_API_V3_Product",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pre-req ( Session + Register + Login ) for Product",
			"item": [
				{
					"name": "Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "314e205a-46e0-4a26-a198-cd4897c0d2f0",
								"exec": [
									"var response = pm.response.json();\r",
									"pm.globals.set(\"token\", response.data.session.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "# Write your query or mutation here\r\nquery {\r\n  session(browser: false) {\r\n    user {\r\n      id,\r\n      email\r\n      {\r\n        value\r\n      }\r\n      realFirstName\r\n      {\r\n        value\r\n      }\r\n      createdAt\r\n      displayLastName\r\n      {\r\n         value\r\n      }\r\n      \r\n      \r\n      \r\n    },\r\n    token\r\n  }\r\n}",
								"variables": ""
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ac97c91-0b7c-48f4-8693-dbecfa1b306a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// This is safe check to prevent failing futher cases If the Root User is already Created\r",
									"if (jsonData.errors) {\r",
									"    if (jsonData.errors.length) return;\r",
									"}\r",
									"\r",
									"//Saving data for future use\r",
									"var id = jsonData.data.register.user.id;\r",
									"pm.globals.set(\"userid\", id);\r",
									"\r",
									"var user = JSON.stringify(jsonData.data.register.user);\r",
									"pm.globals.set(\"user_data\", user);\r",
									"\r",
									"var email = jsonData.data.register.user.email.value;\r",
									"pm.globals.set(\"email\", email);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "26f7f4e3-0a16-4f2b-b05d-de1d9e169595",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"realFirstName\", \"FirstName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"realLastName\", \"LastName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"email\", \"email\" + moment().format(\"DDMYYYYhhmmss\") + \"@test.com\");\r",
									"pm.globals.set(\"password\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"displayFirstName\", \"DisplayFirstName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"displayLastName\", \"DisplayLastName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));\r",
									"\r",
									"var timezoneObject = {\r",
									"    \"name\": \"Europe/Andorra\",\r",
									"    \"lat\": 42.5,\r",
									"    \"long\": 1.5167,\r",
									"    \"countries\": [\r",
									"        {\r",
									"            \"code\": \"AD\",\r",
									"            \"name\": \"Andorra\",\r",
									"            \"zones\": [\r",
									"                {\r",
									"                    \"name\": \"Europe/Andorra\",\r",
									"                    \"lat\": 42.5,\r",
									"                    \"long\": 1.5167,\r",
									"                    \"countries\": [\r",
									"                        {\r",
									"                            \"code\": \"AD\",\r",
									"                            \"name\": \"Andorra\"\r",
									"                        }\r",
									"                    ]\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ]\r",
									"};\r",
									"pm.globals.set('timezoneObject', JSON.stringify(timezoneObject));\r",
									"pm.globals.set(\"timezone\", timezoneObject.name);\r",
									"\r",
									"pm.globals.set(\"bio\", \"I'm Tester\");\r",
									"\r",
									"// Taking random value for the User status from pre-defined possible values\r",
									"var userStatusArray = ['Active','Disabled'];\r",
									"var randomNumber = Math.floor(Math.random()*userStatusArray.length);\r",
									"// pm.globals.set('userStatus', userStatusArray[randomNumber]);\r",
									"pm.globals.set(\"userStatus\", \"Active\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation register($input: RegisterInput!) {\r\n  register(input: $input) {\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value{\r\n          name\r\n          lat\r\n          long\r\n          countries{\r\n            code\r\n            name\r\n            zones{\r\n              name\r\n              lat\r\n              long\r\n              countries{\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      bio {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n\r\n      unavailabilities {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      organizations {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      education {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          degree {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          major {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          institution {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": \r\n  {\r\n    \"realFirstName\": \"Piyush\",\r\n    \"realLastName\": \"Patel\",\r\n    \"email\" : \"{{login_email}}\",\r\n    \"password\": \"{{login_password}}\",\r\n    \"displayFirstName\": \"{{displayFirstName}}\",\r\n    \"displayLastName\": \"{{displayLastName}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"timezone\": \"{{timezone}}\",\r\n    \"bio\": \"{{bio}}\",\r\n    \"status\": \"{{userStatus}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b48af10-5364-4b3a-a494-446bfe0f6bd5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"userid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b2984d79-21fe-4fc5-be68-a6eea5fc4b65",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      bio {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n\r\n      unavailabilities {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      organizations {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      education {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          degree {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          major {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          institution {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n   \"input\": {\r\n      \"email\": \"{{login_email}}\",\r\n      \"password\": \"{{login_password}}\"\r\n   }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Engagement ( Create Language )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58db97c3-9cc9-4e09-90c1-50bff82b2d7b",
								"exec": [
									"var jsonData = pm.response.json();",
									"var id = jsonData.data.createLanguage.language.id;",
									"",
									"// Saving data for future use",
									"pm.globals.set(\"languageid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e5292d55-152e-4df3-9763-d9dd43e60630",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"languageName\", \"LanguageName\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"languageDisplayName\", \"LanguageDisplayName\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"languageDisplayNamePronunciation\", \"LanguageDisplayNamePronunciation\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"isDialect\", pm.variables.replaceIn('{{$randomBoolean}}'));\r",
									"\r",
									"pm.globals.set(\"languageEthnologueId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"languageEthnologueCode\", \"ethcode\" + makeid(true, false, false, 5));\r",
									"\r",
									"pm.globals.set(\"languageEthnologueProvisionalCode\", \"ethproviscode\" + makeid(true, false, false, 5));\r",
									"\r",
									"pm.globals.set(\"languageEthnologueName\", \"LanguageEthnologueName\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"languageEthnologuePopulation\", _.random(1000, 2500));\r",
									"\r",
									"pm.globals.set(\"languagePopulationOverride\", _.random(2501, 5000));\r",
									"\r",
									"pm.globals.set(\"languageRegistryOfDialectsCode\", _.random(10000, 99999).toString());\r",
									"\r",
									"pm.globals.set(\"languageLeastOfThese\", pm.variables.replaceIn('{{$randomBoolean}}'));\r",
									"\r",
									"pm.globals.set(\"languageLeastOfTheseReason\", \"This is test Language Least Reason by Automation Testing\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateLanguage($input: CreateLanguageInput!) {\r\n  createLanguage(input: $input) {\r\n    language {\r\n      id\r\n      createdAt\r\n      sensitivity\r\n      avatarLetters\r\n      name {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      displayName {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      displayNamePronunciation {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      isDialect {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      ethnologue {\r\n        id {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        code {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        provisionalCode {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        name {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        population {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n      }\r\n      populationOverride {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      population {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      registryOfDialectsCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      leastOfThese {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      leastOfTheseReason {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      sponsorDate {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      beginFiscalYear {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      locations {\r\n        items {\r\n          __typename\r\n        }\r\n        total\r\n        hasMore\r\n        canRead\r\n        canCreate\r\n      }\r\n      projects {\r\n        total\r\n        hasMore\r\n        items {\r\n          id\r\n          createdAt\r\n          type\r\n          sensitivity\r\n          modifiedAt\r\n          avatarLetters\r\n          status\r\n          name {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          deptId {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          step {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          location {\r\n            value {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              region {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  name {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  zone {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      director {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          fullName\r\n                          firstName\r\n                          avatarLetters\r\n                          email {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          realFirstName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          realLastName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          displayFirstName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          displayLastName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          phone {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          timezone {\r\n                            value {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                                name\r\n                                zones {\r\n                                  name\r\n                                  lat\r\n                                  long\r\n                                  countries {\r\n                                    code\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          bio {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          status {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          unavailabilities {\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              start\r\n                              end\r\n                              description {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                            }\r\n                          }\r\n                          organizations {\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              avatarLetters\r\n                              createdAt\r\n                              name {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                            }\r\n                          }\r\n                          education {\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              degree {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                              major {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                              institution {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                  director {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      email {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      phone {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      timezone {\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      bio {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      status {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      unavailabilities {\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          start\r\n                          end\r\n                          description {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                      organizations {\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          avatarLetters\r\n                          createdAt\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                      education {\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          major {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          institution {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouStart {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouEnd {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          estimatedSubmission {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          team {\r\n            total\r\n            hasMore\r\n            canCreate\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              # modifiedAt\r\n              roles {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              user {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  email {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  phone {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  timezone {\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  bio {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  status {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  unavailabilities {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      start\r\n                      end\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                  organizations {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                  education {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      major {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          engagements {\r\n            total\r\n            hasMore\r\n            canCreate\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              status\r\n              modifiedAt\r\n              ceremony {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  planned {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  estimatedDate {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  actualDate {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              completeDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              disbursementCompleteDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              communicationsCompleteDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              startDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              endDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              initialEndDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              lastSuspendedAt {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              lastReactivatedAt {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              statusModifiedAt {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n            }\r\n          }\r\n          budget {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              id\r\n              createdAt\r\n              status\r\n              total\r\n              records {\r\n                id\r\n                createdAt\r\n                fiscalYear {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                amount {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                organization {\r\n                  canRead\r\n                  canEdit\r\n                  value {\r\n                    id\r\n                    createdAt\r\n                    avatarLetters\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          partnerships {\r\n            total\r\n            hasMore\r\n            canCreate\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              agreementStatus {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              mouStatus {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              mouStart {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              mouEnd {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              types {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              organization {\r\n                id\r\n                createdAt\r\n                avatarLetters\r\n                name {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n              }\r\n              mou {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  category\r\n                  mimeType\r\n                  size\r\n                  downloadUrl\r\n                  name\r\n                  modifiedAt\r\n                  modifiedBy {\r\n                    id\r\n                    createdAt\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    bio {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    unavailabilities {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        start\r\n                        end\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        avatarLetters\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                    education {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  createdBy {\r\n                    id\r\n                    createdAt\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    bio {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    unavailabilities {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        start\r\n                        end\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        avatarLetters\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                    education {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  parents {\r\n                    id\r\n                    createdAt\r\n                    type\r\n                    category\r\n                    name\r\n                    createdBy {\r\n                      id\r\n                      createdAt\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      email {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      phone {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      timezone {\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      bio {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      status {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      unavailabilities {\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          start\r\n                          end\r\n                          description {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                      organizations {\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          avatarLetters\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                      education {\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          major {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          institution {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    parents {\r\n                      id\r\n                      # contains other properties same as parent 'parents'\r\n                    }\r\n                  }\r\n                  children {\r\n                    total\r\n                    hasMore\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      type\r\n                      category\r\n                      name\r\n                      createdBy {\r\n                        id\r\n                        createdAt\r\n                        fullName\r\n                        firstName\r\n                        avatarLetters\r\n                        email {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        realFirstName {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        realLastName {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        displayFirstName {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        displayLastName {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        phone {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        timezone {\r\n                          value {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                              name\r\n                              zones {\r\n                                name\r\n                                lat\r\n                                long\r\n                                countries {\r\n                                  code\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        bio {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        status {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        unavailabilities {\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            start\r\n                            end\r\n                            description {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                          }\r\n                        }\r\n                        organizations {\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            avatarLetters\r\n                            name {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                          }\r\n                        }\r\n                        education {\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            degree {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                            major {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                            institution {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      parents {\r\n                        id\r\n                        createdAt\r\n                        type\r\n                        category\r\n                        name\r\n                        createdBy {\r\n                          id\r\n                          createdAt\r\n                          fullName\r\n                          firstName\r\n                          avatarLetters\r\n                          email {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          realFirstName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          realLastName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          displayFirstName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          displayLastName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          phone {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          timezone {\r\n                            value {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                                name\r\n                                zones {\r\n                                  name\r\n                                  lat\r\n                                  long\r\n                                  countries {\r\n                                    code\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          bio {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          status {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          unavailabilities {\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              start\r\n                              end\r\n                              description {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                            }\r\n                          }\r\n                          organizations {\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              avatarLetters\r\n                              name {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                            }\r\n                          }\r\n                          education {\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              degree {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                              major {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                              institution {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        parents {\r\n                          id\r\n                          # contains other properties same as parent 'parents'\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              agreement {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  category\r\n                  mimeType\r\n                  size\r\n                  downloadUrl\r\n                  name\r\n                  modifiedAt\r\n                  modifiedBy {\r\n                    id\r\n                    createdAt\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    bio {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    unavailabilities {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        start\r\n                        end\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        avatarLetters\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                    education {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  children {\r\n                    total\r\n                    hasMore\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      type\r\n                      category\r\n                      name\r\n                      createdBy {\r\n                        id\r\n                        createdAt\r\n                        fullName\r\n                        firstName\r\n                        avatarLetters\r\n                        email {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        realFirstName {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        realLastName {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        displayFirstName {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        displayLastName {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        phone {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        timezone {\r\n                          value {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                              name\r\n                              zones {\r\n                                name\r\n                                lat\r\n                                long\r\n                                countries {\r\n                                  code\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        bio {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        status {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        unavailabilities {\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            start\r\n                            end\r\n                            description {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                          }\r\n                        }\r\n                        organizations {\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            avatarLetters\r\n                            name {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                          }\r\n                        }\r\n                        education {\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            degree {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                            major {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                            institution {\r\n                              value\r\n                              canRead\r\n                              canEdit\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      parents {\r\n                        id\r\n                        createdAt\r\n                        type\r\n                        category\r\n                        name\r\n                        createdBy {\r\n                          id\r\n                          createdAt\r\n                          fullName\r\n                          firstName\r\n                          avatarLetters\r\n                          email {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          realFirstName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          realLastName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          displayFirstName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          displayLastName {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          phone {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          timezone {\r\n                            value {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                                name\r\n                                zones {\r\n                                  name\r\n                                  lat\r\n                                  long\r\n                                  countries {\r\n                                    code\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          bio {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          status {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          unavailabilities {\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              start\r\n                              end\r\n                              description {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                            }\r\n                          }\r\n                          organizations {\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              avatarLetters\r\n                              name {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                            }\r\n                          }\r\n                          education {\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              degree {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                              major {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                              institution {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        parents {\r\n                          id\r\n                          # contains other properties same as parent 'parents'\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          rootDirectory {\r\n            id\r\n            createdAt\r\n            type\r\n            category\r\n            name\r\n            createdBy {\r\n              id\r\n              createdAt\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              email {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              phone {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              timezone {\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              bio {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              status {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              unavailabilities {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  start\r\n                  end\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              organizations {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  avatarLetters\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              education {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  degree {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  major {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            parents {\r\n              id\r\n              createdAt\r\n              type\r\n              category\r\n              name\r\n              createdBy {\r\n                id\r\n                createdAt\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                unavailabilities {\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    start\r\n                    end\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n                organizations {\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    avatarLetters\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n                education {\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              parents {\r\n                id\r\n                name\r\n                # contains other fields same as parent 'parents'\r\n              }\r\n            }\r\n            children {\r\n              total\r\n              hasMore\r\n              items {\r\n                id\r\n                createdAt\r\n                type\r\n                category\r\n                name\r\n                createdBy {\r\n                  id\r\n                  createdAt\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  email {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  phone {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  timezone {\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  bio {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  status {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  unavailabilities {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      start\r\n                      end\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                  organizations {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                  education {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      major {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                parents {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  category\r\n                  name\r\n                  createdBy {\r\n                    id\r\n                    createdAt\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    bio {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    unavailabilities {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        start\r\n                        end\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        avatarLetters\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                    education {\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  parents {\r\n                    id\r\n                    name\r\n                    # contains other fields same as parent 'parents'\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"language\": {\r\n      \"name\": \"{{languageName}}\",\r\n      \"displayName\": \"{{languageDisplayName}}\",\r\n      \"displayNamePronunciation\": \"{{languageDisplayNamePronunciation}}\",\r\n      \"isDialect\": false,\r\n      \"ethnologue\": {\r\n        \"id\": \"{{languageEthnologueId}}\",\r\n        \"code\": \"{{languageEthnologueCode}}\",\r\n        \"provisionalCode\": \"{{languageEthnologueProvisionalCode}}\",\r\n        \"name\": \"{{languageEthnologueName}}\",\r\n        \"population\": {{languageEthnologuePopulation}}\r\n      },\r\n      \"populationOverride\": {{languagePopulationOverride}},\r\n      \"registryOfDialectsCode\": \"{{languageRegistryOfDialectsCode}}\",\r\n      \"leastOfThese\": false,\r\n      \"leastOfTheseReason\": \"{{languageLeastOfTheseReason}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Engagement ( Create Project - Translation type )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d58bbe3-d5ca-43e4-903b-96f24668e736",
								"exec": [
									"var jsonData = pm.response.json();",
									"var id = jsonData.data.createProject.project.id;",
									"",
									"// Saving data for future use",
									"pm.globals.set(\"projectid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c2863cfc-859c-427c-a591-6a37d5f5c939",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"projectName\", \"ProjectName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"// Taking random value for the Project type from pre-defined possible values\r",
									"// var projTypeArray = [\r",
									"//     'Translation',\r",
									"//     'Internship'\r",
									"// ];\r",
									"// var randomNumber = Math.floor(Math.random()*projTypeArray.length);\r",
									"// pm.globals.set('projectType', projTypeArray[randomNumber]);\r",
									"\r",
									"\r",
									"pm.globals.set('locationId', 'X9uvqqN59EEcyGIw1xHPAOx7dXmYF4GXm20.aGPHWl13lMpmlvvsRADHNQ.Xepq3xRTSQDmV8NR0qDalA');\r",
									"pm.globals.set(\"mouStart\", moment().format(\"YYYY-MM-DD\"))\r",
									"\r",
									"\r",
									"var mouEnd = pm.variables.replaceIn('{{$randomDateFuture}}')\r",
									"pm.globals.set(\"mouEnd\", moment(mouEnd).format(\"YYYY-MM-DD\"));\r",
									"\r",
									"var estimatedSubmissionDate = pm.variables.replaceIn('{{$randomDateFuture}}')\r",
									"pm.globals.set(\"estimatedSubmission\", moment(estimatedSubmissionDate).format(\"YYYY-MM-DD\"));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createProject($input: CreateProjectInput!) {\r\n  createProject(input: $input) {\r\n    project {\r\n      id\r\n      createdAt\r\n      type\r\n      sensitivity\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      deptId {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      step {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      status\r\n      location {\r\n        value {\r\n          id\r\n          name {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          region {\r\n            value {\r\n              id\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              zone {\r\n                value {\r\n                  id\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  director {\r\n                    value {\r\n                      id\r\n                      email {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      phone {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      timezone {\r\n                        canRead\r\n                        canEdit\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      bio {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      status {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      unavailabilities {\r\n                        items {\r\n                          id\r\n                          description {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          start\r\n                          end\r\n                          createdAt\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                      }\r\n                      organizations {\r\n                        items {\r\n                          id\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          avatarLetters\r\n                          createdAt\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                      }\r\n                      education {\r\n                        items {\r\n                          id\r\n                          degree {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          major {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          institution {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          createdAt\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  createdAt\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              director {\r\n                value {\r\n                  id\r\n                  email {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  phone {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  timezone {\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  bio {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  status {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  unavailabilities {\r\n                    items {\r\n                      id\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                  }\r\n                  organizations {\r\n                    items {\r\n                      id\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      avatarLetters\r\n                      createdAt\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                  }\r\n                  education {\r\n                    items {\r\n                      id\r\n                      degree {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      major {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      createdAt\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                  }\r\n                  createdAt\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              createdAt\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          createdAt\r\n        }\r\n        canRead\r\n        canEdit\r\n      }\r\n      mouStart {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      mouEnd {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      estimatedSubmission {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      modifiedAt\r\n      avatarLetters\r\n      team {\r\n        total\r\n        hasMore\r\n        canCreate\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          #modifiedAt\r\n          user {\r\n            value {\r\n              id\r\n              createdAt\r\n              email {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              phone {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              timezone {\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              bio {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              status {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              unavailabilities {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  start\r\n                  end\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              organizations {\r\n                items {\r\n                  id\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  avatarLetters\r\n                  createdAt\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n              }\r\n              education {\r\n                canRead\r\n                hasMore\r\n                canCreate\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  degree {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  major {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          roles {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n        }\r\n      }\r\n      engagements {\r\n        total\r\n        hasMore\r\n        canCreate\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          status\r\n          ceremony {\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n              planned {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              estimatedDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              actualDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          completeDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          disbursementCompleteDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          communicationsCompleteDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          startDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          endDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          initialEndDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          lastSuspendedAt {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          lastReactivatedAt {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          statusModifiedAt {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          modifiedAt\r\n        }\r\n      }\r\n      budget {\r\n        value {\r\n          id\r\n          createdAt\r\n          status\r\n          records {\r\n            id\r\n            createdAt\r\n            fiscalYear {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            amount {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            organization {\r\n              value {\r\n                id\r\n                createdAt\r\n                name {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                avatarLetters\r\n              }\r\n              canRead\r\n              canEdit\r\n            }\r\n          }\r\n          total\r\n        }\r\n        canRead\r\n        canEdit\r\n      }\r\n      partnerships {\r\n        canRead\r\n        hasMore\r\n        canCreate\r\n        total\r\n        items {\r\n          id\r\n          createdAt\r\n          agreementStatus {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouStatus {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouStart {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouEnd {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          organization {\r\n            id\r\n            name {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            avatarLetters\r\n            createdAt\r\n          }\r\n          types {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mou {\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n              category\r\n              mimeType\r\n              name\r\n              size\r\n              modifiedAt\r\n              downloadUrl\r\n              createdBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              modifiedBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              children {\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  category\r\n                  name\r\n                  createdBy {\r\n                    id\r\n                    createdAt\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    bio {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    unavailabilities {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  parents {\r\n                    id\r\n                    createdAt\r\n                    type\r\n                    category\r\n                    name\r\n                    parents {\r\n                      id\r\n                      type\r\n                    }\r\n                    createdBy {\r\n                      id\r\n                      createdAt\r\n                      email {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      phone {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      timezone {\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      bio {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      status {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      unavailabilities {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          description {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          start\r\n                          end\r\n                        }\r\n                      }\r\n                      organizations {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          avatarLetters\r\n                        }\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          major {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          institution {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                total\r\n                hasMore\r\n              }\r\n              parents {\r\n                id\r\n                createdAt\r\n                type\r\n                category\r\n                name\r\n                parents {\r\n                  id\r\n                  type\r\n                  # also contains other fields as parent 'Parents'\r\n                }\r\n                createdBy {\r\n                  id\r\n                  createdAt\r\n                  email {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  phone {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  timezone {\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  bio {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  status {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  unavailabilities {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      major {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          agreement {\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n              category\r\n              name\r\n              parents {\r\n                id\r\n                createdAt\r\n                type\r\n                category\r\n                name\r\n                createdBy {\r\n                  id\r\n                  createdAt\r\n                  email {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  phone {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  timezone {\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  bio {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  status {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  unavailabilities {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      major {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                parents {\r\n                  id\r\n                  type\r\n                  # also contains other fields as parent 'Parents'\r\n                }\r\n              }\r\n              createdBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              mimeType\r\n              size\r\n              modifiedAt\r\n              modifiedBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              children {\r\n                total\r\n                hasMore\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  category\r\n                  name\r\n                  createdBy {\r\n                    id\r\n                    createdAt\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    bio {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    unavailabilities {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  parents {\r\n                    id\r\n                    createdAt\r\n                    type\r\n                    category\r\n                    name\r\n                    createdBy {\r\n                      id\r\n                      createdAt\r\n                      email {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      phone {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      timezone {\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      bio {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      status {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      unavailabilities {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          description {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          start\r\n                          end\r\n                        }\r\n                      }\r\n                      organizations {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          avatarLetters\r\n                        }\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          major {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          institution {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    parents {\r\n                      id\r\n                      type\r\n                      # also contains other fields as parent 'Parents'\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              downloadUrl\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n        }\r\n      }\r\n      rootDirectory {\r\n        id\r\n        createdAt\r\n        type\r\n        category\r\n        name\r\n        parents {\r\n          id\r\n          createdAt\r\n          type\r\n          category\r\n          name\r\n          parents {\r\n            id\r\n            name\r\n            type\r\n            # also contains other fields as parent 'parents'\r\n          }\r\n          createdBy {\r\n            id\r\n            createdAt\r\n            email {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            realFirstName {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            realLastName {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            displayFirstName {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            displayLastName {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            phone {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            timezone {\r\n              value {\r\n                name\r\n                lat\r\n                long\r\n                countries {\r\n                  code\r\n                  name\r\n                  zones {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              canRead\r\n              canEdit\r\n            }\r\n            bio {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            status {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            fullName\r\n            firstName\r\n            avatarLetters\r\n            unavailabilities {\r\n              canRead\r\n              hasMore\r\n              canCreate\r\n              total\r\n              items {\r\n                id\r\n                createdAt\r\n                description {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                start\r\n                end\r\n              }\r\n            }\r\n            organizations {\r\n              canRead\r\n              hasMore\r\n              canCreate\r\n              total\r\n              items {\r\n                id\r\n                createdAt\r\n                name {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                avatarLetters\r\n              }\r\n            }\r\n            education {\r\n              canRead\r\n              hasMore\r\n              canCreate\r\n              total\r\n              items {\r\n                id\r\n                createdAt\r\n                degree {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                major {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                institution {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        createdBy {\r\n          id\r\n          createdAt\r\n          email {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          realFirstName {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          realLastName {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          displayFirstName {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          displayLastName {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          phone {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          timezone {\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          bio {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          status {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          unavailabilities {\r\n            canRead\r\n            hasMore\r\n            canCreate\r\n            total\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              start\r\n              end\r\n            }\r\n          }\r\n          organizations {\r\n            canRead\r\n            hasMore\r\n            canCreate\r\n            total\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              avatarLetters\r\n            }\r\n          }\r\n          education {\r\n            canRead\r\n            hasMore\r\n            canCreate\r\n            total\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              major {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              institution {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n            }\r\n          }\r\n        }\r\n        children {\r\n          total\r\n          hasMore\r\n          items {\r\n            id\r\n            createdAt\r\n            type\r\n            category\r\n            name\r\n            createdBy {\r\n              id\r\n              createdAt\r\n              email {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              phone {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              timezone {\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              bio {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              status {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              unavailabilities {\r\n                canRead\r\n                hasMore\r\n                canCreate\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  start\r\n                  end\r\n                }\r\n              }\r\n              organizations {\r\n                canRead\r\n                hasMore\r\n                canCreate\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  avatarLetters\r\n                }\r\n              }\r\n              education {\r\n                canRead\r\n                hasMore\r\n                canCreate\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  degree {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  major {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            parents {\r\n              id\r\n              type\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"project\": {\r\n      \"name\": \"{{projectName}}\",\r\n      \"type\": \"Translation\",\r\n      \"mouStart\": \"{{mouStart}}\",\r\n      \"mouEnd\": \"{{mouEnd}}\",\r\n      \"estimatedSubmission\": \"{{estimatedSubmission}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Product ( Create Language Engagement )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01439424-5f01-4869-8aa9-ac244500a5ef",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var id = jsonData.data.createLanguageEngagement.engagement.id;\r",
									"pm.globals.set('languageEngagementId',id);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "743e2e40-5b3f-4d41-aa08-cd49dfee2247",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createLanguageEngagement($input: CreateLanguageEngagementInput!) {\r\n  createLanguageEngagement(input: $input) {\r\n    engagement {\r\n      id\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": \r\n  {\r\n    \"engagement\": \r\n    {\r\n      \"projectId\": \"{{projectid}}\",\r\n      \"languageId\": \"{{languageid}}\"\r\n      \r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Product ( Create Film )",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "aad854e9-69e5-426b-a4a6-100d1a7b7b19",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"filmName\", \"FilmName\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2f443fe7-87ea-4b86-b084-f2bed7e49841",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"var id = jsonData.data.createFilm.film.id;\r",
									"pm.globals.set(\"filmId\", id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createFilm($input: CreateFilmInput!) {\r\n  createFilm(input: $input) {\r\n    film {\r\n      id\r\n      createdAt\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      scriptureReferences {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          totalVerses\r\n          label\r\n          start {\r\n            book\r\n            bookName\r\n            label\r\n            chapter\r\n            verse\r\n          }\r\n          end {\r\n            book\r\n            bookName\r\n            label\r\n            chapter\r\n            verse\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"film\": {\r\n      \"name\": \"{{filmName}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5a424209-3db6-4f76-8d47-5db410f0d8b1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fbe316d9-5ad6-434d-a8c3-6e8e5e74bb35",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Create Product Success - with produces and ScriptRef",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "362b6990-0f08-4e71-a762-76ba355a35d0",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"\r",
									"    // Saving data for future use\r",
									"    pm.globals.set(\"productId\", id);\r",
									"});\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.createProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product approach\", function () {\r",
									"    var approach = jsonData.data.createProduct.product.approach;\r",
									"     pm.expect( (pm.globals.get('productApproach_array')).includes(approach) ).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.createProduct.product.legacyType;\r",
									"    pm.expect( (pm.globals.get('productLegacyType_array')).includes(legacyType) ).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"// scriptureReferences - PENDING Cases\r",
									"pm.test(\"Verify that scriptureReferences is not blank or null or empty BUG ADDED #867\", function () {\r",
									"    var scriptureReferences = jsonData.data.createProduct.product.scriptureReferences.value;\r",
									"    pm.expect(scriptureReferences).to.not.eql(null);\r",
									"    pm.expect(scriptureReferences).to.not.eql(\"\");\r",
									"    pm.expect(scriptureReferences).to.not.eql(\"[]\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "588d4aed-7bb4-4f09-ba56-98c34f2468ad",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Success ?? - Array Inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "971c2505-4100-4e99-b5f8-ff677926c7bc",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"\r",
									"    // Saving data for future use\r",
									"    pm.globals.set(\"productId\", id);\r",
									"});\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.createProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product approach\", function () {\r",
									"    var approach = jsonData.data.createProduct.product.approach;\r",
									"     pm.expect( (pm.globals.get('productApproach_array')).includes(approach) ).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.createProduct.product.legacyType;\r",
									"    pm.expect( (pm.globals.get('productLegacyType_array')).includes(legacyType) ).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"// scriptureReferences - PENDING Cases\r",
									"pm.test(\"Verify that scriptureReferences is not blank or null or empty BUG ADDED #867\", function () {\r",
									"    var scriptureReferences = jsonData.data.createProduct.product.scriptureReferences.value;\r",
									"    pm.expect(scriptureReferences).to.not.eql(null);\r",
									"    pm.expect(scriptureReferences).to.not.eql(\"\");\r",
									"    pm.expect(scriptureReferences).to.not.eql(\"[]\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4c69fc67-3be3-4b8f-91ea-8e93b98bb42f",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      \r\n    }\r\n  }\r\n}\r\n\r\n# \"scriptureReferences\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesBookStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n#       \"scriptureReferencesOverride\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": [\"Web\",\"Print\",\"Print\"],\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Success ?? - bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "18e9e3ed-eaf3-4590-aa61-817c972c7701",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"\r",
									"    // Saving data for future use\r",
									"    pm.globals.set(\"productId\", id);\r",
									"});\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.createProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product approach\", function () {\r",
									"    var approach = jsonData.data.createProduct.product.approach;\r",
									"     pm.expect( (pm.globals.get('productApproach_array')).includes(approach) ).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.createProduct.product.legacyType;\r",
									"    pm.expect( (pm.globals.get('productLegacyType_array')).includes(legacyType) ).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"// scriptureReferences - PENDING Cases\r",
									"pm.test(\"Verify that scriptureReferences is not blank or null or empty BUG ADDED #867\", function () {\r",
									"    var scriptureReferences = jsonData.data.createProduct.product.scriptureReferences.value;\r",
									"    pm.expect(scriptureReferences).to.not.eql(null);\r",
									"    pm.expect(scriptureReferences).to.not.eql(\"\");\r",
									"    pm.expect(scriptureReferences).to.not.eql(\"[]\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ec74ab7f-f721-4ff7-8528-1e340fe4afd5",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      \r\n    }\r\n  }\r\n}\r\n\r\n# \"scriptureReferences\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesBookStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n#       \"scriptureReferencesOverride\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"hjhjhj\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Success - Only Required Inputs ??",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f0e8240-0713-4041-b564-b7bad4d5f626",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.createProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product approach is null\", function () {\r",
									"    var approach = jsonData.data.createProduct.product.approach;\r",
									"    pm.expect(approach).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.createProduct.product.legacyType;\r",
									"    pm.expect((pm.globals.get('productLegacyType_array')).includes(legacyType)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product mediums are same as requested Uncomment Mediums from Query Output once BUG #860 resolve\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product purposes are empty\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value;\r",
									"    pm.expect(purposes).to.eql([]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product methodology is null\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product scriptureReferences are empty\", function () {\r",
									"    var scriptureReferences = jsonData.data.createProduct.product.scriptureReferences.value;\r",
									"    pm.expect(scriptureReferences).to.eql([]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d7fe3637-ff93-4a8e-a775-ceb20de276bf",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// pm.globals.set(\"scriptureReferencesBookStart\", \"ScriptureReferencesBookStart\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"// pm.globals.set(\"scriptureReferencesBookEnd\", \"ScriptureReferencesBookEnd\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// pm.globals.set(\"scriptureReferencesOverrideStart\", \"ScriptureReferencesOverrideStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"// pm.globals.set(\"scriptureReferencesOverrideEnd\", \"ScriptureReferencesOverrideEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"// pm.globals.set(\"produces\", 2);\r",
									"// pm.globals.set(\"chapter\", 5);\r",
									"// pm.globals.set(\"verse\", 5);\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output\r",
									"\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Mandatory Field Blank - engagementId ???",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7099abe-1294-4b7d-a48a-6c6f443a7c78",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test specific",
									"pm.test(\"PENDING >> Product is created with empty langEnagagement Id BUG Added #861 \", function () {",
									"    if (jsonData.data) {",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend",
									"    } else {",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");",
									"    }",
									"});",
									"",
									"// pm.test(\"Verify that error message is correct\", function () {",
									"//     var error_message = jsonData.errors[0].message;  ",
									"//     pm.expect(error_message).to.eql(\"Input validation failed\");",
									"// });",
									"",
									"// pm.test(\"Verify that error status is 400\", function () {",
									"//     var error_status = jsonData.errors[0].extensions.status;  ",
									"//     pm.expect(error_status).to.eql(400);",
									"// });",
									"",
									"// pm.test(\"Response time is less than 200ms\", function () {",
									"//     pm.expect(pm.response.responseTime).to.be.below(200);",
									"// });",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Mandatory Field Removed - engagementId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af6b61b1-acb7-441d-9bce-1b16e87ce8b9",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"engagementId\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - produces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6b8039b-f276-4a4b-a6cd-06abc5a6ab64",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"\r",
									"pm.test(\"PENDING >> Product is created with empty produces Id BUG ADDED #858\", function () {\r",
									"    if (jsonData.data) {\r",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f7314210-1801-49be-b516-214d495626b8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - produces - D",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79495740-547d-4fa1-b224-ddde96777d0a",
								"exec": [
									"// var jsonData = pm.response.json();\r",
									"// const moment = require('moment');\r",
									"\r",
									"// //Common Verification\r",
									"// pm.test(\"Status code is 200\", function () {\r",
									"//     pm.response.to.have.status(200);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Response time is less than 10000ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"// });\r",
									"\r",
									"// //Test specific\r",
									"\r",
									"// pm.test(\"PENDING >> Product is created with empty produces Id \", function () {\r",
									"//     if (jsonData.data) {\r",
									"//         pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"//     } else {\r",
									"//         pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"//     }\r",
									"// });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "713fef07-0337-4945-ad71-3dcd435b3521",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - mediums",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "330d7375-2d8d-47a5-89d3-4880151f6ed8",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMedium\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8f1f0fad-018c-47f1-9cc1-8aa4f9d97786",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - mediums ???",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d3af3f8-a262-4d57-8543-18bcaeeda72b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"\r",
									"pm.test(\"PENDING >> Cant return null for non-nullable field Mediums error NEARER BUG ADDED #860\", function () {\r",
									"    if (jsonData.errors) {\r",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"// pm.test(\"Verify that error message is correct\", function () {\r",
									"//     var error_message = jsonData.errors[0].message;\r",
									"//     pm.expect(error_message).to.include(\"does not exist in \\\"ProductMedium\\\" enum\");\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"//     var error_code = jsonData.errors[0].extensions.code;\r",
									"//     pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"// });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "615c1af1-c975-4ac2-a4c0-308938c5080b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e810e845-21db-4a7c-8334-43e535469838",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductPurpose\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e5051c2f-3997-4fca-bf70-2f91bb086f3e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"purposes\": \"\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bd972d8-1b5e-44c7-8c93-2a7af359df64",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product purposes are empty\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value;\r",
									"    pm.expect(purposes).to.eql([]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "774cddc8-b1ac-4d67-b451-6793811b496c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77f1d851-e6ee-4b63-a3f4-67de36214523",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMethodology\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e67f1141-ad62-41eb-928d-6ece065ab05d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41f45839-acd9-4556-a837-47e78d9c39ec",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product methodology is null\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value;\r",
									"    pm.expect(methodology).to.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9bcb832a-8569-4887-b5a6-a7546840b328",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field - scriptureReferences ????????",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15ae33fe-0987-4b47-b191-404dba76dfe9",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"PENDING >> Product Request hangup due to scripture BUG ADDED #867 \", function () {\r",
									"    if (jsonData.data) {\r",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"    }\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify that error message is correct\", function () {\r",
									"//     var error_message = jsonData.errors[0].message;  \r",
									"//     pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify that error status is 400\", function () {\r",
									"//     var error_status = jsonData.errors[0].extensions.status;  \r",
									"//     pm.expect(error_status).to.eql(400);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Response time is less than 200ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"// });\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e1efa6a8-f970-4a21-8f0b-48163982e5b1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field - scriptureReferencesOverride????????",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efa3741f-fc0a-4c05-89a6-c06ffe4c53e7",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"PENDING >> Product Request hangup due to scripture FIELD BUG RAISED #859 \", function () {\r",
									"    if (jsonData.data) {\r",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"    }\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify that error message is correct\", function () {\r",
									"//     var error_message = jsonData.errors[0].message;  \r",
									"//     pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"// });\r",
									"\r",
									"// pm.test(\"Verify that error status is 400\", function () {\r",
									"//     var error_status = jsonData.errors[0].extensions.status;  \r",
									"//     pm.expect(error_status).to.eql(400);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Response time is less than 200ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"// });\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f3060052-d12b-43d7-b0c1-a767347ad1c6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - engagementId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed387617-bcde-4531-bc4f-0ab3364bc127",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"engagementId\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# \"scriptureReferences\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesBookStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n#       \"scriptureReferencesOverride\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId1\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - produces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88ce4b40-9445-47bf-bc04-14dc7712094d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"produces\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces1\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - mediums",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee337397-c8fb-4612-9473-3664cc970292",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"mediums\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums1\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35a644a3-a8ae-4fca-a712-d580a353e4ef",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"purposes\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes1\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6c259be-93e0-46b9-bb73-f6223391e42e",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"methodology\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology1\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c7182cb-cbd7-4a39-8976-a9360126a629",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"scriptureReferences\\\" or \\\"scriptureReferencesOverride\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences1\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef start",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58be9b70-d317-4280-a56a-43941aeda41b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"start\\\" of required type \\\"ScriptureReferenceInput!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start1\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef start book",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "990af60f-53bd-48d2-889d-ce36c89c31d5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book1\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef start chapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eeed53a0-0365-49ca-b696-7dfda68dbd5c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"chapter\\\" of required type \\\"Int!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter1\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef start verse",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbdd067b-7081-4124-99f6-d2f3d056e886",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"verse\\\" of required type \\\"Int!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse1\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef end",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "233b1f9c-efb9-4397-bf89-2e33e638440b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"end\\\" of required type \\\"ScriptureReferenceInput!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end1\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef end book",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4865548b-bf61-44c0-a4d8-7459b543a495",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book1\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef end chapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c70a098b-594a-4ded-a71a-9d338203fc66",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"chapter\\\" of required type \\\"Int!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter1\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef end verse",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83da2fec-c669-4032-9fe2-b33161b9f4e9",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"verse\\\" of required type \\\"Int!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse1\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5322a5b2-f47d-4d9b-b08c-2269a62a2345",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"scriptureReferencesOverride\\\" or \\\"scriptureReferences\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride1\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride start",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f320aeca-c54a-45c8-971a-5678c7468fe4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"start\\\" of required type \\\"ScriptureReferenceInput!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start1\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride start book",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "798e67b0-d29c-445d-8b92-adbd6118e72d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book1\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride start chapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a9f73dd-17a2-4612-b5e5-d76ffd5c2124",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"chapter\\\" of required type \\\"Int!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter1\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride start verse",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "360ee714-e901-4c1b-96cc-f8708974374c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"verse\\\" of required type \\\"Int!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse1\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride end",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a38772c-b40b-46a6-83af-3a90b65bb1b1",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"end\\\" of required type \\\"ScriptureReferenceInput!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end1\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride end book",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69468f49-e476-42ad-862c-2f57f458dde5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book1\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride end chapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e239dff-910e-4e88-a5fc-9efb968a5e4b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"chapter\\\" of required type \\\"Int!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter1\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride end verse",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d4796ff-178e-4eae-a360-86c52099ff53",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"verse\\\" of required type \\\"Int!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse1\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - engagementId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be773db9-7206-4d3c-8040-f69ab97370d8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"failed to create default product\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 500\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;",
									"    pm.expect(error_status).to.eql(500);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3dc4cdc7-3139-41e2-bcea-d89afef529d3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# \"scriptureReferences\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesBookStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n#       \"scriptureReferencesOverride\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"!@#$ 111 \",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - produces ???",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01712414-916f-4cdc-9823-1129cc138cf3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"PENDING >> Product created with any invalid inputs to Produces BUG ADDED #858\", function () {",
									"    if (jsonData.data) {",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend",
									"    } else {",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e4b391ae-08bd-409b-b5c4-59d2d9bc7739",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# \"scriptureReferences\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesBookStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n#       \"scriptureReferencesOverride\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"!@# ^&*( ()_\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - mediums",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45e90d03-b996-4034-95c3-e600f6557d67",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMedium\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a4d565c3-be32-46ef-8a8d-c4a30344af49",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# \"scriptureReferences\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesBookStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n#       \"scriptureReferencesOverride\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"!@# %^& lkflk\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c4cb344-9d84-4c97-9ff1-14dbaf360526",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductPurpose\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fe041e72-4601-46f7-920f-8a049df5e207",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# \"scriptureReferences\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesBookStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n#       \"scriptureReferencesOverride\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"~ ! ) _ =\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f07d40e9-cf9c-4b5d-85f7-a458530c07e3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMethodology\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "67be521a-f55b-4658-8010-9ae7c588df27",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# \"scriptureReferences\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesBookStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n#       \"scriptureReferencesOverride\": {\r\n#         \"start\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         },\r\n#         \"end\": {\r\n#           \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n#           \"chapter\": {{chapter}},\r\n#           \"verse\": {{verse}}\r\n#         }\r\n#       },\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"++ __ 99 \"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Success ??",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f293d57-6f83-436e-9cad-08ee207e5e34",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var product_data = JSON.parse(pm.globals.get(\"product_data\"));;\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verifying product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product's createdAt\", function () {\r",
									"    var createdAt = jsonData.data.product.createdAt;\r",
									"    pm.expect(createdAt).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product approach\", function () {\r",
									"    var approach = jsonData.data.product.approach;\r",
									"    pm.expect(approach).to.eql(product_data.approach);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.product.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product mediums\", function () {\r",
									"    var mediums = jsonData.data.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(product_data.mediums.value[0]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product purposes\", function () {\r",
									"    var purposes = jsonData.data.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(product_data.purposes.value[0]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(product_data.methodology.value);\r",
									"});\r",
									"\r",
									"// scriptureReferences - PENDING Cases\r",
									"pm.test(\"Verifying that scriptureReferences is not blank or null or empty BUG ADDED #867\", function () {\r",
									"    var scriptureReferences = jsonData.data.product.scriptureReferences.value\r",
									"    pm.expect(scriptureReferences).to.not.eql(null);\r",
									"    pm.expect(scriptureReferences).to.not.eql(\"\");\r",
									"    pm.expect(scriptureReferences).to.not.eql([]); // This will pass once value back to this Object\r",
									"    if (typeof scriptureReferences !== typeof [])\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5f1d0136-78e6-477c-b075-dd650355dfaf",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"{{productId}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Mandatory Field Blank - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4638ec9-14ab-4270-9948-bfa805a40b88",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is 400\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that education error message is correct\", function () {\r",
									"    var error_education_message = jsonData.errors[0].extensions.errors.id.IsShortId;  \r",
									"    pm.expect(error_education_message).to.eql(\"Invalid ID\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1c44b0ce-30ec-424d-9e35-1fe2458d6cdb",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Mandatory Field Removed - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8216d0e5-3ea8-4d27-87bf-8a95f47c51aa",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0ac21535-9db5-46de-9495-9db7fc552624",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Parameter Mismatch - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "765cd1f8-5a5f-4a34-8d6f-059e0768d6a4",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "da02e271-645f-4747-bbaa-96bcc0d7358c",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id1\": \"{{productId}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Parameter Invalid - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73152b00-302e-45ef-bad8-9ce96a14e013",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is 400\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that education error message is correct\", function () {\r",
									"    var error_education_message = jsonData.errors[0].extensions.errors.id.IsShortId;  \r",
									"    pm.expect(error_education_message).to.eql(\"Invalid ID\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d37a39f7-75c4-4ae2-8c70-e848349ff16d",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n          bookName\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"+++ __ * // id\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Success ???",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0776b109-8bd6-4ffb-930c-cfba599797de",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var product_data = JSON.parse(pm.variables.get(\"product_data\"));\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.updateProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's createdAt\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    pm.expect(time).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's approach\", function () {\r",
									"    var approach = jsonData.data.updateProduct.product.approach;\r",
									"    pm.expect(approach).to.eql(product_data.approach);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.updateProduct.product.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.updateProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.updateProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.updateProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"// ScriptureReferences CASES PENDING\r",
									"pm.test(\"PENDING >> ScriptureReferences CASES PENDING + details not updated BUG ADDED #866\", function () {\r",
									"    if (jsonData.data) {\r",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "91d4f3f5-2357-43ec-88d5-192ed74f8cae",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateProduct($input: UpdateProductInput!) {\r\n  updateProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# {\r\n#   \"input\": {\r\n#     \"product\": {\r\n#       \"id\": \"QOr4ZfTnxk\",\r\n#       \"mediums\": \"EBook\",\r\n#       \"purposes\": \"ChurchLife\",\r\n#       \"methodology\": \"Render\",\r\n#       \"produces\": \"\"\r\n#     }\r\n#   }\r\n# }\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"id\": \"{{productId}}\",\r\n      \"mediums\" : \"{{productMediums}}\",\r\n      \"purposes\" : \"{{productPurposes}}\",\r\n      \"methodology\" : \"{{productMethodology}}\",\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Success - Array Inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28e453d9-b27a-4f24-8388-3386fe678490",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var product_data = JSON.parse(pm.variables.get(\"product_data\"));\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.updateProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's createdAt\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    pm.expect(time).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's approach\", function () {\r",
									"    var approach = jsonData.data.updateProduct.product.approach;\r",
									"    pm.expect(approach).to.eql(product_data.approach);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.updateProduct.product.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.updateProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.updateProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.updateProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"// ScriptureReferences CASES PENDING\r",
									"pm.test(\"PENDING >> ScriptureReferences CASES PENDING + details not updated BUG ADDED #866\", function () {\r",
									"    if (jsonData.data) {\r",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9b45b132-956e-4a0a-9395-fc6d05b174b3",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateProduct($input: UpdateProductInput!) {\r\n  updateProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# {\r\n#   \"input\": {\r\n#     \"product\": {\r\n#       \"id\": \"QOr4ZfTnxk\",\r\n#       \"mediums\": \"EBook\",\r\n#       \"purposes\": \"ChurchLife\",\r\n#       \"methodology\": \"Render\",\r\n#       \"produces\": \"\"\r\n#     }\r\n#   }\r\n# }\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"id\": \"{{productId}}\",\r\n      \"mediums\" : [\"Print\",\"Web\"],\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Success - Only Required Inputs ???",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba47f6af-13be-400c-9f46-33b30a1843c6",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var product_data = JSON.parse(pm.variables.get(\"product_data\"));\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"// Cases of null , \"\" and [] will be here once issue fixed\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.updateProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's createdAt\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    pm.expect(time).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's approach\", function () {\r",
									"    var approach = jsonData.data.updateProduct.product.approach;\r",
									"    pm.expect(approach).to.eql(product_data.approach);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.updateProduct.product.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.updateProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.updateProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.updateProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"// ScriptureReferences CASES PENDING\r",
									"pm.test(\"PENDING >> ScriptureReferences CASES PENDING + details not updated BUG ADDED #866\", function () {\r",
									"    if (jsonData.data) {\r",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bc217303-4da4-4c0b-9cbf-18b6dec96351",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateProduct($input: UpdateProductInput!) {\r\n  updateProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# {\r\n#   \"input\": {\r\n#     \"product\": {\r\n#       \"id\": \"QOr4ZfTnxk\",\r\n#       \"mediums\": \"EBook\",\r\n#       \"purposes\": \"ChurchLife\",\r\n#       \"methodology\": \"Render\",\r\n#       \"produces\": \"\"\r\n#     }\r\n#   }\r\n# }\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"id\": \"{{productId}}\"\r\n      \r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf0a8fcd-32fa-4851-95a8-aa69e48b52a7",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var product_data = JSON.parse(pm.variables.get(\"product_data\")); // Get stored product object\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - Pagination\r",
									"pm.test(\"Verify that total is greater than Zero\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    pm.expect(total).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that hasMore is correct\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    var hasMore = jsonData.data.products.hasMore;\r",
									"    if (Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) < total) {\r",
									"        pm.expect(hasMore).to.eql(true);\r",
									"    } else {\r",
									"        pm.expect(hasMore).to.eql(false);\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that number of items returned are exact\", function () {\r",
									"    var total = jsonData.data.products.total;                  // total returned in response\r",
									"    var returneditems = jsonData.data.products.items.length;   // no. of items returned in response array\r",
									"    var itemCount = Number(pm.globals.get('itemCount'));    // no. of items per page\r",
									"    var page = Number(pm.globals.get('page'));              // page number\r",
									"    var expectedItems = itemCount * page;                   // items we are expecting\r",
									"\r",
									"    if (expectedItems <= total) {\r",
									"        pm.expect(returneditems).to.eql(itemCount);\r",
									"    } else {\r",
									"        if ((expectedItems - total) < itemCount) {\r",
									"            var lastItems = total - ((itemCount * (page - 1)));   // items in last page\r",
									"            pm.expect(returneditems).to.eql(lastItems);\r",
									"        }\r",
									"    }\r",
									"});\r",
									"\r",
									"// SORTING AND FILTER TESTS\r",
									"pm.test(\"Verify that items are sorted by 'status' and ordered by requested order \", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"    if (pm.globals.get('order') == \"ASC\") {\r",
									"        var expectedSortedOrder = lodash.orderBy(responseBody, ['status'], ['asc']);\r",
									"        pm.expect(responseBody).to.eql(expectedSortedOrder);\r",
									"    } else {\r",
									"        var expectedSortedOrder = lodash.orderBy(responseBody, ['status'], ['desc']);\r",
									"        pm.expect(responseBody).to.eql(expectedSortedOrder);\r",
									"    }\r",
									"\r",
									"});\r",
									"\r",
									"// Verifying recently created product's information with product object returned within items array\r",
									"\r",
									"// get Product object first having same id as recently created Product's id\r",
									"var myProduct = lodash.find(jsonData.data.products.items, ['id', product_data.id]);\r",
									"\r",
									"if (myProduct == undefined) return; // Safe to return if recent product is not within first page\r",
									"\r",
									"console.log(\"myProduct =>\", myProduct);\r",
									"console.log(\"product_data =>\", product_data);\r",
									"\r",
									"\r",
									"pm.test(\"Verifying product's createdAt\", function () {\r",
									"    var time = myProduct.createdAt;\r",
									"    pm.expect(time).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product approach\", function () {\r",
									"    var approach = myProduct.approach;\r",
									"    pm.expect(approach).to.eql(product_data.approach);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product legacyType\", function () {\r",
									"    var legacyType = myProduct.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product mediums\", function () {\r",
									"    var mediums = myProduct.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(product_data.mediums.value[0]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product purposes\", function () {\r",
									"    var purposes = myProduct.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(product_data.purposes.value[0]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product methodology\", function () {\r",
									"    var methodology = myProduct.methodology.value\r",
									"    pm.expect(methodology).to.eql(product_data.methodology.value);\r",
									"});\r",
									"\r",
									"// scriptureReferences - PENDING Cases\r",
									"pm.test(\"Verifying product scriptureReferences - PENDING Cases\", function () {\r",
									"    var methodology = myProduct.methodology.value\r",
									"    pm.expect(true).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that items are filtered by requested Product approach \", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"        var expectedFilter = _.filter(responseBody, { 'approach': pm.globals.get('product_FilterApproach') });\r",
									"    pm.expect(responseBody).to.eql(expectedFilter);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that items are filtered by requested Product methodology\", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"    // var multifilters = _.filter(responseBody, function (item) {\r",
									"    //     return item.methodology.value === pm.globals.get('product_FilterMethodology');\r",
									"    // });\r",
									"\r",
									"    var multifilters = _.filter(responseBody, item => item.methodology.value === pm.globals.get('product_FilterMethodology') );\r",
									"    pm.expect(responseBody).to.eql(multifilters);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "14045d7e-ebe4-4b90-998b-805cd94f212f",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - total",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "baf59506-e797-471b-a440-218b531601ab",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - total\r",
									"pm.test(\"Verify that total is greater than Zero\", function () {\r",
									"    var total = jsonData.data.products.total;  \r",
									"    pm.expect(total).to.be.above(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f4bef1f8-59c7-4c28-a380-dfdc91b3101e",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - hasMore - true",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "695348c1-0cf2-4b2a-8049-962772281618",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - hasMore\r",
									"pm.test(\"Verify that hasMore is true Only when product items are still available\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    var hasMore = jsonData.data.products.hasMore;  \r",
									"    if(Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) < total){\r",
									"        pm.expect(hasMore).to.eql(true);\r",
									"    } else {\r",
									"        pm.expect(hasMore).to.eql(false);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39b8524e-72fb-4d1c-a3ad-bbc353cb382d",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - hasMore - false",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63c0450d-7d28-4265-bc04-57ac1c4ec59e",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - hasMore\r",
									"pm.test(\"Verify that hasMore is false Only when no more product items available\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    var hasMore = jsonData.data.products.hasMore;  \r",
									"    if(Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) >= total){\r",
									"        pm.expect(hasMore).to.eql(false);\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "71a4cb95-cff2-4743-a2da-543bf19ad295",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a202f0e-b608-4024-b077-78e793ee793a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - items\r",
									"pm.test(\"Verify that number of items returned are exact\", function () {\r",
									"    var total = jsonData.data.products.total;                  // total returned in response\r",
									"    var returneditems = jsonData.data.products.items.length;   // no. of items returned in response array\r",
									"    var itemCount = Number(pm.globals.get('itemCount'));    // no. of items per page\r",
									"    var page = Number(pm.globals.get('page'));              // page number\r",
									"    var expectedItems = itemCount * page;                   // items we are expecting\r",
									"\r",
									"    if (expectedItems <= total) {\r",
									"        pm.expect(returneditems).to.eql(itemCount);\r",
									"    } else {\r",
									"        if ((expectedItems - total) < itemCount) {\r",
									"            var lastItems = total - ((itemCount * (page - 1)));   // items in last page\r",
									"            pm.expect(returneditems).to.eql(lastItems);\r",
									"        }\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b69b1767-a662-4e67-aa25-4b5c6a0ec3b1",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - createdAt sorting ASC",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fa153f0-8896-492d-8956-7446bc57611a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - Name sorting ASC\r",
									"pm.test(\"Verify that items are sorted by 'createdAt' and orderd by 'ASC' order \", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"    var expectedSortedOrder = lodash.orderBy(responseBody, ['createdAt'], ['asc'])\r",
									"    pm.expect(responseBody).to.eql(expectedSortedOrder);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e61439d-42dc-42d6-99b1-c0879a7427fb",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - createdAt sorting DESC",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37d0248a-abbf-408f-9ad8-17e77031d396",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - Name sorting DESC\r",
									"pm.test(\"Verify that items are sorted by 'createdAt' and orderd by 'DESC' order \", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"    var expectedSortedOrder = lodash.orderBy(responseBody, ['createdAt'], ['desc'])\r",
									"    pm.expect(responseBody).to.eql(expectedSortedOrder);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1bdb73f1-02bf-4778-8d1d-9e88c38b44a0",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Filter Products ( Create Product )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cce1f687-1220-4f5c-9270-f0bff88235d0",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Saving data for future use - Filter by approach\r",
									"var filter_approach = jsonData.data.createProduct.product.approach;\r",
									"pm.globals.set(\"product_FilterApproach\", filter_approach);\r",
									"\r",
									"// Saving data for future use - Filter by methodology\r",
									"var filter_methodology = jsonData.data.createProduct.product.methodology.value\r",
									"pm.globals.set(\"product_FilterMethodology\", filter_methodology);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9a281f1c-e751-4459-be29-e37187213f80",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'OtherOralTranslation',\r",
									"    'BibleStories',\r",
									"    'BibleStorying',\r",
									"    'OneStory',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - filter by approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75e0eaec-34d7-45b0-86e2-5fb097be9526",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - Filter by approach\r",
									"pm.test(\"Verify that items are filtered by requested Product approach \", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"        var expectedFilter = _.filter(responseBody, { 'approach': pm.globals.get('product_FilterApproach') });\r",
									"    pm.expect(responseBody).to.eql(expectedFilter);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ed36f500-749c-43d2-86bf-0f69a2386828",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - filter by methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23efe867-9de5-48a0-83ca-068318ad6173",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - Filter by methodology\r",
									"pm.test(\"Verify that items are filtered by requested Product methodology\", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"    var multifilters = _.filter(responseBody, item => item.methodology.value === pm.globals.get('product_FilterMethodology') );\r",
									"    pm.expect(responseBody).to.eql(multifilters);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1042f9e2-edf3-48a2-93f5-86a91ad8b2d7",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Removed  - count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d04d9441-8769-4072-a6f3-9ee7f2b55c33",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that number of items returned is equal to total\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    var items = jsonData.data.products.items.length;\r",
									"    if (total <= 25)    // 25 is maximum db items limit returned per page when count is not specified\r",
									"        pm.expect(items).to.eql(total);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "93162b59-c4dd-45d9-a1ea-602edbc1610f",
								"exec": [
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\" : 80,\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Blank - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6a1df09-2551-4b87-b0fa-ea3ac88d5005",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"PENDING >> Products returned for blank sort field \", function () {\r",
									"    if (jsonData.data) {\r",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6b221cbe-f07c-4616-a3f9-4e2ed1c6ac7b",
								"exec": [
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Blank - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05670ee9-761c-4d1f-9dcc-c7d971ee1578",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"Order\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5d21b707-7891-44e9-9b38-50f37f7bf0cf",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Blank - Filter approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54bfdbeb-9dbb-4d3a-a94a-bdef811392b0",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductApproach\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ea26c8c8-d446-4389-9d28-3ac7f5b01300",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Blank - Filter methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6a69ddd-6e70-443f-983b-4de6e672837f",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMethodology\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "47636a19-3542-4a5a-b482-86c35acee227",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"methodology\": \"\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfa47357-329b-4e8e-a61f-4e88b6cf0355",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"count\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bbd39d24-451d-4bb0-ac52-84704bdb642b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count1\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - page",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02f84f1b-f06b-4523-b023-3befacc2f666",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"page\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d6477b9-c1f7-4bc5-b5b7-2adb8478f7d3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page1\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb05eea7-42f2-4bfd-85f6-e89b5056e745",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"sort\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8226a7c1-6bc5-488c-b6c2-2d3fb3a4beb8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort1\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47daac8c-4243-4bf8-ab3e-e4e83914dc5c",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"order\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "655a0c91-19db-4939-97f1-2196e8f715f2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order1\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a815c4b-cc43-4653-af23-e57825a8f823",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"filter\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "77b20727-b738-4e68-8376-19259acbdd6b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter1\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - filter approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1be30ebf-9ce1-4874-83e2-95b2417cc1ba",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductFilters\\\". Did you mean \\\"approach\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "55c83bb7-d2d4-460f-96a7-451b71222ace",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach1\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - filter methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "821c0315-0d39-4ab0-97da-067b788bb161",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductFilters\\\". Did you mean \\\"methodology\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "74cc0340-d063-4d90-981f-4ae5eaa4f8d2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology1\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - count min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abb0784b-15ac-4485-98c4-ce4a6e8426c6",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that count error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].extensions.errors.count.min;  \r",
									"    pm.expect(error_message).to.eql(\"count must not be less than 1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "61acd941-9df6-4b2d-82c4-0735c26fe7f2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": 0,\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - count max",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ac28254-a246-44d7-9de2-77e3fcd9eafc",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that count error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].extensions.errors.count.max;  \r",
									"    pm.expect(error_message).to.eql(\"count must not be greater than 100\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ec6219e5-a2f1-4b0b-8b8d-8832c0bb5a79",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": 500,\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - page",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5541c100-9655-40c6-8c1c-4dcf1866eb6a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that page error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].extensions.errors.page.min;  \r",
									"    pm.expect(error_message).to.eql(\"page must not be less than 1\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1417f1c4-0448-47e9-ad26-2649b3f7c7c2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": 0,\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f430b70-5575-46c8-afba-78f9eb7434a0",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"PENDING >> Sort Field should not accept any unusual characters/Empty String. Backend side Pending\", function () {\r",
									"    if (jsonData.data) {\r",
									"        pm.expect(\"Backend\").to.eql(\"PENDING\"); // fail forcefully until validation done from backend\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASE\").to.eql(\"PENDING\");\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1f562a32-a87d-4c1a-8041-c7712d9a1618",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"asdfghj\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76d1bc2a-6f97-42a8-8a58-421235498e3d",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"Order\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "beab66a5-317f-4e29-b7db-1ff3de81181e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"!@#$%^&*(\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - filter Approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77880a70-ebec-44d4-aef1-5b656ebc2201",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductApproach\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e1414892-cc14-42ef-a27b-c143954bdc98",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"  ^ & ( ) \",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - filter Methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df5ce31b-c6a1-4785-bf4c-178b1eb1d00d",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMethodology\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f12a080b-f742-403c-b713-bcb3a9a5a9bd",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      # mediums {\r\n      #   value\r\n      #   canEdit\r\n      #   canRead\r\n      # }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            bookName\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"******\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b0674ee-c99c-43bf-b0bd-42fa9bd78c9a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that Product is deleted\", function () {\r",
									"    pm.expect(jsonData.data.deleteProduct).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id:ID!)\r\n{\r\n  deleteProduct(id:$id)\r\n}",
								"variables": "{\r\n  \"id\": \"{{productId}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Mandatory Field Blank - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5200f426-8c6b-46d2-8847-4bf1d56b383d",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is 400\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that education error message is correct\", function () {\r",
									"    var error_education_message = jsonData.errors[0].extensions.errors.id.IsShortId;  \r",
									"    pm.expect(error_education_message).to.eql(\"Invalid ID\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id:ID!)\r\n{\r\n  deleteProduct(id:$id)\r\n}",
								"variables": "{\r\n  \"id\": \"\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Mandatory Field Removed - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9044c4d8-c3ad-4512-bf1d-59172155dabc",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id:ID!)\r\n{\r\n  deleteProduct(id:$id)\r\n}",
								"variables": "{\r\n  \r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Parameter Mismatch - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a72bb1f1-509c-4629-95cf-9cf8d28051b2",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id:ID!)\r\n{\r\n  deleteProduct(id:$id)\r\n}",
								"variables": "{\r\n  \"id1\" : \"{{productId}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Parameter Invalid - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "445b2a93-1c8f-45d4-bfc9-b09b537feea7",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that language error message is correct\", function () {\r",
									"    var error_education_message = jsonData.errors[0].extensions.errors.id.IsShortId;  \r",
									"    pm.expect(error_education_message).to.eql(\"Invalid ID\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id:ID!)\r\n{\r\n  deleteProduct(id:$id)\r\n}",
								"variables": "{\r\n  \"id\" : \" || *& gg test id\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"protocolProfileBehavior": {}
}