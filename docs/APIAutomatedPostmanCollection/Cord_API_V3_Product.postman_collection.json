{
	"info": {
		"_postman_id": "2df3a95d-68d6-40ee-aeba-1f9abe016740",
		"name": "Cord_API_V3_Product",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pre-req ( Session + Register + Login + GrantPower ) for Product",
			"item": [
				{
					"name": "Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"pm.globals.set(\"token\", response.data.session.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "# Write your query or mutation here\r\nquery {\r\n  session(browser: false) {\r\n    user {\r\n      id,\r\n      email\r\n      {\r\n        value\r\n      }\r\n      realFirstName\r\n      {\r\n        value\r\n      }\r\n      createdAt\r\n      canDelete\r\n      displayLastName\r\n      {\r\n         value\r\n      }\r\n      \r\n      \r\n      \r\n    },\r\n    token\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"rootAdminUserid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    powers\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      canDelete\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          #canDelete\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n      }\r\n      organizations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          avatarLetters\r\n          name {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          address {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          locations {\r\n            total\r\n            hasMore\r\n            canRead\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n\r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      partners {\r\n        total\r\n        hasMore\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          modifiedAt\r\n          types {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          financialReportingTypes {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          pmcEntityCode {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          globalInnovationsClient {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          active {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          address {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          organization {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              avatarLetters\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              address {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              locations {\r\n                total\r\n                hasMore\r\n                canRead\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n          pointOfContact {\r\n            value {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              unavailabilities {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  #canDelete\r\n                  start\r\n                  end\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              organizations {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  avatarLetters\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  address {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  locations {\r\n                    total\r\n                    hasMore\r\n                    canRead\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n\r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              education {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  degree {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  major {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              partners {\r\n                canCreate\r\n                canRead\r\n                hasMore\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  modifiedAt\r\n                  types {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  financialReportingTypes {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pmcEntityCode {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  globalInnovationsClient {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  active {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  address {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  organization {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      address {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      locations {\r\n                        total\r\n                        hasMore\r\n                        canRead\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          type {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n\r\n                          isoAlpha3 {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          fundingAccount {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              accountNumber {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoCountry {\r\n                            country\r\n                            alpha2\r\n                            alpha3\r\n                            numeric\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pointOfContact {\r\n                    canEdit\r\n                    canRead\r\n                    value {\r\n                      id\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              locations {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              knownLanguages {\r\n                proficiency\r\n                language {\r\n                  id\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      education {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          degree {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          major {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          institution {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      locations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          type {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoAlpha3 {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoCountry {\r\n            country\r\n            alpha2\r\n            alpha3\r\n            numeric\r\n          }\r\n          fundingAccount {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              accountNumber {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      knownLanguages {\r\n        proficiency\r\n        language {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"email\": \"{{rootAdminLogin_email}}\",\r\n        \"password\": \"{{rootAdminLogin_password}}\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Grant Power to RootAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation grantPower($userId: ID!,$power:Power!) {\r\n  grantPower(userId:$userId,power:$power)\r\n}\r\n",
								"variables": "{\r\n    \"userId\": \"{{rootAdminUserid}}\",\r\n    \"power\": \"GrantPower\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// This is safe check to prevent failing futher cases If the Root User is already Created\r",
									"if (jsonData.errors) {\r",
									"    if (jsonData.errors.length) return;\r",
									"}\r",
									"\r",
									"//Saving data for future use\r",
									"var id = jsonData.data.register.user.id;\r",
									"pm.globals.set(\"userid\", id);\r",
									"\r",
									"var user = JSON.stringify(jsonData.data.register.user);\r",
									"pm.globals.set(\"user_data\", user);\r",
									"\r",
									"var email = jsonData.data.register.user.email.value;\r",
									"pm.globals.set(\"email\", email);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"realFirstName\", \"FirstName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"realLastName\", \"LastName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"email\", \"email\" + moment().format(\"DDMYYYYhhmmss\") + \"@test.com\");\r",
									"pm.globals.set(\"password\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"displayFirstName\", \"DisplayFirstName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"displayLastName\", \"DisplayLastName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));\r",
									"\r",
									"var timezoneObject = {\r",
									"    \"name\": \"Europe/Andorra\",\r",
									"    \"lat\": 42.5,\r",
									"    \"long\": 1.5167,\r",
									"    \"countries\": [\r",
									"        {\r",
									"            \"code\": \"AD\",\r",
									"            \"name\": \"Andorra\",\r",
									"            \"zones\": [\r",
									"                {\r",
									"                    \"name\": \"Europe/Andorra\",\r",
									"                    \"lat\": 42.5,\r",
									"                    \"long\": 1.5167,\r",
									"                    \"countries\": [\r",
									"                        {\r",
									"                            \"code\": \"AD\",\r",
									"                            \"name\": \"Andorra\"\r",
									"                        }\r",
									"                    ]\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ]\r",
									"};\r",
									"pm.globals.set('timezoneObject', JSON.stringify(timezoneObject));\r",
									"pm.globals.set(\"timezone\", timezoneObject.name);\r",
									"\r",
									"pm.globals.set(\"about\", \"I'm Tester\");\r",
									"\r",
									"pm.globals.set(\"userTitle\", \"Tester\");\r",
									"\r",
									"// Taking random value for the User status from pre-defined possible values\r",
									"var userStatusArray = ['Active','Disabled'];\r",
									"var randomNumber = Math.floor(Math.random()*userStatusArray.length);\r",
									"// pm.globals.set('userStatus', userStatusArray[randomNumber]);\r",
									"pm.globals.set(\"userStatus\", \"Active\");\r",
									"\r",
									"\r",
									"pm.globals.set(\"userRoles\", \"ProjectManager\");\r",
									"\r",
									"// var userRolesArray = ['Administrator',\r",
									"// 'BibleTranslationLiaison',\r",
									"// 'Consultant',\r",
									"// 'ConsultantManager',\r",
									"// 'Controller',\r",
									"// 'FieldOperationsDirector',\r",
									"// 'FieldPartner',\r",
									"// 'FinancialAnalyst',\r",
									"// 'Fundraising',\r",
									"// 'Intern',\r",
									"// 'LeadFinancialAnalyst',\r",
									"// 'Leadership',\r",
									"// 'Liaison',\r",
									"// 'Marketing',\r",
									"// 'Mentor',\r",
									"// 'ProjectManager',\r",
									"// 'RegionalCommunicationsCoordinator',\r",
									"// 'RegionalDirector',\r",
									"// 'StaffMember',\r",
									"// 'Translator'\r",
									"// ];\r",
									"\r",
									"// var randomNumber = Math.floor(Math.random()*userRolesArray.length);\r",
									"// pm.globals.set('userRoles', userRolesArray[randomNumber]);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation register($input: RegisterInput!) {\r\n  register(input: $input) {\r\n    powers\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      canDelete\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n         # canDelete\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n      }\r\n      organizations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          avatarLetters\r\n          name {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          address {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          locations {\r\n            total\r\n            hasMore\r\n            canRead\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n\r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      partners {\r\n        total\r\n        hasMore\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          modifiedAt\r\n          types {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          financialReportingTypes {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          pmcEntityCode {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          globalInnovationsClient {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          active {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          address {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          organization {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              avatarLetters\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              address {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              locations {\r\n                total\r\n                hasMore\r\n                canRead\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n          pointOfContact {\r\n            value {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              unavailabilities {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                 #canDelete\r\n                  start\r\n                  end\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              organizations {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  avatarLetters\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  address {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  locations {\r\n                    total\r\n                    hasMore\r\n                    canRead\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n\r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              education {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  degree {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  major {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              partners {\r\n                canCreate\r\n                canRead\r\n                hasMore\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  modifiedAt\r\n                  types {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  financialReportingTypes {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pmcEntityCode {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  globalInnovationsClient {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  active {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  address {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  organization {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      address {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      locations {\r\n                        total\r\n                        hasMore\r\n                        canRead\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          type {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n\r\n                          isoAlpha3 {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          fundingAccount {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              accountNumber {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoCountry {\r\n                            country\r\n                            alpha2\r\n                            alpha3\r\n                            numeric\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pointOfContact {\r\n                    canEdit\r\n                    canRead\r\n                    value {\r\n                      id\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              locations {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              knownLanguages {\r\n                proficiency\r\n                language {\r\n                  id\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      education {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          degree {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          major {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          institution {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      locations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          type {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoAlpha3 {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoCountry {\r\n            country\r\n            alpha2\r\n            alpha3\r\n            numeric\r\n          }\r\n          fundingAccount {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              accountNumber {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      knownLanguages {\r\n        proficiency\r\n        language {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"realFirstName\": \"Piyush\",\r\n        \"realLastName\": \"Patel\",\r\n        \"email\": \"{{login_email}}\",\r\n        \"password\": \"{{login_password}}\",\r\n        \"displayFirstName\": \"{{displayFirstName}}\",\r\n        \"displayLastName\": \"{{displayLastName}}\",\r\n        \"phone\": \"{{phone}}\",\r\n        \"timezone\": \"{{timezone}}\",\r\n        \"status\": \"{{userStatus}}\",\r\n        \"title\": \"{{userTitle}}\",\r\n        \"about\": \"{{about}}\",\r\n        \"roles\": \"{{userRoles}}\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"userid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    powers\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      canDelete\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          #canDelete\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n      }\r\n      organizations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          avatarLetters\r\n          name {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          address {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          locations {\r\n            total\r\n            hasMore\r\n            canRead\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n\r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      partners {\r\n        total\r\n        hasMore\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          modifiedAt\r\n          types {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          financialReportingTypes {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          pmcEntityCode {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          globalInnovationsClient {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          active {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          address {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          organization {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              avatarLetters\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              address {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              locations {\r\n                total\r\n                hasMore\r\n                canRead\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n          pointOfContact {\r\n            value {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              unavailabilities {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  #canDelete\r\n                  start\r\n                  end\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              organizations {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  avatarLetters\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  address {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  locations {\r\n                    total\r\n                    hasMore\r\n                    canRead\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n\r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              education {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  degree {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  major {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              partners {\r\n                canCreate\r\n                canRead\r\n                hasMore\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  modifiedAt\r\n                  types {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  financialReportingTypes {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pmcEntityCode {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  globalInnovationsClient {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  active {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  address {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  organization {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      address {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      locations {\r\n                        total\r\n                        hasMore\r\n                        canRead\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          type {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n\r\n                          isoAlpha3 {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          fundingAccount {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              accountNumber {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoCountry {\r\n                            country\r\n                            alpha2\r\n                            alpha3\r\n                            numeric\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pointOfContact {\r\n                    canEdit\r\n                    canRead\r\n                    value {\r\n                      id\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              locations {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              knownLanguages {\r\n                proficiency\r\n                language {\r\n                  id\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      education {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          degree {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          major {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          institution {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      locations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          type {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoAlpha3 {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoCountry {\r\n            country\r\n            alpha2\r\n            alpha3\r\n            numeric\r\n          }\r\n          fundingAccount {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              accountNumber {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      knownLanguages {\r\n        proficiency\r\n        language {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n   \"input\": {\r\n      \"email\": \"{{login_email}}\",\r\n      \"password\": \"{{login_password}}\"\r\n   }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"rootAdminUserid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    powers\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      canDelete\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          #canDelete\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n      }\r\n      organizations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          avatarLetters\r\n          name {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          address {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          locations {\r\n            total\r\n            hasMore\r\n            canRead\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n\r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      partners {\r\n        total\r\n        hasMore\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          modifiedAt\r\n          types {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          financialReportingTypes {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          pmcEntityCode {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          globalInnovationsClient {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          active {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          address {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          organization {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              avatarLetters\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              address {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              locations {\r\n                total\r\n                hasMore\r\n                canRead\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n          pointOfContact {\r\n            value {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              unavailabilities {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  #canDelete\r\n                  start\r\n                  end\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              organizations {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  avatarLetters\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  address {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  locations {\r\n                    total\r\n                    hasMore\r\n                    canRead\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n\r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              education {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  degree {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  major {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              partners {\r\n                canCreate\r\n                canRead\r\n                hasMore\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  modifiedAt\r\n                  types {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  financialReportingTypes {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pmcEntityCode {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  globalInnovationsClient {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  active {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  address {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  organization {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      address {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      locations {\r\n                        total\r\n                        hasMore\r\n                        canRead\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          type {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n\r\n                          isoAlpha3 {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          fundingAccount {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              accountNumber {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoCountry {\r\n                            country\r\n                            alpha2\r\n                            alpha3\r\n                            numeric\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pointOfContact {\r\n                    canEdit\r\n                    canRead\r\n                    value {\r\n                      id\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              locations {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              knownLanguages {\r\n                proficiency\r\n                language {\r\n                  id\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      education {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          degree {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          major {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          institution {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      locations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          type {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoAlpha3 {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoCountry {\r\n            country\r\n            alpha2\r\n            alpha3\r\n            numeric\r\n          }\r\n          fundingAccount {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              accountNumber {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      knownLanguages {\r\n        proficiency\r\n        language {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"email\": \"{{rootAdminLogin_email}}\",\r\n        \"password\": \"{{rootAdminLogin_password}}\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Grant Power to Root User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation grantPower($userId: ID!,$power:Power!) {\r\n  grantPower(userId:$userId,power:$power)\r\n}\r\n",
								"variables": "{\r\n    \"userId\": \"{{userid}}\",\r\n    \"power\": \"GrantPower\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Login again To Create/Update/Delete Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"userid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    powers\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      canDelete\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          #canDelete\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n      }\r\n      organizations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          avatarLetters\r\n          name {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          address {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          locations {\r\n            total\r\n            hasMore\r\n            canRead\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n\r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      partners {\r\n        total\r\n        hasMore\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          modifiedAt\r\n          types {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          financialReportingTypes {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          pmcEntityCode {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          globalInnovationsClient {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          active {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          address {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          organization {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              avatarLetters\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              address {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              locations {\r\n                total\r\n                hasMore\r\n                canRead\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n          pointOfContact {\r\n            value {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              unavailabilities {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  #canDelete\r\n                  start\r\n                  end\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              organizations {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  avatarLetters\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  address {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  locations {\r\n                    total\r\n                    hasMore\r\n                    canRead\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n\r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              education {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  degree {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  major {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              partners {\r\n                canCreate\r\n                canRead\r\n                hasMore\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  modifiedAt\r\n                  types {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  financialReportingTypes {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pmcEntityCode {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  globalInnovationsClient {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  active {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  address {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  organization {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      address {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      locations {\r\n                        total\r\n                        hasMore\r\n                        canRead\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          type {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n\r\n                          isoAlpha3 {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          fundingAccount {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              accountNumber {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoCountry {\r\n                            country\r\n                            alpha2\r\n                            alpha3\r\n                            numeric\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pointOfContact {\r\n                    canEdit\r\n                    canRead\r\n                    value {\r\n                      id\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              locations {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              knownLanguages {\r\n                proficiency\r\n                language {\r\n                  id\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      education {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          degree {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          major {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          institution {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      locations {\r\n        canRead\r\n        total\r\n        hasMore\r\n        canCreate\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          type {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoAlpha3 {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoCountry {\r\n            country\r\n            alpha2\r\n            alpha3\r\n            numeric\r\n          }\r\n          fundingAccount {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              accountNumber {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n      }\r\n      knownLanguages {\r\n        proficiency\r\n        language {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n   \"input\": {\r\n      \"email\": \"{{login_email}}\",\r\n      \"password\": \"{{login_password}}\"\r\n   }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Grant Power to Create Language to Root User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation grantPower($userId: ID!,$power:Power!) {\r\n  grantPower(userId:$userId,power:$power)\r\n}\r\n",
								"variables": "{\r\n    \"userId\": \"{{userid}}\",\r\n    \"power\": \"CreateLanguage\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Grant Power to Create EthnologueLanguage  to Root User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation grantPower($userId: ID!,$power:Power!) {\r\n  grantPower(userId:$userId,power:$power)\r\n}\r\n",
								"variables": "{\r\n    \"userId\": \"{{userid}}\",\r\n    \"power\": \"CreateEthnologueLanguage\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Pre-req ( Session + Register + Login + GrantPower ) for Product",
			"item": [
				{
					"name": "Grant Power to Create Project to Root User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation grantPower($userId: ID!,$power:Power!) {\r\n  grantPower(userId:$userId,power:$power)\r\n}\r\n",
								"variables": "{\r\n    \"userId\": \"{{userid}}\",\r\n    \"power\": \"CreateProject\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Location ( Create Funding Account )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createFundingAccount.fundingAccount.id;",
									"// Saving data for future use",
									"pm.globals.set(\"fundingAccountid\", id);",
									"",
									"// Saving whole fundingAccount Object to globals for future use",
									"var fundingAccount = JSON.stringify(jsonData.data.createFundingAccount.fundingAccount);",
									"pm.globals.set(\"fundingAccount_data\", fundingAccount);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set('fundingAccountName', \"FundingAccountName_\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"//pm.globals.set('accountNumber', _.random(1000000000, 2147483647));\r",
									"\r",
									"pm.globals.set('accountNumber', _.random(0, 9));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createFundingAccount($input: CreateFundingAccountInput!) {\r\n  createFundingAccount(input: $input) {\r\n    fundingAccount {\r\n      id\r\n      createdAt\r\n      canDelete\r\n      name {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      accountNumber {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"fundingAccount\": {\r\n            \"name\": \"{{fundingAccountName}}\",\r\n            \"accountNumber\": {{accountNumber}}\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Project ( Create Location )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createLocation.location.id;",
									"// Saving data for future use",
									"pm.globals.set(\"locationid\", id);",
									"",
									"// Saving whole location Object to globals for future use",
									"var location = JSON.stringify(jsonData.data.createLocation.location);",
									"pm.globals.set(\"location_data\", location);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"locationName\", \"LocationName\" + moment().format(\"DDMMhhmmss\"));\r",
									"\r",
									"// Taking random value for the locationType from pre-defined possible values\r",
									"var optionsArray = ['City',\r",
									"    'County',\r",
									"    'State',\r",
									"    'Country',\r",
									"    'CrossBorderArea'];\r",
									"var randomNumber = Math.floor(Math.random() * optionsArray.length);\r",
									"pm.globals.set('locationType', optionsArray[randomNumber]);\r",
									"\r",
									"// Taking random value for the locationSensitivity from pre-defined possible values\r",
									"var optionsArray = ['Low', 'Medium', 'High'];\r",
									"var randomNumber = Math.floor(Math.random() * optionsArray.length);\r",
									"pm.globals.set('locationSensitivity', optionsArray[randomNumber]);\r",
									"\r",
									"// Taking random value for the isoAlpha3 from pre-defined possible values\r",
									"var optionsArray = ['ABW',\r",
									"    'USA',\r",
									"    'ALA',\r",
									"    'IND',\r",
									"    'AUS'];\r",
									"var randomNumber = Math.floor(Math.random() * optionsArray.length);\r",
									"pm.globals.set('isoAlpha3', optionsArray[randomNumber]);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createLocation($input: CreateLocationInput!) {\r\n  createLocation(input: $input) {\r\n    location {\r\n      id\r\n      createdAt\r\n      canDelete\r\n     \r\n      name {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      type {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }    \r\n      isoAlpha3 {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      isoCountry {\r\n        country\r\n        alpha2\r\n        alpha3\r\n        numeric\r\n      }\r\n      fundingAccount {\r\n        value {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          accountNumber {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"location\": {\r\n            \"name\": \"{{locationName}}\",\r\n            \"type\": \"{{locationType}}\",\r\n            \"isoAlpha3\": \"{{isoAlpha3}}\",\r\n            \"fundingAccountId\": \"{{fundingAccountid}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create fieldRegion( Create fieldZone)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"var fieldZoneId = jsonData.data.createFieldZone.fieldZone.id;\r",
									"// Saving data for future use (create fieldRegion)\r",
									"pm.globals.set(\"fieldZoneId\", fieldZoneId);\r",
									"var directorId = jsonData.data.createFieldZone.fieldZone.director.value.id;\r",
									"\r",
									"// Saving data for future use (create fieldRegion)\r",
									"pm.globals.set(\"directorId\", directorId);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"fieldZone\", \"FieldZone\" + moment().format(\"DDMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createFieldZone($input: CreateFieldZoneInput!) {\r\n  createFieldZone(input: $input) {\r\n    fieldZone {\r\n      id\r\n      createdAt\r\n      canDelete\r\n      name {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      director {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          unavailabilities {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              #canDelete\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n          }\r\n          organizations {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              avatarLetters\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              address {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              locations {\r\n                total\r\n                hasMore\r\n                canRead\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                   \r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              degree {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              major {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              institution {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n          }\r\n          partners {\r\n            total\r\n            hasMore\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              modifiedAt\r\n              types {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              financialReportingTypes {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              pmcEntityCode {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              globalInnovationsClient {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              active {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              address {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              organization {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  avatarLetters\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  address {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  locations {\r\n                    total\r\n                    hasMore\r\n                    canRead\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                       \r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              pointOfContact {\r\n                value {\r\n                  id\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  createdAt\r\n                  email {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  phone {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  about {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  status {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  title {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  roles {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  timezone {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  unavailabilities {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      #canDelete\r\n                      start\r\n                      end\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                  organizations {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      address {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      locations {\r\n                        total\r\n                        hasMore\r\n                        canRead\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          type {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                           \r\n                          isoAlpha3 {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          fundingAccount {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              accountNumber {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoCountry {\r\n                            country\r\n                            alpha2\r\n                            alpha3\r\n                            numeric\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      degree {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      major {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                  }\r\n                  partners {\r\n                    canCreate\r\n                    canRead\r\n                    hasMore\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      modifiedAt\r\n                      types {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      financialReportingTypes {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      pmcEntityCode {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      globalInnovationsClient {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      active {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      address {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      organization {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          avatarLetters\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          address {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          locations {\r\n                            total\r\n                            hasMore\r\n                            canRead\r\n                            canCreate\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              type {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                               \r\n                              isoAlpha3 {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              fundingAccount {\r\n                                value {\r\n                                  id\r\n                                  createdAt\r\n                                  canDelete\r\n                                  name {\r\n                                    value\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                  accountNumber {\r\n                                    value\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                }\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              isoCountry {\r\n                                country\r\n                                alpha2\r\n                                alpha3\r\n                                numeric\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      pointOfContact {\r\n                        canEdit\r\n                        canRead\r\n                        value {\r\n                          id\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  locations {\r\n                    canRead\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                       \r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                  }\r\n                  knownLanguages {\r\n                    proficiency\r\n                    language {\r\n                      id\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          locations {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n               \r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n          }\r\n          knownLanguages {\r\n            proficiency\r\n            language {\r\n              id\r\n            }\r\n          }\r\n        }\r\n        canRead\r\n        canEdit\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"fieldZone\": {\r\n            \"name\": \"{{fieldZone}}\",\r\n            \"directorId\": \"{{userid}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Project ( Create fieldRegion)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									" var fieldRegionId = jsonData.data.createFieldRegion.fieldRegion.id;\r",
									"    // Saving data for future use\r",
									"    pm.globals.set(\"fieldRegionId\", fieldRegionId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"fieldRegion\", \"FieldRegion\" + moment().format(\"DDMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createFieldRegion($input: CreateFieldRegionInput!) {\r\n  createFieldRegion(input: $input) {\r\n    fieldRegion {\r\n      id\r\n      createdAt\r\n      canDelete\r\n      name {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      director {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          unavailabilities {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              #canDelete\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n          }\r\n          organizations {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              avatarLetters\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              address {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              locations {\r\n                total\r\n                hasMore\r\n                canRead\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                   \r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          partners {\r\n            total\r\n            hasMore\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              modifiedAt\r\n              types {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              financialReportingTypes {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              pmcEntityCode {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              globalInnovationsClient {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              active {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              address {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              organization {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  avatarLetters\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  address {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  locations {\r\n                    total\r\n                    hasMore\r\n                    canRead\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                       \r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              pointOfContact {\r\n                value {\r\n                  id\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  createdAt\r\n                  email {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  phone {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  about {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  status {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  title {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  roles {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  timezone {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  unavailabilities {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      #canDelete\r\n                      start\r\n                      end\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                  organizations {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      address {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      locations {\r\n                        total\r\n                        hasMore\r\n                        canRead\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          type {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                           \r\n                          isoAlpha3 {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          fundingAccount {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              accountNumber {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoCountry {\r\n                            country\r\n                            alpha2\r\n                            alpha3\r\n                            numeric\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      degree {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      major {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                  }\r\n                  partners {\r\n                    canCreate\r\n                    canRead\r\n                    hasMore\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      modifiedAt\r\n                      types {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      financialReportingTypes {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      pmcEntityCode {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      globalInnovationsClient {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      active {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      address {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      organization {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          avatarLetters\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          address {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          locations {\r\n                            total\r\n                            hasMore\r\n                            canRead\r\n                            canCreate\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              type {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                               \r\n                              isoAlpha3 {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              fundingAccount {\r\n                                value {\r\n                                  id\r\n                                  createdAt\r\n                                  canDelete\r\n                                  name {\r\n                                    value\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                  accountNumber {\r\n                                    value\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                }\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              isoCountry {\r\n                                country\r\n                                alpha2\r\n                                alpha3\r\n                                numeric\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      pointOfContact {\r\n                        canEdit\r\n                        canRead\r\n                        value {\r\n                          id\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  locations {\r\n                    canRead\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                       \r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                  }\r\n                  knownLanguages {\r\n                    proficiency\r\n                    language {\r\n                      id\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              degree {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              major {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              institution {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n          }\r\n          locations {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n               \r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n          }\r\n          knownLanguages {\r\n            proficiency\r\n            language {\r\n              id\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      fieldZone {\r\n        value {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          director {\r\n            value {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              unavailabilities {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  #canDelete\r\n                  description {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  start\r\n                  end\r\n                }\r\n              }\r\n              organizations {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  avatarLetters\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  address {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  locations {\r\n                    total\r\n                    hasMore\r\n                    canRead\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      type {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                       \r\n                      isoAlpha3 {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      fundingAccount {\r\n                        value {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          accountNumber {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      isoCountry {\r\n                        country\r\n                        alpha2\r\n                        alpha3\r\n                        numeric\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              education {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  degree {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  major {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              partners {\r\n                total\r\n                hasMore\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  modifiedAt\r\n                  types {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  financialReportingTypes {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pmcEntityCode {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  globalInnovationsClient {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  active {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  address {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  organization {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      avatarLetters\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      address {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      locations {\r\n                        total\r\n                        hasMore\r\n                        canRead\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          type {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                           \r\n                          isoAlpha3 {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          fundingAccount {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              accountNumber {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoCountry {\r\n                            country\r\n                            alpha2\r\n                            alpha3\r\n                            numeric\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  pointOfContact {\r\n                    value {\r\n                      id\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      createdAt\r\n                      email {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      phone {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      about {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      status {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      title {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      roles {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      timezone {\r\n                        canRead\r\n                        canEdit\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      unavailabilities {\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                         # canDelete\r\n                          start\r\n                          end\r\n                          description {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                      organizations {\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          avatarLetters\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          address {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          locations {\r\n                            total\r\n                            hasMore\r\n                            canRead\r\n                            canCreate\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              type {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                               \r\n                              isoAlpha3 {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              fundingAccount {\r\n                                value {\r\n                                  id\r\n                                  createdAt\r\n                                  canDelete\r\n                                  name {\r\n                                    value\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                  accountNumber {\r\n                                    value\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                }\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              isoCountry {\r\n                                country\r\n                                alpha2\r\n                                alpha3\r\n                                numeric\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          degree {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          major {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          institution {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                      }\r\n                      partners {\r\n                        canCreate\r\n                        canRead\r\n                        hasMore\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          modifiedAt\r\n                          types {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          financialReportingTypes {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          pmcEntityCode {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          globalInnovationsClient {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          active {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          address {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          organization {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              avatarLetters\r\n                              name {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                              address {\r\n                                value\r\n                                canRead\r\n                                canEdit\r\n                              }\r\n                              locations {\r\n                                total\r\n                                hasMore\r\n                                canRead\r\n                                canCreate\r\n                                items {\r\n                                  id\r\n                                  createdAt\r\n                                  canDelete\r\n                                  name {\r\n                                    value\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                  type {\r\n                                    value\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                   \r\n                                  isoAlpha3 {\r\n                                    value\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                  fundingAccount {\r\n                                    value {\r\n                                      id\r\n                                      createdAt\r\n                                      canDelete\r\n                                      name {\r\n                                        value\r\n                                        canEdit\r\n                                        canRead\r\n                                      }\r\n                                      accountNumber {\r\n                                        value\r\n                                        canEdit\r\n                                        canRead\r\n                                      }\r\n                                    }\r\n                                    canEdit\r\n                                    canRead\r\n                                  }\r\n                                  isoCountry {\r\n                                    country\r\n                                    alpha2\r\n                                    alpha3\r\n                                    numeric\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          pointOfContact {\r\n                            canEdit\r\n                            canRead\r\n                            value {\r\n                              id\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      locations {\r\n                        canRead\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                           \r\n                          name {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          type {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoAlpha3 {\r\n                            value\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                          isoCountry {\r\n                            country\r\n                            alpha2\r\n                            alpha3\r\n                            numeric\r\n                          }\r\n                          fundingAccount {\r\n                            value {\r\n                              id\r\n                              createdAt\r\n                              canDelete\r\n                              name {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                              accountNumber {\r\n                                value\r\n                                canEdit\r\n                                canRead\r\n                              }\r\n                            }\r\n                            canEdit\r\n                            canRead\r\n                          }\r\n                        }\r\n                      }\r\n                      knownLanguages {\r\n                        proficiency\r\n                        language {\r\n                          id\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              locations {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                   \r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      canDelete\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n              knownLanguages {\r\n                proficiency\r\n                language {\r\n                  id\r\n                }\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n        }\r\n        canEdit\r\n        value {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          director {\r\n            canEdit\r\n            canRead\r\n            value {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              unavailabilities {\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  description {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  start\r\n                  end\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n              }\r\n              organizations {\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  name {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  avatarLetters\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n              }\r\n              education {\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  degree {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  major {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  institution {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"fieldRegion\": {\r\n            \"name\": \"{{fieldRegion}}\",\r\n            \"fieldZoneId\": \"{{fieldZoneId}}\",\r\n            \"directorId\": \"{{directorId}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Engagement ( Create Project - Translation type )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var id = jsonData.data.createProject.project.id;",
									"",
									"// Saving data for future use",
									"pm.globals.set(\"projectid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"projectName\", \"ProjectName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set('projectType', \"Translation\");\r",
									"\r",
									"pm.globals.set(\"mouStart\", moment().format(\"YYYY-MM-DD\"))\r",
									"\r",
									"var mouEnd = pm.variables.replaceIn('{{$randomDateFuture}}')\r",
									"pm.globals.set(\"mouEnd\", moment(mouEnd).format(\"YYYY-MM-DD\"));\r",
									"\r",
									"var estimatedSubmissionDate = pm.variables.replaceIn('{{$randomDateFuture}}')\r",
									"pm.globals.set(\"estimatedSubmission\", moment(estimatedSubmissionDate).format(\"YYYY-MM-DD\"));\r",
									"\r",
									"var financialReportReceivedAt = pm.variables.replaceIn('{{$randomDateFuture}}')\r",
									"pm.globals.set(\"financialReportReceivedAt\", moment(financialReportReceivedAt).format(\"YYYY-MM-DD\"));\r",
									"\r",
									"// Project Output Values to be checked from pre-defined data\r",
									"var projectFinancialReportPeriodArray = [\r",
									"    \"Monthly\",\r",
									"    \"Quarterly\",\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * projectFinancialReportPeriodArray.length);\r",
									"pm.globals.set('financialReportPeriod', projectFinancialReportPeriodArray[randomNumber]);\r",
									"\r",
									"pm.globals.set('projectStep', \"EarlyConversations\");\r",
									"\r",
									"// Project Output Values to be checked from pre-defined data\r",
									"var projectStatus_array = [\r",
									"    \"InDevelopment\",\r",
									"    \"Active\",\r",
									"    \"Terminated\",\r",
									"    \"Completed\"\r",
									"];\r",
									"pm.globals.set('projectStatus_array', JSON.stringify(projectStatus_array));\r",
									"\r",
									"\r",
									"\r",
									"// generate random id from characters\r",
									"function genrateString(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"// generate random string array using random strings\r",
									"function generateRandomArray(length) {\r",
									"    var result = [];\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result.push(genrateString(true, false, false, 5))\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"pm.globals.set(\"projectTags\", JSON.stringify(generateRandomArray(5)));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createProject($input: CreateProjectInput!) {\r\n  createProject(input: $input) {\r\n    project {\r\n      id\r\n      createdAt\r\n      canDelete\r\n      pinned\r\n      modifiedAt\r\n      type\r\n      sensitivity\r\n      status\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      departmentId {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      tags {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      financialReportReceivedAt {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      financialReportPeriod {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      step {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      mouStart {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      mouEnd {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      estimatedSubmission {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      primaryLocation {\r\n        canEdit\r\n        canRead\r\n        value {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          type {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoAlpha3 {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          fundingAccount {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              accountNumber {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoCountry {\r\n            country\r\n            alpha2\r\n            alpha3\r\n            numeric\r\n          }\r\n        }\r\n      }\r\n      otherLocations {\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          type {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n\r\n          isoAlpha3 {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          fundingAccount {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              accountNumber {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoCountry {\r\n            country\r\n            alpha2\r\n            alpha3\r\n            numeric\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canRead\r\n        canCreate\r\n      }\r\n      marketingLocation {\r\n        value {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          type {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n\r\n          isoAlpha3 {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          fundingAccount {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              accountNumber {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n          isoCountry {\r\n            country\r\n            alpha2\r\n            alpha3\r\n            numeric\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      fieldRegion {\r\n        canEdit\r\n        canRead\r\n        value {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          director {\r\n            canEdit\r\n            canRead\r\n            value {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              unavailabilities {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  # canDelete\r\n                  description {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  start\r\n                  end\r\n                }\r\n              }\r\n              organizations {\r\n                canRead\r\n                total\r\n                hasMore\r\n                canCreate\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  name {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  avatarLetters\r\n                }\r\n              }\r\n              education {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  degree {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  major {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  institution {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fieldZone {\r\n            canEdit\r\n            canRead\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              director {\r\n                value {\r\n                  id\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  createdAt\r\n                  email {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  phone {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  about {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  status {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  roles {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  title {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  timezone {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  unavailabilities {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      # canDelete\r\n                      description {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      major {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      institution {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      owningOrganization {\r\n        canEdit\r\n        canRead\r\n        value {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          address {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n          locations {\r\n            total\r\n            hasMore\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      team {\r\n        total\r\n        hasMore\r\n        canCreate\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          modifiedAt\r\n          user {\r\n            value {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              unavailabilities {\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  # canDelete\r\n                  description {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  start\r\n                  end\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n              }\r\n              organizations {\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  name {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  avatarLetters\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n              }\r\n              education {\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  degree {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  major {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  institution {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          roles {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n        }\r\n      }\r\n      engagements {\r\n        total\r\n        hasMore\r\n        canCreate\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          status {\r\n            canEdit\r\n            canRead\r\n            value\r\n            transitions {\r\n              to\r\n              label\r\n              type\r\n            }\r\n          }\r\n          ceremony {\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n              planned {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              estimatedDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              actualDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          completeDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          disbursementCompleteDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          communicationsCompleteDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          startDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          endDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          initialEndDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          lastSuspendedAt {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          lastReactivatedAt {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          statusModifiedAt {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          modifiedAt\r\n        }\r\n      }\r\n      budget {\r\n        value {\r\n          id\r\n          createdAt\r\n          status\r\n          records {\r\n            id\r\n            createdAt\r\n            fiscalYear {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            amount {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n          }\r\n          total\r\n        }\r\n        canRead\r\n        canEdit\r\n      }\r\n      partnerships {\r\n        canRead\r\n        hasMore\r\n        canCreate\r\n        total\r\n        items {\r\n          id\r\n          createdAt\r\n          agreementStatus {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouStatus {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouStart {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouEnd {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n\r\n          types {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mou {\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n\r\n              mimeType\r\n              name\r\n              size\r\n              modifiedAt\r\n              downloadUrl\r\n              createdBy {\r\n                id\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                createdAt\r\n                email {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                realFirstName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                realLastName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                displayFirstName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                displayLastName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                phone {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                about {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                status {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                roles {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                title {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                timezone {\r\n                  canRead\r\n                  canEdit\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                unavailabilities {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    # canDelete\r\n                    description {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n                education {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    major {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    institution {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n              }\r\n              modifiedBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                about {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    canDelete\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              children {\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  type\r\n\r\n                  name\r\n                  createdBy {\r\n                    id\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    createdAt\r\n                    email {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    phone {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    about {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    status {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    roles {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    title {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    timezone {\r\n                      canRead\r\n                      canEdit\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    unavailabilities {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        # canDelete\r\n                        description {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        major {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        institution {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                  }\r\n                  parents {\r\n                    id\r\n                    createdAt\r\n                    type\r\n\r\n                    name\r\n                    parents {\r\n                      id\r\n                      type\r\n                    }\r\n                    createdBy {\r\n                      id\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      createdAt\r\n                      email {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      phone {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      about {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      status {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      roles {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      title {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      timezone {\r\n                        canRead\r\n                        canEdit\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      unavailabilities {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          # canDelete\r\n                          description {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          start\r\n                          end\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      organizations {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          name {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          avatarLetters\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          major {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          institution {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                total\r\n                hasMore\r\n              }\r\n              parents {\r\n                id\r\n                createdAt\r\n                type\r\n\r\n                name\r\n                parents {\r\n                  id\r\n                  type\r\n                  # also contains other fields as parent 'Parents'\r\n                }\r\n                createdBy {\r\n                  id\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  createdAt\r\n                  email {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  phone {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  about {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  status {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  roles {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  title {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  timezone {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  unavailabilities {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      # canDelete\r\n                      description {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      major {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      institution {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          agreement {\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n\r\n              name\r\n              parents {\r\n                id\r\n                createdAt\r\n                type\r\n\r\n                name\r\n                createdBy {\r\n                  id\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  createdAt\r\n                  email {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  phone {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  about {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  status {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  roles {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  title {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  timezone {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  unavailabilities {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      # canDelete\r\n                      description {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      major {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      institution {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                }\r\n                parents {\r\n                  id\r\n                  type\r\n                  # also contains other fields as parent 'Parents'\r\n                }\r\n              }\r\n              createdBy {\r\n                id\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                createdAt\r\n                email {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                realFirstName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                realLastName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                displayFirstName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                displayLastName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                phone {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                about {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                status {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                roles {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                title {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                timezone {\r\n                  canRead\r\n                  canEdit\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                unavailabilities {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    #canDelete\r\n                    description {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n                education {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    major {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    institution {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n              }\r\n              mimeType\r\n              size\r\n              modifiedAt\r\n              modifiedBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                about {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    #  canDelete\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              children {\r\n                total\r\n                hasMore\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  type\r\n\r\n                  name\r\n                  createdBy {\r\n                    id\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    createdAt\r\n                    email {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    phone {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    about {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    status {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    roles {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    title {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    timezone {\r\n                      canRead\r\n                      canEdit\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    unavailabilities {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        # canDelete\r\n                        description {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        major {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        institution {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                  }\r\n                  parents {\r\n                    id\r\n                    createdAt\r\n                    type\r\n\r\n                    name\r\n                    createdBy {\r\n                      id\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      createdAt\r\n                      email {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      phone {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      about {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      status {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      roles {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      title {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      timezone {\r\n                        canRead\r\n                        canEdit\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      unavailabilities {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          # canDelete\r\n                          description {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          start\r\n                          end\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      organizations {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          name {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          avatarLetters\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          major {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          institution {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                    }\r\n                    parents {\r\n                      id\r\n                      type\r\n                      # also contains other fields as parent 'Parents'\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              downloadUrl\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n        }\r\n      }\r\n      rootDirectory {\r\n        canEdit\r\n        canRead\r\n        value {\r\n          id\r\n          createdAt\r\n          type\r\n\r\n          name\r\n          parents {\r\n            id\r\n            createdAt\r\n            type\r\n\r\n            name\r\n            parents {\r\n              id\r\n              name\r\n              type\r\n              # also contains other fields as parent 'parents'\r\n            }\r\n            createdBy {\r\n              id\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              createdAt\r\n              email {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              realLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayFirstName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              displayLastName {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              phone {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              about {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              status {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              roles {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              title {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              timezone {\r\n                canRead\r\n                canEdit\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              unavailabilities {\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  # canDelete\r\n                  description {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  start\r\n                  end\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n              }\r\n              organizations {\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  name {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  avatarLetters\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n              }\r\n              education {\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  degree {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  major {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  institution {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n              }\r\n            }\r\n          }\r\n          createdBy {\r\n            id\r\n            fullName\r\n            firstName\r\n            avatarLetters\r\n            createdAt\r\n            email {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            realFirstName {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            realLastName {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            displayFirstName {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            displayLastName {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            phone {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            about {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            status {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            roles {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            title {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            timezone {\r\n              canRead\r\n              canEdit\r\n              value {\r\n                name\r\n                lat\r\n                long\r\n                countries {\r\n                  code\r\n                  name\r\n                  zones {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            unavailabilities {\r\n              canRead\r\n              items {\r\n                id\r\n                createdAt\r\n                description {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                start\r\n                end\r\n              }\r\n              total\r\n              hasMore\r\n              canCreate\r\n            }\r\n            organizations {\r\n              canRead\r\n              items {\r\n                id\r\n                createdAt\r\n                name {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                avatarLetters\r\n              }\r\n              total\r\n              hasMore\r\n              canCreate\r\n            }\r\n            education {\r\n              canRead\r\n              items {\r\n                id\r\n                createdAt\r\n                degree {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                major {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                institution {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n              }\r\n              total\r\n              hasMore\r\n              canCreate\r\n            }\r\n          }\r\n          children {\r\n            total\r\n            hasMore\r\n            items {\r\n              id\r\n              createdAt\r\n              type\r\n              name\r\n              createdBy {\r\n                id\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                createdAt\r\n                email {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                realFirstName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                realLastName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                displayFirstName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                displayLastName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                phone {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                about {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                status {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                roles {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                title {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                timezone {\r\n                  canRead\r\n                  canEdit\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                unavailabilities {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    #canDelete\r\n                    description {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n                education {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    major {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    institution {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n              }\r\n              parents {\r\n                id\r\n                type\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"project\": {\r\n            \"name\": \"{{projectName}}\",\r\n            \"type\": \"{{projectType}}\",\r\n            \"primaryLocationId\": \"{{locationid}}\",\r\n            \"otherLocationIds\": \"{{locationid}}\",\r\n            \"marketingLocationId\": \"{{locationid}}\",\r\n            \"fieldRegionId\": \"{{fieldRegionId}}\",\r\n            \"mouStart\": \"{{mouStart}}\",\r\n            \"mouEnd\": \"{{mouEnd}}\",\r\n            \"estimatedSubmission\": \"{{estimatedSubmission}}\",\r\n            \"step\": \"{{projectStep}}\",\r\n            \"tags\": {{projectTags}},\r\n            \"financialReportReceivedAt\": \"{{financialReportReceivedAt}}\",\r\n            \"financialReportPeriod\":\"{{financialReportPeriod}}\"\r\n\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Engagement ( Create Language )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var id = jsonData.data.createLanguage.language.id;",
									"",
									"// Saving data for future use",
									"pm.globals.set(\"languageid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"languageName\", \"LangName\" + moment().format(\"DDMMhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"languageDisplayName\", \"LangDispName\" + moment().format(\"DDMMhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"languageDisplayNamePronunciation\", \"LangDispNamePron\" + moment().format(\"DDMMhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"isDialect\", pm.variables.replaceIn('{{$randomBoolean}}'));\r",
									"\r",
									"pm.globals.set(\"languageEthnologueId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"languageEthnologueCode\", \"ethcode\" + makeid(true, false, false, 5));\r",
									"\r",
									"pm.globals.set(\"languageEthnologueProvisionalCode\", \"ethproviscode\" + makeid(true, false, false, 5));\r",
									"\r",
									"pm.globals.set(\"languageEthnologueName\", \"LanguageEthnologueName\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"languageEthnologuePopulation\", _.random(1000, 2500));\r",
									"\r",
									"pm.globals.set(\"languagePopulationOverride\", _.random(2501, 5000));\r",
									"\r",
									"pm.globals.set(\"languageRegistryOfDialectsCode\", _.random(10000, 99999).toString());\r",
									"\r",
									"pm.globals.set(\"languageLeastOfThese\", pm.variables.replaceIn('{{$randomBoolean}}'));\r",
									"\r",
									"pm.globals.set(\"languageLeastOfTheseReason\", \"This is test Language Least Reason by Automation Testing\");\r",
									"\r",
									"pm.globals.set(\"signLanguageCode\", makeid(false, true, false, 2) + _.random(10, 99));\r",
									"\r",
									"// Taking random value for the Language Sensitivity from pre-defined possible values\r",
									"var languageSensitivityArray = [\r",
									"    \"Low\",\r",
									"    \"Medium\",\r",
									"    \"High\"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * languageSensitivityArray.length);\r",
									"pm.globals.set('languageSensitivity', languageSensitivityArray[randomNumber]);\r",
									"\r",
									"pm.globals.set('languageSponsorEstimatedEndDate', _.random(1900, 2099));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateLanguage($input: CreateLanguageInput!) {\r\n  createLanguage(input: $input) {\r\n    language {\r\n      id\r\n      createdAt\r\n      canDelete\r\n      sensitivity\r\n      avatarLetters\r\n      name {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      displayName {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      displayNamePronunciation {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      isDialect {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      ethnologue {\r\n        code {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        provisionalCode {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        name {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        population {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n      }\r\n      populationOverride {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      population {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      registryOfDialectsCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      leastOfThese {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      leastOfTheseReason {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      sponsorStartDate {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      isSignLanguage {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      hasExternalFirstScripture{\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      tags{\r\n      \r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      signLanguageCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      sponsorEstimatedEndDate {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      locations {\r\n        items {\r\n          __typename\r\n        }\r\n        total\r\n        hasMore\r\n        canRead\r\n        canCreate\r\n      }\r\n      projects {\r\n        total\r\n        hasMore\r\n        items {\r\n          id\r\n          createdAt\r\n          canDelete\r\n          modifiedAt\r\n          avatarLetters\r\n          type\r\n          sensitivity\r\n          status\r\n          name {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          departmentId {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          tags {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          financialReportReceivedAt {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          step {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouStart {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouEnd {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          estimatedSubmission {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n\r\n          primaryLocation {\r\n            canEdit\r\n            canRead\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n             \r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n            }\r\n          }\r\n          otherLocations {\r\n            items {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n        \r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canRead\r\n            canCreate\r\n          }\r\n          marketingLocation {\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              type {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n            \r\n              isoAlpha3 {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              fundingAccount {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  accountNumber {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n                canEdit\r\n                canRead\r\n              }\r\n              isoCountry {\r\n                country\r\n                alpha2\r\n                alpha3\r\n                numeric\r\n              }\r\n            }\r\n            canEdit\r\n            canRead\r\n          }\r\n          fieldRegion {\r\n            canEdit\r\n            canRead\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              director {\r\n                canEdit\r\n                canRead\r\n                value {\r\n                  id\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  createdAt\r\n                  email {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  phone {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  about {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  status {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  roles {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  title {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  timezone {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  unavailabilities {\r\n                    canRead\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      description {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                  }\r\n                  education {\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      major {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      institution {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              fieldZone {\r\n                canEdit\r\n                canRead\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  canDelete\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  director {\r\n                    value {\r\n                      id\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      createdAt\r\n                      email {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      phone {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      about {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      status {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      roles {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      title {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      timezone {\r\n                        canRead\r\n                        canEdit\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      unavailabilities {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          canDelete\r\n                          description {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          start\r\n                          end\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      organizations {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          name {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          avatarLetters\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          major {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          institution {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          owningOrganization {\r\n            canEdit\r\n            canRead\r\n            value {\r\n              id\r\n              createdAt\r\n              canDelete\r\n              name {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              address {\r\n                value\r\n                canEdit\r\n                canRead\r\n              }\r\n              avatarLetters\r\n              locations {\r\n                total\r\n                hasMore\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  name {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  type {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                \r\n                  isoAlpha3 {\r\n                    value\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                  isoCountry {\r\n                    country\r\n                    alpha2\r\n                    alpha3\r\n                    numeric\r\n                  }\r\n                  fundingAccount {\r\n                    value {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                      accountNumber {\r\n                        value\r\n                        canEdit\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canEdit\r\n                    canRead\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          team {\r\n            total\r\n            hasMore\r\n            canCreate\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              modifiedAt\r\n              user {\r\n                value {\r\n                  id\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  createdAt\r\n                  email {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  phone {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  about {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  status {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  roles {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  title {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  timezone {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  unavailabilities {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      description {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      major {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      institution {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              roles {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n            }\r\n          }\r\n          engagements {\r\n            total\r\n            hasMore\r\n            canCreate\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              status {\r\n                canEdit\r\n                canRead\r\n                value\r\n                transitions {\r\n                  to\r\n                  label\r\n                  type\r\n                }\r\n              }\r\n              ceremony {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  planned {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  estimatedDate {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  actualDate {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              completeDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              disbursementCompleteDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              communicationsCompleteDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              startDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              endDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              initialEndDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              lastSuspendedAt {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              lastReactivatedAt {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              statusModifiedAt {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              modifiedAt\r\n            }\r\n          }\r\n          budget {\r\n            value {\r\n              id\r\n              createdAt\r\n              status\r\n              records {\r\n                id\r\n                createdAt\r\n                fiscalYear {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                amount {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n              }\r\n              total\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          partnerships {\r\n            canRead\r\n            hasMore\r\n            canCreate\r\n            total\r\n            items {\r\n              id\r\n              createdAt\r\n              agreementStatus {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              mouStatus {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              mouStart {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              mouEnd {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n\r\n              types {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              mou {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  type\r\n\r\n                  mimeType\r\n                  name\r\n                  size\r\n                  modifiedAt\r\n                  downloadUrl\r\n                  createdBy {\r\n                    id\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    createdAt\r\n                    email {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    phone {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    about {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    status {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    roles {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    title {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    timezone {\r\n                      canRead\r\n                      canEdit\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    unavailabilities {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        description {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        major {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        institution {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                  }\r\n                  modifiedBy {\r\n                    id\r\n                    createdAt\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    about {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    unavailabilities {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  children {\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      type\r\n\r\n                      name\r\n                      createdBy {\r\n                        id\r\n                        fullName\r\n                        firstName\r\n                        avatarLetters\r\n                        createdAt\r\n                        email {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        realFirstName {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        realLastName {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        displayFirstName {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        displayLastName {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        phone {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        about {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        status {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        roles {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        title {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        timezone {\r\n                          canRead\r\n                          canEdit\r\n                          value {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                              name\r\n                              zones {\r\n                                name\r\n                                lat\r\n                                long\r\n                                countries {\r\n                                  code\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        unavailabilities {\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            description {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                            start\r\n                            end\r\n                          }\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                        }\r\n                        organizations {\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            name {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                            avatarLetters\r\n                          }\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                        }\r\n                        education {\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            degree {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                            major {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                            institution {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                          }\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                        }\r\n                      }\r\n                      parents {\r\n                        id\r\n                        createdAt\r\n                        type\r\n\r\n                        name\r\n                        parents {\r\n                          id\r\n                          type\r\n                        }\r\n                        createdBy {\r\n                          id\r\n                          fullName\r\n                          firstName\r\n                          avatarLetters\r\n                          createdAt\r\n                          email {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          realFirstName {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          realLastName {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          displayFirstName {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          displayLastName {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          phone {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          about {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          status {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          roles {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          title {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          timezone {\r\n                            canRead\r\n                            canEdit\r\n                            value {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                                name\r\n                                zones {\r\n                                  name\r\n                                  lat\r\n                                  long\r\n                                  countries {\r\n                                    code\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                          unavailabilities {\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              description {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                              start\r\n                              end\r\n                            }\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                          }\r\n                          organizations {\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              name {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                              avatarLetters\r\n                            }\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                          }\r\n                          education {\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              degree {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                              major {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                              institution {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                            }\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    total\r\n                    hasMore\r\n                  }\r\n                  parents {\r\n                    id\r\n                    createdAt\r\n                    type\r\n\r\n                    name\r\n                    parents {\r\n                      id\r\n                      type\r\n                      # also contains other fields as parent 'Parents'\r\n                    }\r\n                    createdBy {\r\n                      id\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      createdAt\r\n                      email {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      phone {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      about {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      status {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      roles {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      title {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      timezone {\r\n                        canRead\r\n                        canEdit\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      unavailabilities {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          description {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          start\r\n                          end\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      organizations {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          name {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          avatarLetters\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          major {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          institution {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              agreement {\r\n                value {\r\n                  id\r\n                  createdAt\r\n                  type\r\n\r\n                  name\r\n                  parents {\r\n                    id\r\n                    createdAt\r\n                    type\r\n\r\n                    name\r\n                    createdBy {\r\n                      id\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      createdAt\r\n                      email {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      realLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayFirstName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      displayLastName {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      phone {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      about {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      status {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      roles {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      title {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      timezone {\r\n                        canRead\r\n                        canEdit\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      unavailabilities {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          description {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          start\r\n                          end\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      organizations {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          name {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          avatarLetters\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          major {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          institution {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                      }\r\n                    }\r\n                    parents {\r\n                      id\r\n                      type\r\n                      # also contains other fields as parent 'Parents'\r\n                    }\r\n                  }\r\n                  createdBy {\r\n                    id\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    createdAt\r\n                    email {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    phone {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    about {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    status {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    roles {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    title {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    timezone {\r\n                      canRead\r\n                      canEdit\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    unavailabilities {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        description {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        major {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        institution {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                  }\r\n                  mimeType\r\n                  size\r\n                  modifiedAt\r\n                  modifiedBy {\r\n                    id\r\n                    createdAt\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    about {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    unavailabilities {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  children {\r\n                    total\r\n                    hasMore\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      type\r\n\r\n                      name\r\n                      createdBy {\r\n                        id\r\n                        fullName\r\n                        firstName\r\n                        avatarLetters\r\n                        createdAt\r\n                        email {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        realFirstName {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        realLastName {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        displayFirstName {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        displayLastName {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        phone {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        about {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        status {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        roles {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        title {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        timezone {\r\n                          canRead\r\n                          canEdit\r\n                          value {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                              name\r\n                              zones {\r\n                                name\r\n                                lat\r\n                                long\r\n                                countries {\r\n                                  code\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        unavailabilities {\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            description {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                            start\r\n                            end\r\n                          }\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                        }\r\n                        organizations {\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            name {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                            avatarLetters\r\n                          }\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                        }\r\n                        education {\r\n                          canRead\r\n                          items {\r\n                            id\r\n                            createdAt\r\n                            degree {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                            major {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                            institution {\r\n                              canRead\r\n                              canEdit\r\n                              value\r\n                            }\r\n                          }\r\n                          total\r\n                          hasMore\r\n                          canCreate\r\n                        }\r\n                      }\r\n                      parents {\r\n                        id\r\n                        createdAt\r\n                        type\r\n\r\n                        name\r\n                        createdBy {\r\n                          id\r\n                          fullName\r\n                          firstName\r\n                          avatarLetters\r\n                          createdAt\r\n                          email {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          realFirstName {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          realLastName {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          displayFirstName {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          displayLastName {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          phone {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          about {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          status {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          roles {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          title {\r\n                            canRead\r\n                            canEdit\r\n                            value\r\n                          }\r\n                          timezone {\r\n                            canRead\r\n                            canEdit\r\n                            value {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                                name\r\n                                zones {\r\n                                  name\r\n                                  lat\r\n                                  long\r\n                                  countries {\r\n                                    code\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                          unavailabilities {\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              description {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                              start\r\n                              end\r\n                            }\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                          }\r\n                          organizations {\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              name {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                              avatarLetters\r\n                            }\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                          }\r\n                          education {\r\n                            canRead\r\n                            items {\r\n                              id\r\n                              createdAt\r\n                              degree {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                              major {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                              institution {\r\n                                canRead\r\n                                canEdit\r\n                                value\r\n                              }\r\n                            }\r\n                            total\r\n                            hasMore\r\n                            canCreate\r\n                          }\r\n                        }\r\n                        parents {\r\n                          id\r\n                          type\r\n                          # also contains other fields as parent 'Parents'\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  downloadUrl\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n            }\r\n          }\r\n          rootDirectory {\r\n            canEdit\r\n            canRead\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n\r\n              name\r\n              parents {\r\n                id\r\n                createdAt\r\n                type\r\n\r\n                name\r\n                parents {\r\n                  id\r\n                  name\r\n                  type\r\n                  # also contains other fields as parent 'parents'\r\n                }\r\n                createdBy {\r\n                  id\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  createdAt\r\n                  email {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  realLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayFirstName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  displayLastName {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  phone {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  about {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  status {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  roles {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  title {\r\n                    canRead\r\n                    canEdit\r\n                    value\r\n                  }\r\n                  timezone {\r\n                    canRead\r\n                    canEdit\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  unavailabilities {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      description {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      major {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                      institution {\r\n                        canRead\r\n                        canEdit\r\n                        value\r\n                      }\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                  }\r\n                }\r\n              }\r\n              createdBy {\r\n                id\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                createdAt\r\n                email {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                realFirstName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                realLastName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                displayFirstName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                displayLastName {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                phone {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                about {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                status {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                roles {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                title {\r\n                  canRead\r\n                  canEdit\r\n                  value\r\n                }\r\n                timezone {\r\n                  canRead\r\n                  canEdit\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                unavailabilities {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n                education {\r\n                  canRead\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    major {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    institution {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                  }\r\n                  total\r\n                  hasMore\r\n                  canCreate\r\n                }\r\n              }\r\n              children {\r\n                total\r\n                hasMore\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  name\r\n                  createdBy {\r\n                    id\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    createdAt\r\n                    email {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    realLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayFirstName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    displayLastName {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    phone {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    about {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    status {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    roles {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    title {\r\n                      canRead\r\n                      canEdit\r\n                      value\r\n                    }\r\n                    timezone {\r\n                      canRead\r\n                      canEdit\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    unavailabilities {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        description {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        major {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                        institution {\r\n                          canRead\r\n                          canEdit\r\n                          value\r\n                        }\r\n                      }\r\n                      total\r\n                      hasMore\r\n                      canCreate\r\n                    }\r\n                  }\r\n                  parents {\r\n                    id\r\n                    type\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"language\": {\r\n            \"name\": \"{{languageName}}\",\r\n            \"displayName\": \"{{languageDisplayName}}\",\r\n            \"displayNamePronunciation\": \"{{languageDisplayNamePronunciation}}\",\r\n            \"isDialect\": false,\r\n            \"ethnologue\": {\r\n                \"code\": \"{{languageEthnologueCode}}\",\r\n                \"provisionalCode\": \"{{languageEthnologueProvisionalCode}}\",\r\n                \"name\": \"{{languageEthnologueName}}\",\r\n                \"population\": {{languageEthnologuePopulation}}\r\n            },\r\n            \"populationOverride\": {{languagePopulationOverride}},\r\n            \"registryOfDialectsCode\": \"{{languageRegistryOfDialectsCode}}\",\r\n            \"leastOfThese\": false,\r\n            \"hasExternalFirstScripture\": false,\r\n            \"sensitivity\": \"{{languageSensitivity}}\",\r\n            \"leastOfTheseReason\": \"{{languageLeastOfTheseReason}}\",\r\n            \"isSignLanguage\": true,\r\n            \"signLanguageCode\": \"{{signLanguageCode}}\",\r\n            \"sponsorEstimatedEndDate\": \"{{languageSponsorEstimatedEndDate}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Product ( Create Language Engagement )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var id = jsonData.data.createLanguageEngagement.engagement.id;\r",
									"pm.globals.set('languageEngagementId',id);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createLanguageEngagement($input: CreateLanguageEngagementInput!) {\r\n  createLanguageEngagement(input: $input) {\r\n    engagement {\r\n      id\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"input\": {\r\n        \"engagement\": {\r\n            \"projectId\": \"{{projectid}}\",\r\n            \"languageId\": \"{{languageid}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Product ( Create Film )",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"filmName\", \"FilmName\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"// ScriptureReferences Value\r",
									"// Static values \r",
									"pm.globals.set('filmScriptRefBookStart', \"Genesis\");\r",
									"\r",
									"pm.globals.set('filmScriptRefChapterStart', 3);\r",
									"\r",
									"pm.globals.set('filmScriptRefVerseStart', 4);\r",
									"\r",
									"let expectedLabelStart = `${pm.globals.get('filmScriptRefBookStart')} ${pm.globals.get('filmScriptRefChapterStart')}:${pm.globals.get('filmScriptRefVerseStart')}`;\r",
									"\r",
									"pm.globals.set('filmScriptRefLabelStart', expectedLabelStart);\r",
									"\r",
									"pm.globals.set('filmScriptRefBookEnd', \"Genesis\");\r",
									"\r",
									"pm.globals.set('filmScriptRefChapterEnd', 3);\r",
									"\r",
									"pm.globals.set('filmScriptRefVerseEnd', 4);\r",
									"\r",
									"let expectedLabelEnd = `${pm.globals.get('filmScriptRefBookEnd')} ${pm.globals.get('filmScriptRefChapterEnd')}:${pm.globals.get('filmScriptRefVerseEnd')}`\r",
									"\r",
									"pm.globals.set('filmScriptRefLabelEnd', expectedLabelEnd);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"var id = jsonData.data.createFilm.film.id;\r",
									"pm.globals.set(\"filmId\", id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createFilm($input: CreateFilmInput!) {\r\n  createFilm(input: $input) {\r\n    film {\r\n      id\r\n      createdAt\r\n      canDelete\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      scriptureReferences {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          totalVerses\r\n          label\r\n          start {\r\n            book\r\n            label\r\n            chapter\r\n            verse\r\n          }\r\n          end {\r\n            book\r\n            label\r\n            chapter\r\n            verse\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"film\": {\r\n            \"name\": \"{{filmName}}\",\r\n            \"scriptureReferences\": {\r\n                \"start\": {\r\n                    \"book\": \"{{filmScriptRefBookStart}}\",\r\n                    \"chapter\": {{filmScriptRefChapterStart}},\r\n                    \"verse\": {{filmScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{filmScriptRefBookEnd}}\",\r\n                    \"chapter\": {{filmScriptRefChapterEnd}},\r\n                    \"verse\": {{filmScriptRefVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Create Product Success - with produces ??",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"\r",
									"    // Saving data for future use\r",
									"    pm.globals.set(\"productId\", id);\r",
									"});\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.createProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product approach\", function () {\r",
									"    var approach = jsonData.data.createProduct.product.approach;\r",
									"    pm.expect((pm.globals.get('productApproach_array')).includes(approach)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.createProduct.product.legacyType;\r",
									"    pm.expect((pm.globals.get('productLegacyType_array')).includes(legacyType)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"// scriptureReferences - PENDING Cases\r",
									"pm.test(\"Verify that scriptureReferences is not null\", function () {\r",
									"    var scriptureReferences = jsonData.data.createProduct.product.scriptureReferences.value;\r",
									"    pm.expect(scriptureReferences).to.not.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// // Taking random value for the Product methodology from pre-defined possible values\r",
									"// var prodMethodologyArray = [\r",
									"//     'Paratext',\r",
									"//     'OtherWritten',\r",
									"//     'Render',\r",
									"//     'OtherOralTranslation',\r",
									"//     'BibleStories',\r",
									"//     'BibleStorying',\r",
									"//     'OneStory',\r",
									"//     'OtherOralStories',\r",
									"//     'Film',\r",
									"//     'SignLanguage',\r",
									"//     'OtherVisual'\r",
									"// ];\r",
									"// var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"// pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      canDelete\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\", \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Success - with scriptRef - Same Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"\r",
									"    // Saving data for future use\r",
									"    pm.globals.set(\"productId\", id);\r",
									"});\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.createProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product approach\", function () {\r",
									"    var approach = jsonData.data.createProduct.product.approach;\r",
									"    pm.expect((pm.globals.get('productApproach_array')).includes(approach)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.createProduct.product.legacyType;\r",
									"    pm.expect((pm.globals.get('productLegacyType_array')).includes(legacyType)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Book is same as requested\", function () {\r",
									"    var startBook = jsonData.data.createProduct.product.scriptureReferences.value[0].start.book;\r",
									"    pm.expect(startBook).to.eql(pm.globals.get('productScriptRefBookStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Chapter is same as requested\", function () {\r",
									"    var startChapter = jsonData.data.createProduct.product.scriptureReferences.value[0].start.chapter;\r",
									"    pm.expect(startChapter).to.eql(pm.globals.get('productScriptRefChapterStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Verse is same as requested\", function () {\r",
									"    var startVerse = jsonData.data.createProduct.product.scriptureReferences.value[0].start.verse;\r",
									"    pm.expect(startVerse).to.eql(pm.globals.get('productScriptRefVerseStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Label\", function () {\r",
									"    var startLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].start.label;\r",
									"\r",
									"    pm.expect(startLabel).to.eql(pm.globals.get('productScriptRefLabelStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endBook is same as requested\", function () {\r",
									"    var startBook = jsonData.data.createProduct.product.scriptureReferences.value[0].end.book;\r",
									"    pm.expect(startBook).to.eql(pm.globals.get('productScriptRefBookStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endChapter is same as requested\", function () {\r",
									"    var endChapter = jsonData.data.createProduct.product.scriptureReferences.value[0].end.chapter;\r",
									"    pm.expect(endChapter).to.eql(pm.globals.get('productScriptRefChapterEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endVerse is same as requested\", function () {\r",
									"    var endVerse = jsonData.data.createProduct.product.scriptureReferences.value[0].end.verse;\r",
									"    pm.expect(endVerse).to.eql(pm.globals.get('productScriptRefVerseEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endLabel is same as requested\", function () {\r",
									"    var endLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].end.label;\r",
									"    pm.expect(endLabel).to.eql(pm.globals.get('productScriptRefLabelEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify product scriptureReferences label\", function () {\r",
									"    var label = jsonData.data.createProduct.product.scriptureReferences.value[0].label;\r",
									"    pm.expect(label).to.eql(pm.globals.get('productScriptRefLabelEnd'));\r",
									"});\r",
									"\r",
									"//Static\r",
									"pm.test(\"Verify created product totalVerses is same as requested\", function () {\r",
									"    var totalVerses = jsonData.data.createProduct.product.scriptureReferences.value[0].totalVerses;\r",
									"     pm.expect(totalVerses).to.be.above(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences Value\r",
									"// Static values \r",
									"pm.globals.set('productScriptRefBookStart', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterStart', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseStart', 4);\r",
									"\r",
									"let expectedLabelStart = `${pm.globals.get('productScriptRefBookStart')} ${pm.globals.get('productScriptRefChapterStart')}:${pm.globals.get('productScriptRefVerseStart')}`;\r",
									"\r",
									"pm.globals.set('productScriptRefLabelStart',expectedLabelStart);\r",
									"\r",
									"pm.globals.set('productScriptRefBookEnd', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterEnd', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseEnd', 4);\r",
									"\r",
									"let expectedLabelEnd = `${pm.globals.get('productScriptRefBookEnd')} ${pm.globals.get('productScriptRefChapterEnd')}:${pm.globals.get('productScriptRefVerseEnd')}`\r",
									"\r",
									"pm.globals.set('productScriptRefLabelEnd', expectedLabelEnd);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\",\r\n            \"scriptureReferences\": {\r\n                \"start\": {\r\n                    \"book\": \"{{productScriptRefBookStart}}\",\r\n                    \"chapter\": {{productScriptRefChapterStart}},\r\n                    \"verse\": {{productScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{productScriptRefBookEnd}}\",\r\n                    \"chapter\": {{productScriptRefChapterEnd}},\r\n                    \"verse\": {{productScriptRefVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Success - with scriptRef - Diffrent  Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"\r",
									"    // Saving data for future use\r",
									"    pm.globals.set(\"productId\", id);\r",
									"});\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.createProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product approach\", function () {\r",
									"    var approach = jsonData.data.createProduct.product.approach;\r",
									"    pm.expect((pm.globals.get('productApproach_array')).includes(approach)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.createProduct.product.legacyType;\r",
									"    pm.expect((pm.globals.get('productLegacyType_array')).includes(legacyType)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"\r",
									"//scriptureReferences\r",
									"\r",
									"pm.test(\"Verify created product start Book is same as requested\", function () {\r",
									"    var startBook = jsonData.data.createProduct.product.scriptureReferences.value[0].start.book;\r",
									"    pm.expect(startBook).to.eql(pm.globals.get('productScriptRefBookStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Chapter is same as requested\", function () {\r",
									"    var startChapter = jsonData.data.createProduct.product.scriptureReferences.value[0].start.chapter;\r",
									"    pm.expect(startChapter).to.eql(pm.globals.get('productScriptRefChapterStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Verse is same as requested\", function () {\r",
									"    var startVerse = jsonData.data.createProduct.product.scriptureReferences.value[0].start.verse;\r",
									"    pm.expect(startVerse).to.eql(pm.globals.get('productScriptRefVerseStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Label\", function () {\r",
									"    var startLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].start.label;\r",
									"\r",
									"    pm.expect(startLabel).to.eql(pm.globals.get('productScriptRefLabelStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endBook is same as requested\", function () {\r",
									"    var startBook = jsonData.data.createProduct.product.scriptureReferences.value[0].end.book;\r",
									"    pm.expect(startBook).to.eql(pm.globals.get('productScriptRefBookEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endChapter is same as requested\", function () {\r",
									"    var endChapter = jsonData.data.createProduct.product.scriptureReferences.value[0].end.chapter;\r",
									"    pm.expect(endChapter).to.eql(pm.globals.get('productScriptRefChapterEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endVerse is same as requested\", function () {\r",
									"    var endVerse = jsonData.data.createProduct.product.scriptureReferences.value[0].end.verse;\r",
									"    pm.expect(endVerse).to.eql(pm.globals.get('productScriptRefVerseEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endLabel is same as requested\", function () {\r",
									"    var endLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].end.label;\r",
									"    pm.expect(endLabel).to.eql(pm.globals.get('productScriptRefLabelEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify product scriptureReferences label\", function () {\r",
									"    var label = jsonData.data.createProduct.product.scriptureReferences.value[0].label;\r",
									"    var startLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].start.label;\r",
									"    var endLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].end.label;\r",
									"    var expectedLabel = startLabel + \"-\" + endLabel;\r",
									"    pm.expect(label).to.eql(expectedLabel);\r",
									"});\r",
									"\r",
									"//Static\r",
									"pm.test(\"Verify created product totalVerses is same as requested\", function () {\r",
									"    var totalVerses = jsonData.data.createProduct.product.scriptureReferences.value[0].totalVerses;\r",
									"     pm.expect(totalVerses).to.be.above(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences Value\r",
									"// Static values \r",
									"pm.globals.set('productScriptRefBookStart', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterStart', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseStart', 4);\r",
									"\r",
									"let expectedLabelStart = `${pm.globals.get('productScriptRefBookStart')} ${pm.globals.get('productScriptRefChapterStart')}:${pm.globals.get('productScriptRefVerseStart')}`;\r",
									"\r",
									"pm.globals.set('productScriptRefLabelStart',expectedLabelStart);\r",
									"\r",
									"pm.globals.set('productScriptRefBookEnd', \"Exodus\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterEnd', 4);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseEnd', 5);\r",
									"\r",
									"let expectedLabelEnd = `${pm.globals.get('productScriptRefBookEnd')} ${pm.globals.get('productScriptRefChapterEnd')}:${pm.globals.get('productScriptRefVerseEnd')}`\r",
									"\r",
									"pm.globals.set('productScriptRefLabelEnd', expectedLabelEnd);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\",\r\n            \"scriptureReferences\": {\r\n                \"start\": {\r\n                    \"book\": \"{{productScriptRefBookStart}}\",\r\n                    \"chapter\": {{productScriptRefChapterStart}},\r\n                    \"verse\": {{productScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{productScriptRefBookEnd}}\",\r\n                    \"chapter\": {{productScriptRefChapterEnd}},\r\n                    \"verse\": {{productScriptRefVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Success - Array Inputs - unique for medium??",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"// Util function - returns true If both arrays are same\r",
									"function areSameArray(array1, array2) {\r",
									"    return array1.length === array2.length && array1.sort().every((value, index) => { return value === array2.sort()[index] });\r",
									"}\r",
									"\r",
									"pm.test(\"Verify product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value;\r",
									"    var productMediumsArray = JSON.parse(pm.globals.get('productMediumsArray'));\r",
									"\r",
									"    pm.expect(areSameArray(mediums, productMediumsArray)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value;\r",
									"    var productPurposesArray = JSON.parse(pm.globals.get('productPurposesArray'));\r",
									"\r",
									"    pm.expect(areSameArray(purposes, productPurposesArray)).to.eql(true);\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify product methodology are same as requested\", function () {\r",
									"//     var purposes = jsonData.data.createProduct.product.purposes.value;\r",
									"//     var productPurposesArray = JSON.parse(pm.globals.get('productPurposesArray'));\r",
									"\r",
									"//     pm.expect(areSameArray(purposes, productPurposesArray)).to.eql(true);\r",
									"// });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// MEDIUMS ARRAY - generate random array\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"pm.globals.set('productMediumsArray', JSON.stringify(generateRandomArrayFromArray(5, prodMediumsArray)));\r",
									"\r",
									"// PURPOSES ARRAY - generate random array\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"];\r",
									"pm.globals.set('productPurposesArray', JSON.stringify(generateRandomArrayFromArray(3, prodPurposesArray)));\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// APPROACH ARRAY - approach output to be checked from pre-defined array\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"// LEGACY TYPE ARRAY - legacyType output to be checked from pre-defined array\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									"// Random array generator - Util Function\r",
									"function generateRandomArrayFromArray(randomArrayLength, possibleArray) {\r",
									"    let randomArray = [];\r",
									"    var possible = possibleArray;\r",
									"    let preDefinedLength = randomArrayLength;\r",
									"    for (let i = 0; i < preDefinedLength; i++) {\r",
									"        let choice = Math.floor((Math.random() * possible.length));\r",
									"        if (randomArray.includes(possible[choice]))\r",
									"            continue;\r",
									"        randomArray.push(possible[choice]);\r",
									"    }\r",
									"    return randomArray;\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": {{productMediumsArray}},\r\n      \"purposes\": {{productPurposesArray}},\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product - Array Inputs - duplicate - mediums",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// MEDIUMS ARRAY - generate array with duplicate values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"\r",
									"pm.globals.set('productMediumsArray', JSON.stringify(new Array(2).fill(prodMediumsArray[_.random(0, prodMediumsArray.length - 1)])));\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product type does not have duplicate values\", function () {\r",
									"    var mediums_length = jsonData.data.createProduct.product.mediums.value.length;\r",
									"    console.log('mediums_length=' + mediums_length)\r",
									"    pm.expect(mediums_length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": {{productMediumsArray}},\r\n      \"purposes\": {{productPurposesArray}},\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Success - Array Inputs - unique for purposes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// MEDIUMS ARRAY - generate random array\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"pm.globals.set('productMediumsArray', JSON.stringify(generateRandomArrayFromArray(5, prodMediumsArray)));\r",
									"\r",
									"// PURPOSES ARRAY - generate random array\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"];\r",
									"pm.globals.set('productPurposesArray', JSON.stringify(generateRandomArrayFromArray(3, prodPurposesArray)));\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// APPROACH ARRAY - approach output to be checked from pre-defined array\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"// LEGACY TYPE ARRAY - legacyType output to be checked from pre-defined array\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									"// Random array generator - Util Function\r",
									"function generateRandomArrayFromArray(randomArrayLength, possibleArray) {\r",
									"    let randomArray = [];\r",
									"    var possible = possibleArray;\r",
									"    let preDefinedLength = randomArrayLength;\r",
									"    for (let i = 0; i < preDefinedLength; i++) {\r",
									"        let choice = Math.floor((Math.random() * possible.length));\r",
									"        if (randomArray.includes(possible[choice]))\r",
									"            continue;\r",
									"        randomArray.push(possible[choice]);\r",
									"    }\r",
									"    return randomArray;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"// Util function - returns true If both arrays are same\r",
									"function areSameArray(array1, array2) {\r",
									"    return array1.length === array2.length && array1.sort().every((value, index) => { return value === array2.sort()[index] });\r",
									"}\r",
									"// pm.test(\"Verify product mediums are same as requested\", function () {\r",
									"//     var mediums = jsonData.data.createProduct.product.mediums.value;\r",
									"//     var productMediumsArray = JSON.parse(pm.globals.get('productMediumsArray'));\r",
									"\r",
									"//     pm.expect(areSameArray(mediums, productMediumsArray)).to.eql(true);\r",
									"// });\r",
									"\r",
									"pm.test(\"Verify product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value;\r",
									"    var productPurposesArray = JSON.parse(pm.globals.get('productPurposesArray'));\r",
									"\r",
									"    pm.expect(areSameArray(purposes, productPurposesArray)).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": {{productMediumsArray}},\r\n      \"purposes\": {{productPurposesArray}},\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product - Array Inputs - duplicate - purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product type does not have duplicate values\", function () {\r",
									"    var purposes_length = jsonData.data.createProduct.product.purposes.value.length;\r",
									"    console.log('purposes_length=' + purposes_length)\r",
									"    pm.expect(purposes_length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"\r",
									"\r",
									"//PURPOSES ARRAY - generate array with duplicate values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"];\r",
									"\r",
									"pm.globals.set('productPurposesArray', JSON.stringify(new Array(2).fill(prodPurposesArray[_.random(0, prodPurposesArray.length)])));\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": {{productMediumsArray}},\r\n      \"purposes\": {{productPurposesArray}},\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Success - Only Required Inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.createProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product approach is null\", function () {\r",
									"    var approach = jsonData.data.createProduct.product.approach;\r",
									"    pm.expect(approach).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.createProduct.product.legacyType;\r",
									"    pm.expect((pm.globals.get('productLegacyType_array')).includes(legacyType)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product mediums are empty\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value;\r",
									"    pm.expect(mediums).to.eql([]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product purposes are empty\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value;\r",
									"    pm.expect(purposes).to.eql([]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product methodology is null\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Created product scriptureReferences are empty\", function () {\r",
									"    var scriptureReferences = jsonData.data.createProduct.product.scriptureReferences.value;\r",
									"    var isEmpty = _.isEmpty(scriptureReferences);\r",
									"    pm.expect(isEmpty).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Mandatory Field Blank - engagementId ???",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that engagementId error message is correct\", function () {",
									"    var error_engagementId = jsonData.errors[0].extensions.errors['product.engagementId'].IsId;  ",
									"    pm.expect(error_engagementId).to.eql(\"Invalid ID\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Mandatory Field Removed - engagementId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"engagementId\\\" of required type \\\"ID!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - produces ??",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that produces error message is correct\", function () {\r",
									"    var error_engagementId = jsonData.errors[0].extensions.errors['product.produces'].IsId;  \r",
									"    pm.expect(error_engagementId).to.eql(\"Invalid ID\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - produces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"// //Test specific\r",
									"// pm.test(\"PENDING >> BUG ADDED #942(open-Sprint 15) ( Getting 'No book matched' error while 'produces' field is not provided ) \", function () {\r",
									"\r",
									"//     if (jsonData.errors) {\r",
									"//         pm.expect(\"BACKEND\").to.eql(\"PENDING\"); // fail forcefully\r",
									"//     } else {\r",
									"//         pm.expect(\"WRITE TEST CASES\").to.eql(\"ERRORS >>> \" + jsonData.errors[0].message);\r",
									"//     }\r",
									"\r",
									"// });\r",
									"//Test Specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product scriptureReferences are empty\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.scriptureReferences.value;\r",
									"    var isEmpty = _.isEmpty(mediums);\r",
									"    pm.expect(isEmpty).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'Audio',\r",
									"    'OralTranslation',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									"// ScriptureReferences Value\r",
									"// Static values \r",
									"pm.globals.set('productScriptRefBookStart', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterStart', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseStart', 4);\r",
									"\r",
									"let expectedLabelStart = `${pm.globals.get('productScriptRefBookStart')} ${pm.globals.get('productScriptRefChapterStart')}:${pm.globals.get('productScriptRefVerseStart')}`;\r",
									"\r",
									"pm.globals.set('productScriptRefLabelStart', expectedLabelStart);\r",
									"\r",
									"pm.globals.set('productScriptRefBookEnd', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterEnd', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseEnd', 4);\r",
									"\r",
									"let expectedLabelEnd = `${pm.globals.get('productScriptRefBookEnd')} ${pm.globals.get('productScriptRefChapterEnd')}:${pm.globals.get('productScriptRefVerseEnd')}`\r",
									"\r",
									"pm.globals.set('productScriptRefLabelEnd', expectedLabelEnd);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - mediums",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMedium\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - mediums",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product mediums are empty\", function () {\r",
									"    var mediums = jsonData.data.createProduct.product.mediums.value;\r",
									"    var isEmpty = _.isEmpty(mediums);\r",
									"    pm.expect(isEmpty).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductPurpose\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"produces\": \"{{productProducesId}}\",\r\n            \"purposes\": \"\",\r\n            \"methodology\": \"{{productMethodology}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product purposes are empty\", function () {\r",
									"    var purposes = jsonData.data.createProduct.product.purposes.value;\r",
									"    var isEmpty = _.isEmpty(purposes);\r",
									"    pm.expect(isEmpty).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMethodology\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.createProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product methodology is null\", function () {\r",
									"    var methodology = jsonData.data.createProduct.product.methodology.value;\r",
									"    var isEmpty = _.isEmpty(methodology);\r",
									"    pm.expect(isEmpty).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - ScriptRef start book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is Validation\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('Validation');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error start book message is correct\", function () {\r",
									"    var error_book_message = jsonData.errors[0].extensions.errors['product.scriptureReferences.0.start.book'].ScriptureBook;\r",
									"    pm.expect(error_book_message).to.eql(\"Not a valid Bible book\");\r",
									"\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify that error end book message is correct\", function () {\r",
									"//     var error_book_message = jsonData.errors[0].extensions.errors['product.scriptureReferences.0.end.book'].ScriptureBook;\r",
									"//     pm.expect(error_book_message).to.eql(\"Not a valid Bible book\");\r",
									"// });\r",
									"\r",
									"\r",
									"// pm.test(\"Verify that error start verse message is correct\", function () {\r",
									"//     var error_verse_message = jsonData.errors[0].extensions.errors['product.scriptureReferences.0.end.verse'].ScriptureVerse;\r",
									"//     pm.expect(error_verse_message).to.include(\"Genesis 3 does not have verse 449\");\r",
									"\r",
									"// });\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - ScriptRef start book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Blank - ScriptRef end book ??",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is Validation\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('Validation');\r",
									"});\r",
									"\r",
									"// pm.test(\"Verify that error start book message is correct\", function () {\r",
									"//     var error_start_book_message = jsonData.errors[0].extensions.errors['product.scriptureReferences.0.start.book'].ScriptureBook;\r",
									"//     pm.expect(error_start_book_message).to.eql(\"Not a valid Bible book\");\r",
									"\r",
									"// });\r",
									"\r",
									"pm.test(\"Verify that error end book message is correct\", function () {\r",
									"    var error_end_book_message = jsonData.errors[0].extensions.errors['product.scriptureReferences.0.end.book'].ScriptureBook;\r",
									"    pm.expect(error_end_book_message).to.eql(\"Not a valid Bible book\");\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field Removed - ScriptRef end book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\",\r\n            \"scriptureReferences\": {\r\n                \"start\": {\r\n                    \"book\": \"{{productScriptRefBookStart}}\",\r\n                    \"chapter\": {{productScriptRefChapterStart}},\r\n                    \"verse\": {{productScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"chapter\": {{productScriptRefChapterEnd}},\r\n                    \"verse\": {{productScriptRefVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Not Mandatory Field - ScriptRefOverride ?????",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"// pm.test(\"PENDING >> BUG ADDED #867(closed-Sprint 14) ( 'scriptureReferences' returned empty even if the values provided ) \", function () {\r",
									"\r",
									"//     if (jsonData.errors) {\r",
									"//         pm.expect(\"BACKEND\").to.eql(\"PENDING\"); // fail forcefully\r",
									"//     } else {\r",
									"//         pm.expect(\"WRITE TEST CASES\").to.eql(\"ERRORS >>> \" + jsonData.errors[0].message);\r",
									"//     }\r",
									"\r",
									"// });\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Verify created product start Book is same as requested\", function () {\r",
									"    var startBook = jsonData.data.createProduct.product.scriptureReferences.value[0].start.book;\r",
									"    pm.expect(startBook).to.eql(pm.globals.get('productScriptRefOverRideBookStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Chapter is same as requested\", function () {\r",
									"    var startChapter = jsonData.data.createProduct.product.scriptureReferences.value[0].start.chapter;\r",
									"    pm.expect(startChapter).to.eql(pm.globals.get('productScriptRefOverRideChapterStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Verse is same as requested\", function () {\r",
									"    var startVerse = jsonData.data.createProduct.product.scriptureReferences.value[0].start.verse;\r",
									"    pm.expect(startVerse).to.eql(pm.globals.get('productScriptRefOverRideVerseStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product start Label\", function () {\r",
									"    var startLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].start.label;\r",
									"\r",
									"    pm.expect(startLabel).to.eql(pm.globals.get('productScriptRefOverRideLabelStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endBook is same as requested\", function () {\r",
									"    var startBook = jsonData.data.createProduct.product.scriptureReferences.value[0].end.book;\r",
									"    pm.expect(startBook).to.eql(pm.globals.get('productScriptRefOverRideBookEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endChapter is same as requested\", function () {\r",
									"    var endChapter = jsonData.data.createProduct.product.scriptureReferences.value[0].end.chapter;\r",
									"    pm.expect(endChapter).to.eql(pm.globals.get('productScriptRefOverRideChapterEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endVerse is same as requested\", function () {\r",
									"    var endVerse = jsonData.data.createProduct.product.scriptureReferences.value[0].end.verse;\r",
									"    pm.expect(endVerse).to.eql(pm.globals.get('productScriptRefOverRideVerseEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify created product endLabel is same as requested\", function () {\r",
									"    var endLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].end.label;\r",
									"    pm.expect(endLabel).to.eql(pm.globals.get('productScriptRefOverRideLabelEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify product scriptureReferences label\", function () {\r",
									"    var label = jsonData.data.createProduct.product.scriptureReferences.value[0].label;\r",
									"    var startLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].start.label;\r",
									"    var endLabel = jsonData.data.createProduct.product.scriptureReferences.value[0].end.label;\r",
									"    var endLabelRemovedSpace = endLabel.remove(\"Exodus\").trim();\r",
									"\r",
									"    var expectedLabel = startLabel + \"-\" + endLabelRemovedSpace;\r",
									"\r",
									"    pm.expect(label).to.eql(expectedLabel);\r",
									"});\r",
									"\r",
									"//Static\r",
									"pm.test(\"Verify created product totalVerses is same as requested\", function () {\r",
									"    var totalVerses = jsonData.data.createProduct.product.scriptureReferences.value[0].totalVerses;\r",
									"    pm.expect(totalVerses).to.be.above(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// ScriptureReferences Value\r",
									"// Static values \r",
									"pm.globals.set('productScriptRefOverRideBookStart', \"Exodus\");\r",
									"\r",
									"pm.globals.set('productScriptRefOverRideChapterStart', 22);\r",
									"\r",
									"pm.globals.set('productScriptRefOverRideVerseStart', 4);\r",
									"\r",
									"let concatStringStart = `${pm.globals.get('productScriptRefOverRideBookStart')} ${pm.globals.get('productScriptRefOverRideChapterStart')}:${pm.globals.get('productScriptRefOverRideVerseStart')}`\r",
									"\r",
									"pm.globals.set('productScriptRefOverRideLabelStart',concatStringStart);\r",
									"\r",
									"pm.globals.set('productScriptRefOverRideBookEnd', \"Exodus\");\r",
									"\r",
									"pm.globals.set('productScriptRefOverRideChapterEnd', 25);\r",
									"\r",
									"pm.globals.set('productScriptRefOverRideVerseEnd', 4);\r",
									"\r",
									"let concatStringEnd = `${pm.globals.get('productScriptRefOverRideBookEnd')} ${pm.globals.get('productScriptRefOverRideChapterEnd')}:${pm.globals.get('productScriptRefOverRideVerseEnd')}`\r",
									"\r",
									"pm.globals.set('productScriptRefOverRideLabelEnd', concatStringEnd);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"produces\": \"{{filmId}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\",\r\n            \"scriptureReferencesOverride\": {\r\n                \"start\": {\r\n                    \"book\": \"{{productScriptRefOverRideBookStart}}\",\r\n                    \"chapter\": {{productScriptRefOverRideChapterStart}},\r\n                    \"verse\": {{productScriptRefOverRideVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{productScriptRefOverRideBookEnd}}\",\r\n                    \"chapter\": {{productScriptRefOverRideChapterEnd}},\r\n                    \"verse\": {{productScriptRefOverRideVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - engagementId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"engagementId\\\" of required type \\\"ID!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId1\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - produces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"produces\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces1\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - mediums",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"mediums\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums1\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"purposes\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes1\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"methodology\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology1\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"scriptureReferences\\\" or \\\"scriptureReferencesOverride\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences1\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef start",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"start\\\" of required type \\\"ScriptureReferenceInput!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"produces\": \"{{productProducesId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\",\r\n            \"scriptureReferences\": {\r\n                \"start1\": {\r\n                    \"book\": \"{{scriptureReferencesBookStart}}\",\r\n                    \"chapter\": {{productScriptRefChapterStart}},\r\n                    \"verse\": {{productScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n                    \"chapter\": {{productScriptRefChapterEnd}},\r\n                    \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n                }\r\n            },\r\n            \"scriptureReferencesOverride\": {\r\n                \"start\": {\r\n                    \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n                    \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n                    \"verse\": {{productScriptRefOverrideVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n                    \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n                    \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef start book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"produces\": \"{{productProducesId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\",\r\n            \"scriptureReferences\": {\r\n                \"start\": {\r\n                    \"book1\": \"{{scriptureReferencesBookStart}}\",\r\n                    \"chapter\": {{productScriptRefChapterStart}},\r\n                    \"verse\": {{productScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n                    \"chapter\": {{productScriptRefChapterEnd}},\r\n                    \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n                }\r\n            },\r\n            \"scriptureReferencesOverride\": {\r\n                \"start\": {\r\n                    \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n                    \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n                    \"verse\": {{productScriptRefOverrideVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n                    \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n                    \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef start chapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"chapter1\\\" is not defined by type \\\"ScriptureReferenceInput\\\". Did you mean \\\"chapter\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter1\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef start verse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"verse1\\\" is not defined by type \\\"ScriptureReferenceInput\\\". Did you mean \\\"verse\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse1\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef end",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"end\\\" of required type \\\"ScriptureReferenceInput!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end1\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef end book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book1\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef end chapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"chapter1\\\" is not defined by type \\\"ScriptureReferenceInput\\\". Did you mean \\\"chapter\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter1\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRef end verse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"verse1\\\" is not defined by type \\\"ScriptureReferenceInput\\\". Did you mean \\\"verse\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse1\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreateProduct\\\". Did you mean \\\"scriptureReferencesOverride\\\" or \\\"scriptureReferences\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\",\r\n            \"scriptureReferencesOverride1\": {\r\n                \"start\": {\r\n                    \"book\": \"{{productScriptRefBookStart}}\",\r\n                    \"chapter\": {{productScriptRefChapterStart}},\r\n                    \"verse\": {{productScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{productScriptRefBookEnd}}\",\r\n                    \"chapter\": {{productScriptRefChapterEnd}},\r\n                    \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride start",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"start\\\" of required type \\\"ScriptureReferenceInput!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferencesOverride\": {\r\n        \"start1\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride start book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book1\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride start chapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"chapter1\\\" is not defined by type \\\"ScriptureReferenceInput\\\". Did you mean \\\"chapter\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter1\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride start verse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\" Field \\\"verse1\\\" is not defined by type \\\"ScriptureReferenceInput\\\". Did you mean \\\"verse\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse1\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride end",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"end\\\" of required type \\\"ScriptureReferenceInput!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end1\": {\r\n          \"book\": \"{{scriptureReferencesBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      },\r\n\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{scriptureReferencesOverrideStart}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterStart}},\r\n          \"verse\": {{productScriptRefOverrideVerseStart}}\r\n        },\r\n        \"end1\": {\r\n          \"book\": \"{{scriptureReferencesOverrideend}}\",\r\n          \"chapter\": {{productScriptRefOverrideChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride end book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"book\\\" of required type \\\"String!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book1\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride end chapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"chapter1\\\" is not defined by type \\\"ScriptureReferenceInput\\\". Did you mean \\\"chapter\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter1\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Mismatch - ScriptRefOverride end verse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"verse1\\\" is not defined by type \\\"ScriptureReferenceInput\\\". Did you mean \\\"verse\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferencesOverride\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse1\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - engagementId ??",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that engagementId error message is correct\", function () {",
									"    var error_engagementId = jsonData.errors[0].extensions.errors['product.engagementId'].IsId;  ",
									"    pm.expect(error_engagementId).to.eql(\"Invalid ID\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"!@#$%^&*\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - produces ???",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that produces error message is correct\", function () {",
									"    var error_engagementId = jsonData.errors[0].extensions.errors['product.produces'].IsId;  ",
									"    pm.expect(error_engagementId).to.eql(\"Invalid ID\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"!@# ^&*( ()_\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - mediums",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMedium\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"!@# %^& lkflk\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductPurpose\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"~ ! ) _ =\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product Parameter Invalid - methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMethodology\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{productProducesId}}\",\r\n      \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"++ __ 99 \"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Get Product by Id and Update ( Create Product )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Saving data for future use\r",
									"var id = jsonData.data.createProduct.product.id;\r",
									"pm.globals.set(\"productId\", id);\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences Value\r",
									"// Static values \r",
									"pm.globals.set('productScriptRefBookStart', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterStart', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseStart', 4);\r",
									"\r",
									"let expectedLabelStart = `${pm.globals.get('productScriptRefBookStart')} ${pm.globals.get('productScriptRefChapterStart')}:${pm.globals.get('productScriptRefVerseStart')}`;\r",
									"\r",
									"pm.globals.set('productScriptRefLabelStart',expectedLabelStart);\r",
									"\r",
									"pm.globals.set('productScriptRefBookEnd', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterEnd', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseEnd', 4);\r",
									"\r",
									"let expectedLabelEnd = `${pm.globals.get('productScriptRefBookEnd')} ${pm.globals.get('productScriptRefChapterEnd')}:${pm.globals.get('productScriptRefVerseEnd')}`\r",
									"\r",
									"pm.globals.set('productScriptRefLabelEnd', expectedLabelEnd);\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n     \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n       \"scriptureReferences\": {\r\n                \"start\": {\r\n                    \"book\": \"{{productScriptRefBookStart}}\",\r\n                    \"chapter\": {{productScriptRefChapterStart}},\r\n                    \"verse\": {{productScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{productScriptRefBookEnd}}\",\r\n                    \"chapter\": {{productScriptRefChapterEnd}},\r\n                    \"verse\": {{productScriptRefVerseEnd}}\r\n                }\r\n            }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Success ??",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var product_data = JSON.parse(pm.globals.get(\"product_data\"));;\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verifying product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product's createdAt\", function () {\r",
									"    var createdAt = jsonData.data.product.createdAt;\r",
									"    pm.expect(createdAt).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product approach\", function () {\r",
									"    var approach = jsonData.data.product.approach;\r",
									"    pm.expect(approach).to.eql(product_data.approach);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.product.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product mediums\", function () {\r",
									"    var mediums = jsonData.data.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(product_data.mediums.value[0]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product purposes\", function () {\r",
									"    var purposes = jsonData.data.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(product_data.purposes.value[0]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(product_data.methodology.value);\r",
									"});\r",
									"\r",
									"// scriptureReferences - PENDING Cases\r",
									"pm.test(\"Verify that scriptureReferences is not blank or null or empty BUG ADDED #867(closed-Sprint 14)\", function () {\r",
									"    var scriptureReferences = jsonData.data.product.scriptureReferences.value\r",
									"    pm.expect(scriptureReferences).to.not.eql(null);\r",
									"    pm.expect(scriptureReferences).to.not.eql(\"\");\r",
									"    pm.expect(scriptureReferences).to.not.eql([]); // This will pass once value back to this Object\r",
									"    if (typeof scriptureReferences !== typeof [])\r",
									"        pm.expect(\"WRITE TEST CASES\").to.eql(\"PENDING >>> \" + scriptureReferences);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"{{productId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Mandatory Field Blank - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is 400\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that education error message is correct\", function () {\r",
									"    var error_education_message = jsonData.errors[0].extensions.errors.id.IsId;  \r",
									"    pm.expect(error_education_message).to.eql(\"Invalid ID\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Mandatory Field Removed - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Parameter Mismatch - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id1\": \"{{productId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By id Parameter Invalid - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is 400\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that education error message is correct\", function () {\r",
									"    var error_education_message = jsonData.errors[0].extensions.errors.id.IsId;  \r",
									"    pm.expect(error_education_message).to.eql(\"Invalid ID\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query product($id: ID!) {\r\n  product(id: $id) {\r\n    id\r\n    createdAt\r\n    approach\r\n    legacyType\r\n    mediums {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    purposes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    methodology {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    scriptureReferences {\r\n      value {\r\n        start {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        end {\r\n          book\r\n          chapter\r\n          verse\r\n\r\n          label\r\n        }\r\n        label\r\n        totalVerses\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"+++ __ * // id\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Success - with scriptRef???????",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var product_data = JSON.parse(pm.variables.get(\"product_data\"));\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.updateProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that product's createdAt is in Specific time format\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();\r",
									"    pm.expect(isValidTime).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's createdAt\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    pm.expect(time).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's approach\", function () {\r",
									"    var approach = jsonData.data.updateProduct.product.approach;\r",
									"   // pm.expect(approach).to.eql(product_data.approach);\r",
									"      pm.expect((pm.globals.get('productApproach_array')).includes(approach)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.updateProduct.product.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.updateProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.updateProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.updateProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"//ScriptureReferences CASES\r",
									"pm.test(\"Verify updated product scriptureReferences start book is same as requested\", function () {\r",
									"    var startBook = jsonData.data.updateProduct.product.scriptureReferences.value[0].start.book;\r",
									"    pm.expect(startBook).to.eql(pm.globals.get('productScriptRefBookStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences start chapter is same as requested\", function () {\r",
									"    var startChapter = jsonData.data.updateProduct.product.scriptureReferences.value[0].start.chapter;\r",
									"    pm.expect(startChapter).to.eql(pm.globals.get('productScriptRefChapterStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences start verse is same as requested\", function () {\r",
									"    var startVerse = jsonData.data.updateProduct.product.scriptureReferences.value[0].start.verse;\r",
									"    pm.expect(startVerse).to.eql(pm.globals.get('productScriptRefVerseStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences start label is same as requested\", function () {\r",
									"    var startLabel = jsonData.data.updateProduct.product.scriptureReferences.value[0].start.label;\r",
									"    pm.expect(startLabel).to.eql(pm.globals.get('productScriptRefLabelStart'));\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences end book is same as requested\", function () {\r",
									"    var endBook = jsonData.data.updateProduct.product.scriptureReferences.value[0].end.book;\r",
									"    pm.expect(endBook).to.eql(pm.globals.get('productScriptRefBookEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences end chapter is same as requested\", function () {\r",
									"    var endChapter = jsonData.data.updateProduct.product.scriptureReferences.value[0].end.chapter;\r",
									"    pm.expect(endChapter).to.eql(pm.globals.get('productScriptRefChapterEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences end verse is same as requested\", function () {\r",
									"    var endVerse = jsonData.data.updateProduct.product.scriptureReferences.value[0].end.verse;\r",
									"    pm.expect(endVerse).to.eql(pm.globals.get('productScriptRefVerseEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences end label is same as requested\", function () {\r",
									"    var endLabel = jsonData.data.updateProduct.product.scriptureReferences.value[0].end.label;\r",
									"    pm.expect(endLabel).to.eql(pm.globals.get('productScriptRefLabelEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences label is same as requested\", function () {\r",
									"    var label = jsonData.data.updateProduct.product.scriptureReferences.value[0].label;\r",
									"    pm.expect(label).to.eql(pm.globals.get('productScriptRefLabelStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences totalVerses is same as requested\", function () {\r",
									"    var totalVerses = jsonData.data.updateProduct.product.scriptureReferences.value[0].totalVerses;\r",
									"     pm.expect(totalVerses).to.be.above(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences Value\r",
									"// Static values \r",
									"pm.globals.set('productScriptRefBookStart', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterStart', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseStart', 4);\r",
									"\r",
									"let expectedLabelStart = `${pm.globals.get('productScriptRefBookStart')} ${pm.globals.get('productScriptRefChapterStart')}:${pm.globals.get('productScriptRefVerseStart')}`\r",
									"\r",
									"pm.globals.set('productScriptRefLabelStart',expectedLabelStart);\r",
									"\r",
									"pm.globals.set('productScriptRefBookEnd', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterEnd', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseEnd', 4);\r",
									"\r",
									"let expectedLabelEnd = `${pm.globals.get('productScriptRefBookEnd')} ${pm.globals.get('productScriptRefChapterEnd')}:${pm.globals.get('productScriptRefVerseEnd')}`\r",
									"\r",
									"pm.globals.set('productScriptRefLabelEnd', expectedLabelEnd);\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateProduct($input: UpdateProductInput!) {\r\n  updateProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"id\": \"{{productId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\",\r\n            \"scriptureReferences\": {\r\n                \"start\": {\r\n                    \"book\": \"{{productScriptRefBookStart}}\",\r\n                    \"chapter\": {{productScriptRefChapterStart}},\r\n                    \"verse\": {{productScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{productScriptRefBookEnd}}\",\r\n                    \"chapter\": {{productScriptRefChapterEnd}},\r\n                    \"verse\": {{productScriptRefVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for update product(Create Product Success - with produces)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"var id = jsonData.data.createProduct.product.id;\r",
									"\r",
									"// Saving data for future use\r",
									"pm.globals.set(\"productId\", id);\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      canDelete\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\", \r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Success - with produces ??",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var product_data = JSON.parse(pm.variables.get(\"product_data\"));\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.updateProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.updateProduct.product);\r",
									"pm.globals.set(\"product_data\", product);\r",
									"\r",
									"pm.test(\"Verify updated product's createdAt\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    pm.expect(time).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product approach\", function () {\r",
									"    var approach = jsonData.data.updateProduct.product.approach;\r",
									"    pm.expect((pm.globals.get('productApproach_array')).includes(approach)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product legacyType\", function () {\r",
									"    var legacyType = jsonData.data.updateProduct.product.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.updateProduct.product.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.updateProduct.product.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product methodology is same as requested\", function () {\r",
									"    var methodology = jsonData.data.updateProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"// ScriptureReferences CASES PENDING\r",
									"pm.test(\"Verify that scriptureReferences is not blank or null or empty BUG ADDED #867(closed-Sprint 14)\", function () {\r",
									"    var scriptureReferences = jsonData.data.updateProduct.product.scriptureReferences.value;\r",
									"    pm.expect(scriptureReferences).to.not.eql(null);\r",
									"    pm.expect(scriptureReferences).to.not.eql(\"\");\r",
									"    pm.expect(scriptureReferences).to.not.eql([]); // This will pass once value back to this Object and test failed in below if\r",
									"    if (typeof scriptureReferences !== typeof [])\r",
									"        pm.expect(\"WRITE TEST CASES\").to.eql(\"PENDING >>> \" + scriptureReferences);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateProduct($input: UpdateProductInput!) {\r\n  updateProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"id\": \"{{productId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n      \r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Success - Only Required Inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var product_data = JSON.parse(pm.variables.get(\"product_data\"));\r",
									"console.log(\"product_data =>\", product_data);\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"// Cases of null , \"\" and [] will be here once issue fixed\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.updateProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's createdAt is same as previous value\", function () {\r",
									"    var time = jsonData.data.updateProduct.product.createdAt;\r",
									"    pm.expect(time).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product's approach is same as previous value\", function () {\r",
									"    var approach = jsonData.data.updateProduct.product.approach;\r",
									"    pm.expect(approach).to.eql(product_data.approach);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product legacyType is same as previous value\", function () {\r",
									"    var legacyType = jsonData.data.updateProduct.product.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product mediums are same as previous value\", function () {\r",
									"    var mediums = jsonData.data.updateProduct.product.mediums.value;\r",
									"    pm.expect(mediums).to.eql(pm.globals.get('productMediums'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product purposes are same as previous value\", function () {\r",
									"    var purposes = jsonData.data.updateProduct.product.purposes.value;\r",
									"    pm.expect(purposes).to.eql(pm.globals.get('productPurposes'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product methodology is same as previous value\", function () {\r",
									"    var methodology = jsonData.data.updateProduct.product.methodology.value\r",
									"    pm.expect(methodology).to.eql(pm.globals.get('productMethodology'));\r",
									"});\r",
									"\r",
									"//ScriptureReferences CASES\r",
									"pm.test(\"Verify updated product scriptureReferences start book is same as requested\", function () {\r",
									"    var startBook = jsonData.data.updateProduct.product.scriptureReferences.value[0].start.book;\r",
									"    pm.expect(startBook).to.eql(pm.globals.get('productScriptRefBookStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences start chapter is same as requested\", function () {\r",
									"    var startChapter = jsonData.data.updateProduct.product.scriptureReferences.value[0].start.chapter;\r",
									"    pm.expect(startChapter).to.eql(pm.globals.get('productScriptRefChapterStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences start verse is same as requested\", function () {\r",
									"    var startVerse = jsonData.data.updateProduct.product.scriptureReferences.value[0].start.verse;\r",
									"    pm.expect(startVerse).to.eql(pm.globals.get('productScriptRefVerseStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences start label is same as requested\", function () {\r",
									"    var startLabel = jsonData.data.updateProduct.product.scriptureReferences.value[0].start.label;\r",
									"    pm.expect(startLabel).to.eql(pm.globals.get('productScriptRefLabelStart'));\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences end book is same as requested\", function () {\r",
									"    var endBook = jsonData.data.updateProduct.product.scriptureReferences.value[0].end.book;\r",
									"    pm.expect(endBook).to.eql(pm.globals.get('productScriptRefBookEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences end chapter is same as requested\", function () {\r",
									"    var endChapter = jsonData.data.updateProduct.product.scriptureReferences.value[0].end.chapter;\r",
									"    pm.expect(endChapter).to.eql(pm.globals.get('productScriptRefChapterEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences end verse is same as requested\", function () {\r",
									"    var endVerse = jsonData.data.updateProduct.product.scriptureReferences.value[0].end.verse;\r",
									"    pm.expect(endVerse).to.eql(pm.globals.get('productScriptRefVerseEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences end label is same as requested\", function () {\r",
									"    var endLabel = jsonData.data.updateProduct.product.scriptureReferences.value[0].end.label;\r",
									"    pm.expect(endLabel).to.eql(pm.globals.get('productScriptRefLabelEnd'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences label is same as requested\", function () {\r",
									"    var label = jsonData.data.updateProduct.product.scriptureReferences.value[0].label;\r",
									"    pm.expect(label).to.eql(pm.globals.get('productScriptRefLabelStart'));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify updated product scriptureReferences totalVerses is same as requested\", function () {\r",
									"    var totalVerses = jsonData.data.updateProduct.product.scriptureReferences.value[0].totalVerses;\r",
									"     pm.expect(totalVerses).to.be.above(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateProduct($input: UpdateProductInput!) {\r\n  updateProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"id\": \"{{productId}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Update Product ( Create Product with produces )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"var id = jsonData.data.createProduct.product.id;\r",
									"\r",
									"// Saving data for future use\r",
									"pm.globals.set(\"productId\", id);\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    // 'EBook',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Success - with produces - Array Inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test specific\r",
									"pm.test(\"Verify that product ID is not blank or null\", function () {\r",
									"    var id = jsonData.data.updateProduct.product.id;\r",
									"    pm.expect(id).to.not.eql(null);\r",
									"    pm.expect(id).to.not.eql(\"\");\r",
									"});\r",
									"\r",
									"// Util function - returns true If both arrays are same\r",
									"function areSameArray(array1, array2) {\r",
									"    return array1.length === array2.length && array1.sort().every((value, index) => { return value === array2.sort()[index] });\r",
									"}\r",
									"\r",
									"pm.test(\"Verify product mediums are same as requested\", function () {\r",
									"    var mediums = jsonData.data.updateProduct.product.mediums.value;\r",
									"    var productMediumsArray = JSON.parse(pm.globals.get('productMediumsArray'));\r",
									"\r",
									"    pm.expect(areSameArray(mediums, productMediumsArray)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify product purposes are same as requested\", function () {\r",
									"    var purposes = jsonData.data.updateProduct.product.purposes.value;\r",
									"    var productPurposesArray = JSON.parse(pm.globals.get('productPurposesArray'));\r",
									"\r",
									"    pm.expect(areSameArray(purposes, productPurposesArray)).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"// ScriptureReferences variables\r",
									"// pm.globals.set(\"productScriptRefBookStart\", \"ProductScriptureReferencesBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"// pm.globals.set(\"productScriptRefChapterStart\", _.random(1, 25));\r",
									"// pm.globals.set(\"productScriptRefVerseStart\", _.random(100, 200));\r",
									"\r",
									"// pm.globals.set(\"productScriptRefBookEnd\", \"ProductScriptureReferencesBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"// pm.globals.set(\"productScriptRefChapterEnd\", _.random(26, 50));\r",
									"// pm.globals.set(\"productScriptRefVerseEnd\", _.random(201, 300));\r",
									"\r",
									"// // ScriptureReferencesOverride variables\r",
									"// pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"// pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"// pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"// pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"// pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"// pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"// MEDIUMS ARRAY - generate random array\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"pm.globals.set('productMediumsArray', JSON.stringify(generateRandomArrayFromArray(5, prodMediumsArray)));\r",
									"\r",
									"// PURPOSES ARRAY - generate random array\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"];\r",
									"pm.globals.set('productPurposesArray', JSON.stringify(generateRandomArrayFromArray(3, prodPurposesArray)));\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// APPROACH ARRAY - approach output to be checked from pre-defined array\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"// LEGACY TYPE ARRAY - legacyType output to be checked from pre-defined array\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									"// Random array generator - Util Function\r",
									"function generateRandomArrayFromArray(randomArrayLength, possibleArray) {\r",
									"    let randomArray = [];\r",
									"    var possible = possibleArray;\r",
									"    let preDefinedLength = randomArrayLength;\r",
									"    for (let i = 0; i < preDefinedLength; i++) {\r",
									"        let choice = Math.floor((Math.random() * possible.length));\r",
									"        if (randomArray.includes(possible[choice]))\r",
									"            continue;\r",
									"        randomArray.push(possible[choice]);\r",
									"    }\r",
									"    return randomArray;\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateProduct($input: UpdateProductInput!) {\r\n  updateProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"id\": \"{{productId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": {{productMediumsArray}},\r\n      \"purposes\": {{productPurposesArray}},\r\n      \"methodology\": \"{{productMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Get All Products ( Create Product with ScriptRef )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Saving data for future use\r",
									"var id = jsonData.data.createProduct.product.id;\r",
									"pm.globals.set(\"productId\", id);\r",
									"\r",
									"// Saving whole Product Object to globals for future use\r",
									"var product = JSON.stringify(jsonData.data.createProduct.product);\r",
									"pm.globals.set(\"product_data\", product);\r",
									"    "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"// ScriptureReferences variables\r",
									"pm.globals.set('productScriptRefBookStart', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterStart', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseStart', 4);\r",
									"\r",
									"let expectedLabelStart = `${pm.globals.get('productScriptRefBookStart')} ${pm.globals.get('productScriptRefChapterStart')}:${pm.globals.get('productScriptRefVerseStart')}`;\r",
									"\r",
									"pm.globals.set('productScriptRefLabelStart',expectedLabelStart);\r",
									"\r",
									"pm.globals.set('productScriptRefBookEnd', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterEnd', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseEnd', 4);\r",
									"\r",
									"let expectedLabelEnd = `${pm.globals.get('productScriptRefBookEnd')} ${pm.globals.get('productScriptRefChapterEnd')}:${pm.globals.get('productScriptRefVerseEnd')}`\r",
									"\r",
									"pm.globals.set('productScriptRefLabelEnd', expectedLabelEnd);\r",
									"\r",
									"// ScriptureReferencesOverride variables\r",
									"// pm.globals.set(\"productScriptRefOverrideBookStart\", \"ProductScriptureReferencesOverrideBookStart\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"// pm.globals.set(\"productScriptRefOverrideChapterStart\", _.random(51, 75));\r",
									"// pm.globals.set(\"productScriptRefOverrideVerseStart\", _.random(301, 400));\r",
									"\r",
									"// pm.globals.set(\"productScriptRefOverrideBookEnd\", \"ProductScriptureReferencesOverrideBookEnd\" + moment().format(\"DDMMYYYYhhmmss\"));\r",
									"// pm.globals.set(\"productScriptRefOverrideChapterEnd\", _.random(76, 100));\r",
									"// pm.globals.set(\"productScriptRefOverrideVerseEnd\", _.random(401, 500));\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// METHODOLOGY ARRAY - take random value\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"product\": {\r\n            \"engagementId\": \"{{languageEngagementId}}\",\r\n            \"mediums\": \"{{productMediums}}\",\r\n            \"purposes\": \"{{productPurposes}}\",\r\n            \"methodology\": \"{{productMethodology}}\",\r\n            \"scriptureReferences\": {\r\n                \"start\": {\r\n                    \"book\": \"{{productScriptRefBookStart}}\",\r\n                    \"chapter\": {{productScriptRefChapterStart}},\r\n                    \"verse\": {{productScriptRefVerseStart}}\r\n                },\r\n                \"end\": {\r\n                    \"book\": \"{{productScriptRefBookEnd}}\",\r\n                    \"chapter\": {{productScriptRefChapterEnd}},\r\n                    \"verse\": {{productScriptRefVerseEnd}}\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var product_data = JSON.parse(pm.variables.get(\"product_data\")); // Get stored product object\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - Pagination\r",
									"pm.test(\"Verify that total is greater than Zero\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    pm.expect(total).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that hasMore is correct\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    var hasMore = jsonData.data.products.hasMore;\r",
									"    if (Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) < total) {\r",
									"        pm.expect(hasMore).to.eql(true);\r",
									"    } else {\r",
									"        pm.expect(hasMore).to.eql(false);\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that number of items returned are exact\", function () {\r",
									"    var total = jsonData.data.products.total;                  // total returned in response\r",
									"    var returneditems = jsonData.data.products.items.length;   // no. of items returned in response array\r",
									"    var itemCount = Number(pm.globals.get('itemCount'));    // no. of items per page\r",
									"    var page = Number(pm.globals.get('page'));              // page number\r",
									"    var expectedItems = itemCount * page;                   // items we are expecting\r",
									"\r",
									"    if (expectedItems <= total) {\r",
									"        pm.expect(returneditems).to.eql(itemCount);\r",
									"    } else {\r",
									"        if ((expectedItems - total) < itemCount) {\r",
									"            var lastItems = total - ((itemCount * (page - 1)));   // items in last page\r",
									"            pm.expect(returneditems).to.eql(lastItems);\r",
									"        }\r",
									"    }\r",
									"});\r",
									"\r",
									"/**\r",
									" * Setting up 'page' number to be used in next request\r",
									" * For locating recently created Object position on Specific page\r",
									" */\r",
									"var total = jsonData.data.products.total;\r",
									"var itemCount = Number(pm.globals.get('itemCount'));\r",
									"\r",
									"if (total > itemCount) {\r",
									"\r",
									"    if ((total % itemCount) == 0) {\r",
									"        var pageToset = total / itemCount;\r",
									"        pm.globals.set(\"page\", pageToset);\r",
									"    } else {\r",
									"        var pageToset = Math.floor(total / itemCount) + 1;\r",
									"        pm.globals.set(\"page\", pageToset);\r",
									"    }\r",
									"\r",
									"} else {\r",
									"    pm.globals.set(\"page\", 1);  // Set page to 1 if total <= itemCount\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - item Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var product_data = JSON.parse(pm.variables.get(\"product_data\")); // Get stored product object\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - Pagination\r",
									"pm.test(\"Verify that total is greater than Zero\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    pm.expect(total).to.be.above(0);\r",
									"});\r",
									"\r",
									"// Verifying recently created product's information with product object returned within items array\r",
									"\r",
									"// get Product object first having same id as recently created Product's id\r",
									"var myProduct = lodash.find(jsonData.data.products.items, ['id', product_data.id]);\r",
									"\r",
									"if (myProduct == undefined) return; // Safe to return if recent product is not within first page\r",
									"\r",
									"pm.test(\"Verifying product's createdAt\", function () {\r",
									"    var time = myProduct.createdAt;\r",
									"    pm.expect(time).to.eql(product_data.createdAt);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product approach\", function () {\r",
									"    var approach = myProduct.approach;\r",
									"    pm.expect(approach).to.eql(product_data.approach);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product legacyType\", function () {\r",
									"    var legacyType = myProduct.legacyType;\r",
									"    pm.expect(legacyType).to.eql(product_data.legacyType);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product mediums\", function () {\r",
									"    var mediums = myProduct.mediums.value[0];\r",
									"    pm.expect(mediums).to.eql(product_data.mediums.value[0]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product purposes\", function () {\r",
									"    var purposes = myProduct.purposes.value[0];\r",
									"    pm.expect(purposes).to.eql(product_data.purposes.value[0]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product methodology\", function () {\r",
									"    var methodology = myProduct.methodology.value\r",
									"    pm.expect(methodology).to.eql(product_data.methodology.value);\r",
									"});\r",
									"\r",
									"// scriptureReferences specific testcases\r",
									"pm.test(\"Verifying product scriptureReferences start book\", function () {\r",
									"    var startBook = myProduct.scriptureReferences.value[0].start.book;\r",
									"    pm.expect(startBook).to.eql(product_data.scriptureReferences.value[0].start.book);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences start chapter\", function () {\r",
									"    var startChapter = myProduct.scriptureReferences.value[0].start.chapter;\r",
									"    pm.expect(startChapter).to.eql(product_data.scriptureReferences.value[0].start.chapter);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences start verse\", function () {\r",
									"    var startVerse = myProduct.scriptureReferences.value[0].start.verse;\r",
									"    pm.expect(startVerse).to.eql(product_data.scriptureReferences.value[0].start.verse);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences start book name\", function () {\r",
									"    var startBookName = myProduct.scriptureReferences.value[0].start.bookName;\r",
									"    pm.expect(startBookName).to.eql(product_data.scriptureReferences.value[0].start.bookName);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences start label\", function () {\r",
									"    var startLabel = myProduct.scriptureReferences.value[0].start.label;\r",
									"    pm.expect(startLabel).to.eql(product_data.scriptureReferences.value[0].start.label);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences end book\", function () {\r",
									"    var endBook = myProduct.scriptureReferences.value[0].end.book;\r",
									"    pm.expect(endBook).to.eql(product_data.scriptureReferences.value[0].end.book);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences end chapter\", function () {\r",
									"    var endChapter = myProduct.scriptureReferences.value[0].end.chapter;\r",
									"    pm.expect(endChapter).to.eql(product_data.scriptureReferences.value[0].end.chapter);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences end verse\", function () {\r",
									"    var endVerse = myProduct.scriptureReferences.value[0].end.verse;\r",
									"    pm.expect(endVerse).to.eql(product_data.scriptureReferences.value[0].end.verse);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences end book name\", function () {\r",
									"    var endBookName = myProduct.scriptureReferences.value[0].end.bookName;\r",
									"    pm.expect(endBookName).to.eql(product_data.scriptureReferences.value[0].end.bookName);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences end label\", function () {\r",
									"    var endLabel = myProduct.scriptureReferences.value[0].end.label;\r",
									"    pm.expect(endLabel).to.eql(product_data.scriptureReferences.value[0].end.label);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences  label\", function () {\r",
									"    var label = myProduct.scriptureReferences.value[0].label;\r",
									"    pm.expect(label).to.eql(product_data.scriptureReferences.value[0].label);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifying product scriptureReferences  totalVerses\", function () {\r",
									"    var totalVerses = myProduct.scriptureReferences.value[0].totalVerses;\r",
									"    pm.expect(totalVerses).to.eql(product_data.scriptureReferences.value[0].totalVerses);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"// Page is set from previous request test script based on total\r",
									"pm.globals.set('order', \"ASC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - total\r",
									"pm.test(\"Verify that total is greater than Zero\", function () {\r",
									"    var total = jsonData.data.products.total;  \r",
									"    pm.expect(total).to.be.above(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - hasMore - true",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - hasMore\r",
									"pm.test(\"Verify that hasMore is true Only when product items are still available\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    var hasMore = jsonData.data.products.hasMore;  \r",
									"    if(Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) < total){\r",
									"        pm.expect(hasMore).to.eql(true);\r",
									"    } else {\r",
									"        pm.expect(hasMore).to.eql(false);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\",2);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - hasMore - false",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - hasMore\r",
									"pm.test(\"Verify that hasMore is false Only when no more product items available\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    var hasMore = jsonData.data.products.hasMore;  \r",
									"    if(Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) >= total){\r",
									"        pm.expect(hasMore).to.eql(false);\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\", 100);\r",
									"pm.globals.set(\"page\", 5);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - items\r",
									"pm.test(\"Verify that number of items returned are exact\", function () {\r",
									"    var total = jsonData.data.products.total;                  // total returned in response\r",
									"    var returneditems = jsonData.data.products.items.length;   // no. of items returned in response array\r",
									"    var itemCount = Number(pm.globals.get('itemCount'));    // no. of items per page\r",
									"    var page = Number(pm.globals.get('page'));              // page number\r",
									"    var expectedItems = itemCount * page;                   // items we are expecting\r",
									"\r",
									"    if (expectedItems <= total) {\r",
									"        pm.expect(returneditems).to.eql(itemCount);\r",
									"    } else {\r",
									"        if ((expectedItems - total) < itemCount) {\r",
									"            var lastItems = total - ((itemCount * (page - 1)));   // items in last page\r",
									"            pm.expect(returneditems).to.eql(lastItems);\r",
									"        }\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - createdAt sorting ASC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that total is greater than Zero\", function () {\r",
									"    var total = jsonData.data.products.total;  \r",
									"    pm.expect(total).to.be.above(0);\r",
									"});\r",
									"\r",
									"//Test Specific - Name sorting ASC\r",
									"pm.test(\"Verify that items are sorted by 'createdAt' and orderd by 'ASC' order \", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"    var expectedSortedOrder = lodash.orderBy(responseBody,item => item.createdAt.toLowerCase(), ['createdAt'], ['asc'])\r",
									"    pm.expect(responseBody).to.eql(expectedSortedOrder);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - createdAt sorting DESC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that total is greater than Zero\", function () {\r",
									"    var total = jsonData.data.products.total;  \r",
									"    pm.expect(total).to.be.above(0);\r",
									"});\r",
									"\r",
									"//Test Specific - Name sorting DESC\r",
									"pm.test(\"Verify that items are sorted by 'createdAt' and orderd by 'DESC' order \", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"    var expectedSortedOrder = lodash.orderBy(responseBody, item => item.createdAt.toLowerCase(),['createdAt'], ['desc'])\r",
									"    pm.expect(responseBody).to.eql(expectedSortedOrder);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Filter Products ( Create Product )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Saving data for future use - Filter by approach\r",
									"var filter_approach = jsonData.data.createProduct.product.approach;\r",
									"pm.globals.set(\"product_FilterApproach\", filter_approach);\r",
									"\r",
									"// Saving data for future use - Filter by methodology\r",
									"var filter_methodology = jsonData.data.createProduct.product.methodology.value\r",
									"pm.globals.set(\"product_FilterMethodology\", filter_methodology);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"productProducesId\", pm.variables.replaceIn('{{$guid}}').slice(0, 7));\r",
									"\r",
									"\r",
									"// ScriptureReferences Value\r",
									"// Static values \r",
									"pm.globals.set('productScriptRefBookStart', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterStart', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseStart', 4);\r",
									"\r",
									"let expectedLabelStart = `${pm.globals.get('productScriptRefBookStart')} ${pm.globals.get('productScriptRefChapterStart')}:${pm.globals.get('productScriptRefVerseStart')}`;\r",
									"\r",
									"pm.globals.set('productScriptRefLabelStart', expectedLabelStart);\r",
									"\r",
									"pm.globals.set('productScriptRefBookEnd', \"Genesis\");\r",
									"\r",
									"pm.globals.set('productScriptRefChapterEnd', 3);\r",
									"\r",
									"pm.globals.set('productScriptRefVerseEnd', 4);\r",
									"\r",
									"let expectedLabelEnd = `${pm.globals.get('productScriptRefBookEnd')} ${pm.globals.get('productScriptRefChapterEnd')}:${pm.globals.get('productScriptRefVerseEnd')}`\r",
									"\r",
									"pm.globals.set('productScriptRefLabelEnd', expectedLabelEnd);\r",
									"\r",
									"\r",
									"// Taking random value for the Product mediums from pre-defined possible values\r",
									"var prodMediumsArray = [\r",
									"    'Print',\r",
									"    'Web',\r",
									"    'EBook',\r",
									"    'App',\r",
									"    'TrainedStoryTellers',\r",
									"    'Audio',\r",
									"    'Video',\r",
									"    'Other'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMediumsArray.length);\r",
									"pm.globals.set('productMediums', prodMediumsArray[randomNumber]);\r",
									"\r",
									"// Taking random value for the Product purposes from pre-defined possible values\r",
									"var prodPurposesArray = [\r",
									"    'EvangelismChurchPlanting',\r",
									"    'ChurchLife',\r",
									"    'ChurchMaturity',\r",
									"    'SocialIssues',\r",
									"    'Discipleship'\r",
									"\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodPurposesArray.length);\r",
									"pm.globals.set('productPurposes', prodPurposesArray[randomNumber]);\r",
									"\r",
									"\r",
									"// Taking random value for the Product methodology from pre-defined possible values\r",
									"var prodMethodologyArray = [\r",
									"    'Paratext',\r",
									"    'OtherWritten',\r",
									"    'Render',\r",
									"    'Audacity',\r",
									"    'AdobeAudition',\r",
									"    'OtherOralTranslation',\r",
									"    'StoryTogether',\r",
									"    'SeedCompanyMethod',\r",
									"    'OneStory',\r",
									"    'Craft2Tell',\r",
									"    'OtherOralStories',\r",
									"    'Film',\r",
									"    'SignLanguage',\r",
									"    'OtherVisual',\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random() * prodMethodologyArray.length);\r",
									"pm.globals.set('productMethodology', prodMethodologyArray[randomNumber]);\r",
									"\r",
									"// Product Output Values to be checked from pre-defined data\r",
									"var productApproach_array = [\r",
									"    \"Written\",\r",
									"    \"OralTranslation\",\r",
									"    \"OralStories\",\r",
									"    \"Visual\"\r",
									"];\r",
									"pm.globals.set('productApproach_array', JSON.stringify(productApproach_array));\r",
									"\r",
									"var productLegacyType_array = [\r",
									"    \"BibleStories\",\r",
									"    \"JesusFilm\",\r",
									"    \"Songs\",\r",
									"    \"LiteracyMaterials\",\r",
									"    \"OldTestamentPortions\",\r",
									"    \"OldTestamentFull\",\r",
									"    \"Gospel\",\r",
									"    \"NewTestamentPortions\",\r",
									"    \"NewTestamentFull\",\r",
									"    \"FullBible\",\r",
									"    \"IndividualBooks\",\r",
									"    \"Genesis\"\r",
									"];\r",
									"pm.globals.set('productLegacyType_array', JSON.stringify(productLegacyType_array));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProduct($input: CreateProductInput!) {\r\n  createProduct(input: $input) {\r\n    product {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"product\": {\r\n      \"engagementId\": \"{{languageEngagementId}}\",\r\n      \"produces\": \"{{filmId}}\",\r\n      \"mediums\": \"{{productMediums}}\",\r\n      \"purposes\": \"{{productPurposes}}\",\r\n      \"methodology\": \"{{productMethodology}}\",\r\n      \"scriptureReferences\": {\r\n        \"start\": {\r\n          \"book\": \"{{productScriptRefBookStart}}\",\r\n          \"chapter\": {{productScriptRefChapterStart}},\r\n          \"verse\": {{productScriptRefVerseStart}}\r\n        },\r\n        \"end\": {\r\n          \"book\": \"{{productScriptRefBookEnd}}\",\r\n          \"chapter\": {{productScriptRefChapterEnd}},\r\n          \"verse\": {{productScriptRefOverrideVerseEnd}}\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - filter by approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - Filter by approach\r",
									"pm.test(\"Verify that items are filtered by requested Product approach \", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"        var expectedFilter = _.filter(responseBody, { 'approach': pm.globals.get('product_FilterApproach') });\r",
									"    pm.expect(responseBody).to.eql(expectedFilter);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"count\": {{itemCount}},\r\n        \"page\": {{page}},\r\n        \"sort\": \"createdAt\",\r\n        \"order\": \"{{order}}\",\r\n        \"filter\": {\r\n            \"approach\": \"{{product_FilterApproach}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Success - filter by methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const moment = require('moment');\r",
									"var lodash = require('lodash');\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific - Filter by methodology\r",
									"pm.test(\"Verify that items are filtered by requested Product methodology\", function () {\r",
									"\r",
									"    var responseBody = jsonData.data.products.items;\r",
									"    var multifilters = _.filter(responseBody, item => item.methodology.value === pm.globals.get('product_FilterMethodology') );\r",
									"    pm.expect(responseBody).to.eql(multifilters);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"count\": {{itemCount}},\r\n        \"page\": {{page}},\r\n        \"sort\": \"createdAt\",\r\n        \"order\": \"{{order}}\",\r\n        \"filter\": {\r\n            \"methodology\": \"{{product_FilterMethodology}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Removed  - count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that number of items returned is equal to total\", function () {\r",
									"    var total = jsonData.data.products.total;\r",
									"    var items = jsonData.data.products.items.length;\r",
									"    if (total <= 25)    // 25 is maximum db items limit returned per page when count is not specified\r",
									"        pm.expect(items).to.eql(total);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Blank - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"Invalid input\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"InternalServerError\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"!@#$%^\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Blank - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"Order\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Blank - Filter approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductApproach\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Not Mandatory Field Blank - Filter methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMethodology\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"methodology\": \"\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"count\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count1\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"page\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page1\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"sort\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort1\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"order\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order1\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductListInput\\\". Did you mean \\\"filter\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter1\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - filter approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductFilters\\\". Did you mean \\\"approach\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach1\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Mismatch - filter methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"ProductFilters\\\". Did you mean \\\"methodology\\\"?\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology1\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - count min",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that count error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].extensions.errors.count.min;  \r",
									"    pm.expect(error_message).to.eql(\"count must not be less than 1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": 0,\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - count max",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that count error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].extensions.errors.count.max;  \r",
									"    pm.expect(error_message).to.eql(\"count must not be greater than 100\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": 500,\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that page error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].extensions.errors.page.min;  \r",
									"    pm.expect(error_message).to.eql(\"page must not be less than 1\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": 0,\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"PENDING >> Similar to BUG #776(closed-Sprint 13) for Users (Sort Field allows empty value/unusual characters)\", function () {\r",
									"\r",
									"    if (jsonData.data) {\r",
									"        pm.expect(\"BACKEND\").to.eql(\"PENDING\"); // fail forcefully\r",
									"    } else {\r",
									"        pm.expect(\"WRITE TEST CASES\").to.eql(\"ERRORS >>> \" + jsonData.errors[0].message);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"count\": {{itemCount}},\r\n        \"page\": {{page}},\r\n        \"sort\": \"asdfghj\",\r\n        \"order\": \"{{order}}\",\r\n        \"filter\": {\r\n            \"approach\": \"{{product_FilterApproach}}\",\r\n            \"methodology\": \"{{product_FilterMethodology}}\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"Order\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"!@#$%^&*(\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - filter Approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;\r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductApproach\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;\r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"  ^ & ( ) \",\r\n      \"methodology\": \"{{product_FilterMethodology}}\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products Parameter Invalid - filter Methodology",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"ProductMethodology\\\" enum\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query products($input: ProductListInput!) {\r\n  products(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      approach\r\n      legacyType\r\n      mediums {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      purposes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      methodology {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      scriptureReferences {\r\n        value {\r\n          start {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          end {\r\n            book\r\n            chapter\r\n            verse\r\n            label\r\n          }\r\n          label\r\n          totalVerses\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"approach\": \"{{product_FilterApproach}}\",\r\n      \"methodology\": \"******\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that Product is deleted\", function () {\r",
									"    pm.expect(jsonData.data.deleteProduct).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id: ID!) {\r\n  deleteProduct(id: $id)\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"{{productId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Mandatory Field Blank - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is 400\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that education error message is correct\", function () {\r",
									"    var error_education_message = jsonData.errors[0].extensions.errors.id.IsId;  \r",
									"    pm.expect(error_education_message).to.eql(\"Invalid ID\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id: ID!) {\r\n  deleteProduct(id: $id)\r\n}",
								"variables": "{\r\n    \"id\": \"\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Mandatory Field Removed - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id: ID!) {\r\n  deleteProduct(id: $id)\r\n}\r\n",
								"variables": "{\r\n  \r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Parameter Mismatch - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {\r",
									"    var error_code = jsonData.errors[0].extensions.code;  \r",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id: ID!) {\r\n  deleteProduct(id: $id)\r\n}\r\n",
								"variables": "{\r\n    \"id1\": \"{{productId}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product Parameter Invalid - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//Common Verification\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));\r",
									"});\r",
									"\r",
									"//Test Specific\r",
									"pm.test(\"Verify that error message is correct\", function () {\r",
									"    var error_message = jsonData.errors[0].message;  \r",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that error status is 400\", function () {\r",
									"    var error_status = jsonData.errors[0].extensions.status;  \r",
									"    pm.expect(error_status).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that language error message is correct\", function () {\r",
									"    var error_education_message = jsonData.errors[0].extensions.errors.id.IsId;  \r",
									"    pm.expect(error_education_message).to.eql(\"Invalid ID\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteProduct($id: ID!) {\r\n  deleteProduct(id: $id)\r\n}\r\n",
								"variables": "{\r\n    \"id\": \" || *& gg test id\"\r\n}"
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	}
}