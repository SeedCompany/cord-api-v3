{
	"info": {
		"_postman_id": "1cf4e9b4-801c-4863-991e-e97d2ce0947a",
		"name": "Cord_API_V3_Partner",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pre-req ( Session + Register + Login + GrantPower ) for Partner",
			"item": [
				{
					"name": "Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da02ca5a-fb2e-450f-a062-5e9484ebecd0",
								"exec": [
									"var response = pm.response.json();\r",
									"pm.globals.set(\"token\", response.data.session.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "# Write your query or mutation here\r\nquery {\r\n  session(browser: false) {\r\n    user {\r\n      id,\r\n      email\r\n      {\r\n        value\r\n      }\r\n      realFirstName\r\n      {\r\n        value\r\n      }\r\n      createdAt\r\n      displayLastName\r\n      {\r\n         value\r\n      }\r\n      \r\n      \r\n      \r\n    },\r\n    token\r\n  }\r\n}",
								"variables": ""
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dec2a7d9-9319-4972-8a65-ebc7745e864b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"rootAdminUserid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "11dd7a8f-8f69-4a42-aba9-5a31fd369dcb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      organizations {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      education {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          degree {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          major {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          institution {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# devops@tsco.org\r\n# admin\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"email\": \"{{rootAdminLogin_email}}\",\r\n        \"password\": \"{{rootAdminLogin_password}}\"\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Grant Power to RootAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "815cb6ae-f3df-4e46-8c04-e8d19b33453e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3d1bdcfe-25e9-4e13-8221-4008e373be1f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation grantPower($userId: ID!,$power:Power!) {\r\n  grantPower(userId:$userId,power:$power)\r\n}\r\n",
								"variables": "{\r\n    \"userId\": \"{{rootAdminUserid}}\",\r\n    \"power\": \"GrantPower\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c857a46-9a69-4525-9d41-a252bb573560",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// This is safe check to prevent failing futher cases If the Root User is already Created\r",
									"if (jsonData.errors) {\r",
									"    if (jsonData.errors.length) return;\r",
									"}\r",
									"\r",
									"//Saving data for future use\r",
									"var id = jsonData.data.register.user.id;\r",
									"pm.globals.set(\"userid\", id);\r",
									"\r",
									"var user = JSON.stringify(jsonData.data.register.user);\r",
									"pm.globals.set(\"user_data\", user);\r",
									"\r",
									"var email = jsonData.data.register.user.email.value;\r",
									"pm.globals.set(\"email\", email);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d905e6d6-7da6-49db-85a8-277d5545239a",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"realFirstName\", \"FirstName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"realLastName\", \"LastName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"email\", \"email\" + moment().format(\"DDMYYYYhhmmss\") + \"@test.com\");\r",
									"pm.globals.set(\"password\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"displayFirstName\", \"DisplayFirstName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"displayLastName\", \"DisplayLastName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));\r",
									"\r",
									"var timezoneObject = {\r",
									"    \"name\": \"Europe/Andorra\",\r",
									"    \"lat\": 42.5,\r",
									"    \"long\": 1.5167,\r",
									"    \"countries\": [\r",
									"        {\r",
									"            \"code\": \"AD\",\r",
									"            \"name\": \"Andorra\",\r",
									"            \"zones\": [\r",
									"                {\r",
									"                    \"name\": \"Europe/Andorra\",\r",
									"                    \"lat\": 42.5,\r",
									"                    \"long\": 1.5167,\r",
									"                    \"countries\": [\r",
									"                        {\r",
									"                            \"code\": \"AD\",\r",
									"                            \"name\": \"Andorra\"\r",
									"                        }\r",
									"                    ]\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ]\r",
									"};\r",
									"pm.globals.set('timezoneObject', JSON.stringify(timezoneObject));\r",
									"pm.globals.set(\"timezone\", timezoneObject.name);\r",
									"\r",
									"pm.globals.set(\"about\", \"I'm Tester\");\r",
									"\r",
									"pm.globals.set(\"userTitle\", \"Tester\");\r",
									"\r",
									"// Taking random value for the User status from pre-defined possible values\r",
									"var userStatusArray = ['Active','Disabled'];\r",
									"var randomNumber = Math.floor(Math.random()*userStatusArray.length);\r",
									"// pm.globals.set('userStatus', userStatusArray[randomNumber]);\r",
									"// pm.globals.set(\"userStatus\", \"Active\");\r",
									"\r",
									"// var userRolesArray = ['BibleTranslationLiaison',\r",
									"// 'Consultant',\r",
									"// 'ConsultantManager',\r",
									"// 'Controller',\r",
									"// 'Development',\r",
									"// 'ExecutiveDevelopmentRepresentative',\r",
									"// 'ExecutiveLeadership',\r",
									"// 'FieldOperationsDirector',\r",
									"// 'FieldPartner',\r",
									"// 'FinancialAnalyst',\r",
									"// 'Intern',\r",
									"// 'Liaison',\r",
									"// 'LeadFinancialAnalyst',\r",
									"// 'Mentor',\r",
									"// 'OfficeOfThePresident',\r",
									"// 'ProjectManager',\r",
									"// 'RegionalCommunicationsCoordinator',\r",
									"// 'RegionalDirector',\r",
									"// 'SupportingProjectManager',\r",
									"// 'Translator',\r",
									"// 'Writer'\r",
									"// ];\r",
									"\r",
									"pm.globals.set('userRoles', JSON.stringify([\"ProjectManager\"]));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation register($input: RegisterInput!) {\r\n  register(input: $input) {\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      organizations {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      education {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          degree {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          major {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          institution {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"realFirstName\": \"Piyush\",\r\n        \"realLastName\": \"Patel\",\r\n        \"email\": \"{{login_email}}\",\r\n        \"password\": \"{{login_password}}\",\r\n        \"displayFirstName\": \"{{displayFirstName}}\",\r\n        \"displayLastName\": \"{{displayLastName}}\",\r\n        \"phone\": \"{{phone}}\",\r\n        \"timezone\": \"{{timezone}}\",\r\n        \"status\": \"{{userStatus}}\",\r\n        \"title\": \"{{userTitle}}\",\r\n        \"roles\": {{userRoles}}\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "830b9cca-9cbd-40c8-8e6a-0a6697d93a39",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"userid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8dc7f0cb-cc85-43f2-978c-0aadd467277f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      organizations {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      education {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          degree {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          major {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          institution {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n   \"input\": {\r\n      \"email\": \"{{login_email}}\",\r\n      \"password\": \"{{login_password}}\"\r\n   }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c7c263f-f77c-4c28-b50a-f92e738722d5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"rootAdminUserid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04fea149-bf67-4644-9dd2-b8a60b7e5a4f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      organizations {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      education {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          degree {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          major {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          institution {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n# devops@tsco.org\r\n# admin\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"email\": \"{{rootAdminLogin_email}}\",\r\n        \"password\": \"{{rootAdminLogin_password}}\"\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Grant Power to Root User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f4cd5e-9075-48ee-99dd-18d48439a2d7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2bb08783-c6d1-4a34-9a5b-912faf1a2d42",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation grantPower($userId: ID!,$power:Power!) {\r\n  grantPower(userId:$userId,power:$power)\r\n}\r\n",
								"variables": "{\r\n    \"userId\": \"{{userid}}\",\r\n    \"power\": \"GrantPower\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Login again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd29462a-9016-45f5-8ec2-c3d9a68d516f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"userid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "598f80b0-3401-4a63-b179-3a068b5701fe",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      about {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      roles {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      title {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      unavailabilities {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      organizations {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      education {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          degree {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          major {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          institution {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n   \"input\": {\r\n      \"email\": \"{{login_email}}\",\r\n      \"password\": \"{{login_password}}\"\r\n   }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c455f84d-a7e0-4e5a-a7f6-386a946695ab",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a283f4fa-b733-4eed-8d2c-ddcacf83783f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Pre-req ( createOrg ) for Partner",
			"item": [
				{
					"name": "Grant Power to Create Organization to Root User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea28ecc7-c365-4e0a-89c5-32f17ea09749",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "774982f0-3df1-4f28-a178-36addc7a4980",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation grantPower($userId: ID!,$power:Power!) {\r\n  grantPower(userId:$userId,power:$power)\r\n}\r\n",
								"variables": "{\r\n    \"userId\": \"{{userid}}\",\r\n    \"power\": \"CreateOrganization\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ccad276-83c7-45ad-86c7-de451f3651f7",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "73472740-eb38-4bd1-9c15-943586e7a7d0",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c77a0824-a686-4077-96dd-4cef065ee242",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5485d06a-0849-45d1-8ebc-0a16326dc691",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Partner",
			"item": [
				{
					"name": "Create Partner Success with Managing Partner Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "931c5c4c-851c-4011-b4ba-b74d2d4152a7",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.createPartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"",
									"    // Saving data for future use",
									"    pm.globals.set(\"partnerid\", id);",
									"});",
									"",
									"//Saving data for future use",
									"var partner = JSON.stringify(jsonData.data.createPartner.partner);",
									"pm.globals.set(\"partner_data\", partner);",
									"",
									"pm.test(\"Verify that partner's createdAt is in Specific time format\", function () {",
									"    var time = jsonData.data.createPartner.partner.createdAt;",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"    pm.expect(isValidTime).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify that partner's modifiedAt is in Specific time format\", function () {",
									"    var time = jsonData.data.createPartner.partner.modifiedAt;",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"    pm.expect(isValidTime).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify partner type is same as requested type\", function () {",
									"    var type = jsonData.data.createPartner.partner.types.value[0];",
									"    pm.expect(type).to.eql(pm.globals.get('partnerType'));",
									"});",
									"",
									"pm.test(\"Verify financialReportingTypes is same as requested status\", function () {",
									"    var financialReportingTypes = jsonData.data.createPartner.partner.financialReportingTypes.value[0];",
									"    pm.expect(financialReportingTypes).to.eql(pm.globals.get('financialReportingTypes'));",
									"});",
									"",
									"pm.test(\"Verify pmcEntityCode is same as requested code\", function () {",
									"    var pmcEntityCode = jsonData.data.createPartner.partner.pmcEntityCode.value;",
									"    pm.expect(pmcEntityCode).to.eql(pm.globals.get('pmcEntityCode'));",
									"});",
									"",
									"pm.test(\"Verify globalInnovationsClient is same as requested\", function () {",
									"    var globalInnovationsClient = jsonData.data.createPartner.partner.globalInnovationsClient.value;",
									"    pm.expect(globalInnovationsClient).to.eql(false);",
									"});",
									"",
									"pm.test(\"Verify active is same as requested\", function () {",
									"    var active = jsonData.data.createPartner.partner.active.value;",
									"    pm.expect(active).to.eql(false);",
									"});",
									"",
									"pm.test(\"Verify address is same as requested address\", function () {",
									"    var address = jsonData.data.createPartner.partner.address.value;",
									"    pm.expect(address).to.eql(pm.globals.get('partnerAddress'));",
									"});",
									"",
									"pm.test(\"Verify that organization ID is not blank or null\", function () {",
									"    var id = jsonData.data.createPartner.partner.organization.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that organization's createdAt is in Specific time format\", function () {",
									"    var time = jsonData.data.createPartner.partner.organization.value.createdAt;",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"    pm.expect(isValidTime).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify that organization name is not blank or null\", function () {",
									"    var name = jsonData.data.createPartner.partner.organization.value.name.value;",
									"    pm.expect(name).to.not.eql(null);",
									"    pm.expect(name).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that organization's avatarLetters are as per organization name\", function () {",
									"    var avatarLetters = jsonData.data.createPartner.partner.organization.value.avatarLetters;",
									"    pm.expect(avatarLetters).to.eql('O');",
									"});",
									"",
									"// pm.test(\"Verify that organization's pointOfContact are as per organization name\", function () {",
									"//     var pointOfContact = jsonData.data.createPartner.partner.organization.value.pointOfContact;",
									"//     pm.expect(pointOfContact).to.eql(null);",
									"// });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a6b88e7a-2b09-471f-802a-166542b21fd4",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set('partnerType', \"Managing\");\r",
									"\r",
									"// Taking random value for the financialReportingTypes from pre-defined possible values\r",
									"var optionsArray = ['Funded', 'FieldEngaged'];\r",
									"var randomNumber = Math.floor(Math.random() * optionsArray.length);\r",
									"pm.globals.set('financialReportingTypes', optionsArray[randomNumber]);\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"pmcEntityCode\", makeid(false, true, false, 3));\r",
									"\r",
									"pm.globals.set('partnerAddress', pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b38ac7c6-8f5e-4181-95d2-364165cabeba",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "05d3899d-4665-484a-bff9-1c7c23f1f149",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Success with Other Partner Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1ae6a1a-a856-4b79-ba11-2e04d7616491",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.createPartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"",
									"    // Saving data for future use",
									"    pm.globals.set(\"partnerid\", id);",
									"});",
									"",
									"//Saving data for future use",
									"var partner = JSON.stringify(jsonData.data.createPartner.partner);",
									"pm.globals.set(\"partner_data\", partner);",
									"",
									"pm.test(\"Verify that partner's createdAt is in Specific time format\", function () {",
									"    var time = jsonData.data.createPartner.partner.createdAt;",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"    pm.expect(isValidTime).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify partner type is same as requested type\", function () {",
									"    var type = jsonData.data.createPartner.partner.types.value[0];",
									"    pm.expect(type).to.eql(pm.globals.get('partnerType'));",
									"});",
									"",
									"pm.test(\"Verify financialReportingTypes is empty\", function () {",
									"    var financialReportingTypes = jsonData.data.createPartner.partner.financialReportingTypes.value;",
									"    pm.expect(financialReportingTypes).to.eql([]);",
									"});",
									"",
									"pm.test(\"Verify pmcEntityCode is same as requested code\", function () {",
									"    var pmcEntityCode = jsonData.data.createPartner.partner.pmcEntityCode.value;",
									"    pm.expect(pmcEntityCode).to.eql(pm.globals.get('pmcEntityCode'));",
									"});",
									"",
									"pm.test(\"Verify globalInnovationsClient is same as requested\", function () {",
									"    var globalInnovationsClient = jsonData.data.createPartner.partner.globalInnovationsClient.value;",
									"    pm.expect(globalInnovationsClient).to.eql(false);",
									"});",
									"",
									"pm.test(\"Verify active is same as requested\", function () {",
									"    var active = jsonData.data.createPartner.partner.active.value;",
									"    pm.expect(active).to.eql(false);",
									"});",
									"",
									"pm.test(\"Verify address is same as requested address\", function () {",
									"    var address = jsonData.data.createPartner.partner.address.value;",
									"    pm.expect(address).to.eql(pm.globals.get('partnerAddress'));",
									"});",
									"",
									"pm.test(\"Verify that organization ID is not blank or null\", function () {",
									"    var id = jsonData.data.createPartner.partner.organization.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that organization's createdAt is in Specific time format\", function () {",
									"    var time = jsonData.data.createPartner.partner.organization.value.createdAt;",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"    pm.expect(isValidTime).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify that organization name is not blank or null\", function () {",
									"    var name = jsonData.data.createPartner.partner.organization.value.name.value;",
									"    pm.expect(name).to.not.eql(null);",
									"    pm.expect(name).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that organization's avatarLetters are as per organization name\", function () {",
									"    var avatarLetters = jsonData.data.createPartner.partner.organization.value.avatarLetters;",
									"    pm.expect(avatarLetters).to.eql('O');",
									"});",
									"",
									"// pm.test(\"Verify that organization's pointOfContact are as per organization name\", function () {",
									"//     var pointOfContact = jsonData.data.createPartner.partner.organization.value.pointOfContact;",
									"//     pm.expect(pointOfContact).to.eql(null);",
									"// });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6fd04785-b3a1-4cd3-9fd8-97763c027b8d",
								"exec": [
									"const moment = require('moment');\r",
									"var optionsArray = ['Funding',\r",
									"    'Impact',\r",
									"    'Technical',\r",
									"    'Resource'];\r",
									"pm.globals.set('partnerType', optionsArray[Math.floor(Math.random() * optionsArray.length)]);\r",
									"\r",
									"// Taking random value for the financialReportingTypes from pre-defined possible values\r",
									"var optionsArray = ['Funded', 'FieldEngaged'];\r",
									"var randomNumber = Math.floor(Math.random() * optionsArray.length);\r",
									"pm.globals.set('financialReportingTypes', optionsArray[randomNumber]);\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"pmcEntityCode\", makeid(false, true, false, 3));\r",
									"\r",
									"pm.globals.set('partnerAddress', pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66e5d9c8-4f09-4542-9005-365f0a27671b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ad77522f-8118-4a63-8768-1c72af92bb1d",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Success - Array Inputs - unique for types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fdd7a97-b4c4-4656-91cd-210fd16386a3",
								"exec": [
									"// var jsonData = pm.response.json();",
									"// const moment = require('moment');",
									"",
									"// //Common Verification",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"Response time is less than 1000ms\", function () {",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"// });",
									"",
									"// //Test Specific",
									"// pm.test(\"Verify that partnership ID is not blank or null\", function () {",
									"//     var id = jsonData.data.createPartnership.partnership.id;",
									"//     pm.expect(id).to.not.eql(null);",
									"//     pm.expect(id).to.not.eql(\"\");",
									"",
									"//     // Saving data for future use",
									"//     pm.globals.set(\"partnershipid\", id);",
									"// });",
									"",
									"// //Saving data for future use",
									"// var partnership = JSON.stringify(jsonData.data.createPartnership.partnership);",
									"// pm.globals.set(\"partnership_data\", partnership);",
									"",
									"// pm.test(\"Verify that partnership's createdAt is in Specific time format\", function () {",
									"//     var time = jsonData.data.createPartnership.partnership.createdAt;",
									"//     var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"//     pm.expect(isValidTime).to.eql(true);",
									"// });",
									"",
									"// // Util function to compare array values irrespective of value index",
									"// function areSameArray(array1, array2) {",
									"//     return array1.length === array2.length && array1.sort().every((value, index) => { return value === array2.sort()[index] });",
									"// }",
									"",
									"// pm.test(\"Verify partnership type is same as requested type\", function () {",
									"//     var type = jsonData.data.createPartnership.partnership.types.value;",
									"//     var partTypesArray = JSON.parse(pm.globals.get('partnershipTypeArray'));",
									"",
									"//     pm.expect(areSameArray(type, partTypesArray)).to.eql(true);",
									"// });",
									"",
									"// pm.test(\"Verify agreementStatus is same as requested status\", function () {",
									"//     var agreementStatus = jsonData.data.createPartnership.partnership.agreementStatus.value;",
									"//     pm.expect(agreementStatus).to.eql(pm.globals.get('agreementStatus'));",
									"// });",
									"",
									"// pm.test(\"Verify mouStatus is same as requested status\", function () {",
									"//     var mouStatus = jsonData.data.createPartnership.partnership.mouStatus.value;",
									"//     pm.expect(mouStatus).to.eql(pm.globals.get('mouStatus'));",
									"// });",
									"",
									"// pm.test(\"Verify mouStart is same as requested date\", function () {",
									"//     var mouStart = jsonData.data.createPartnership.partnership.mouStart.value;",
									"//     pm.expect(mouStart).to.eql(pm.globals.get('mouStart'));",
									"// });",
									"",
									"// pm.test(\"Verify mouEnd is same as requested date\", function () {",
									"//     var mouEnd = jsonData.data.createPartnership.partnership.mouEnd.value;",
									"//     pm.expect(mouEnd).to.eql(pm.globals.get('mouEnd'));",
									"// });",
									"",
									"// pm.test(\"Verify mouStartOverride is same as requested date\", function () {",
									"//     var mouStartOverride = jsonData.data.createPartnership.partnership.mouStartOverride.value;",
									"//     pm.expect(mouStartOverride).to.eql(pm.globals.get('mouStart'));",
									"// });",
									"",
									"// pm.test(\"Verify mouEndOverride is same as requested date\", function () {",
									"//     var mouEndOverride = jsonData.data.createPartnership.partnership.mouEndOverride.value;",
									"//     pm.expect(mouEndOverride).to.eql(pm.globals.get('mouEnd'));",
									"// });",
									"",
									"// pm.test(\"Verify that organization ID is not blank or null\", function () {",
									"//     var id = jsonData.data.createPartnership.partnership.organization.id;",
									"//     pm.expect(id).to.not.eql(null);",
									"//     pm.expect(id).to.not.eql(\"\");",
									"// });",
									"",
									"// pm.test(\"Verify that organization's createdAt is in Specific time format\", function () {",
									"//     var time = jsonData.data.createPartnership.partnership.organization.createdAt;",
									"//     var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"//     pm.expect(isValidTime).to.eql(true);",
									"// });",
									"",
									"// pm.test(\"Verify that organization name is not blank or null\", function () {",
									"//     var name = jsonData.data.createPartnership.partnership.organization.name.value;",
									"//     pm.expect(name).to.not.eql(null);",
									"//     pm.expect(name).to.not.eql(\"\");",
									"// });",
									"",
									"// pm.test(\"Verify that organization's avatarLetters are as per organization name\", function () {",
									"//     var avatarLetters = jsonData.data.createPartnership.partnership.organization.avatarLetters;",
									"//     pm.expect(avatarLetters).to.eql('O');",
									"// });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7133bc33-01b0-450c-aedb-362e17c80a9d",
								"exec": [
									"const moment = require('moment');\r",
									"// pm.globals.set('partnerType', \"Managing\");\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"pmcEntityCode\", makeid(false, true, false, 3));\r",
									"\r",
									"pm.globals.set('partnerAddress', pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
									"\r",
									"// TYPES ARRAY - generate random array\r",
									"var partnerTypesArray = ['Managing', 'Funding', 'Impact', 'Technical', 'Resource'];\r",
									"pm.globals.set('partnerTypeArray', JSON.stringify (generateRandomArrayFromArray(3, partnerTypesArray)));\r",
									"\r",
									"\r",
									"// Random array generator - Util Function\r",
									"function generateRandomArrayFromArray(randomArrayLength, possibleArray) {\r",
									"    let randomArray = [];\r",
									"    var possible = possibleArray;\r",
									"    let preDefinedLength = randomArrayLength;\r",
									"    for (let i = 0; i < preDefinedLength; i++) {\r",
									"        let choice = Math.floor((Math.random() * possible.length));\r",
									"        if (randomArray.includes(possible[choice]))\r",
									"            continue;\r",
									"        randomArray.push(possible[choice]);\r",
									"    }\r",
									"    return randomArray;\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": {{partnerTypeArray}},\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b728908d-6db4-48d5-a254-1449f291cbb2",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "47f949b5-98fb-410f-bcd6-1a37a1cf55fe",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Success - Array Inputs - unique for financialReportingTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b24f186-d408-4f7e-9a89-fbc27192753b",
								"exec": [
									"// var jsonData = pm.response.json();",
									"// const moment = require('moment');",
									"",
									"// //Common Verification",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"Response time is less than 1000ms\", function () {",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"// });",
									"",
									"// //Test Specific",
									"// pm.test(\"Verify that partnership ID is not blank or null\", function () {",
									"//     var id = jsonData.data.createPartnership.partnership.id;",
									"//     pm.expect(id).to.not.eql(null);",
									"//     pm.expect(id).to.not.eql(\"\");",
									"",
									"//     // Saving data for future use",
									"//     pm.globals.set(\"partnershipid\", id);",
									"// });",
									"",
									"// //Saving data for future use",
									"// var partnership = JSON.stringify(jsonData.data.createPartnership.partnership);",
									"// pm.globals.set(\"partnership_data\", partnership);",
									"",
									"// pm.test(\"Verify that partnership's createdAt is in Specific time format\", function () {",
									"//     var time = jsonData.data.createPartnership.partnership.createdAt;",
									"//     var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"//     pm.expect(isValidTime).to.eql(true);",
									"// });",
									"",
									"// // Util function to compare array values irrespective of value index",
									"// function areSameArray(array1, array2) {",
									"//     return array1.length === array2.length && array1.sort().every((value, index) => { return value === array2.sort()[index] });",
									"// }",
									"",
									"// pm.test(\"Verify partnership type is same as requested type\", function () {",
									"//     var type = jsonData.data.createPartnership.partnership.types.value;",
									"//     var partTypesArray = JSON.parse(pm.globals.get('partnershipTypeArray'));",
									"",
									"//     pm.expect(areSameArray(type, partTypesArray)).to.eql(true);",
									"// });",
									"",
									"// pm.test(\"Verify agreementStatus is same as requested status\", function () {",
									"//     var agreementStatus = jsonData.data.createPartnership.partnership.agreementStatus.value;",
									"//     pm.expect(agreementStatus).to.eql(pm.globals.get('agreementStatus'));",
									"// });",
									"",
									"// pm.test(\"Verify mouStatus is same as requested status\", function () {",
									"//     var mouStatus = jsonData.data.createPartnership.partnership.mouStatus.value;",
									"//     pm.expect(mouStatus).to.eql(pm.globals.get('mouStatus'));",
									"// });",
									"",
									"// pm.test(\"Verify mouStart is same as requested date\", function () {",
									"//     var mouStart = jsonData.data.createPartnership.partnership.mouStart.value;",
									"//     pm.expect(mouStart).to.eql(pm.globals.get('mouStart'));",
									"// });",
									"",
									"// pm.test(\"Verify mouEnd is same as requested date\", function () {",
									"//     var mouEnd = jsonData.data.createPartnership.partnership.mouEnd.value;",
									"//     pm.expect(mouEnd).to.eql(pm.globals.get('mouEnd'));",
									"// });",
									"",
									"// pm.test(\"Verify mouStartOverride is same as requested date\", function () {",
									"//     var mouStartOverride = jsonData.data.createPartnership.partnership.mouStartOverride.value;",
									"//     pm.expect(mouStartOverride).to.eql(pm.globals.get('mouStart'));",
									"// });",
									"",
									"// pm.test(\"Verify mouEndOverride is same as requested date\", function () {",
									"//     var mouEndOverride = jsonData.data.createPartnership.partnership.mouEndOverride.value;",
									"//     pm.expect(mouEndOverride).to.eql(pm.globals.get('mouEnd'));",
									"// });",
									"",
									"// pm.test(\"Verify that organization ID is not blank or null\", function () {",
									"//     var id = jsonData.data.createPartnership.partnership.organization.id;",
									"//     pm.expect(id).to.not.eql(null);",
									"//     pm.expect(id).to.not.eql(\"\");",
									"// });",
									"",
									"// pm.test(\"Verify that organization's createdAt is in Specific time format\", function () {",
									"//     var time = jsonData.data.createPartnership.partnership.organization.createdAt;",
									"//     var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"//     pm.expect(isValidTime).to.eql(true);",
									"// });",
									"",
									"// pm.test(\"Verify that organization name is not blank or null\", function () {",
									"//     var name = jsonData.data.createPartnership.partnership.organization.name.value;",
									"//     pm.expect(name).to.not.eql(null);",
									"//     pm.expect(name).to.not.eql(\"\");",
									"// });",
									"",
									"// pm.test(\"Verify that organization's avatarLetters are as per organization name\", function () {",
									"//     var avatarLetters = jsonData.data.createPartnership.partnership.organization.avatarLetters;",
									"//     pm.expect(avatarLetters).to.eql('O');",
									"// });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57907593-e163-462c-a492-642197b5abb1",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"// financial Reporting Types ARRAY - generate random array\r",
									"var partnerfinancialTypesArray = ['Funded', 'FieldEngaged'];\r",
									"pm.globals.set('financialReportingTypesArray', JSON.stringify (generateRandomArrayFromArray(2, partnerfinancialTypesArray)));\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"pmcEntityCode\", makeid(false, true, false, 3));\r",
									"\r",
									"pm.globals.set('partnerAddress', pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
									"\r",
									"// Random array generator - Util Function\r",
									"function generateRandomArrayFromArray(randomArrayLength, possibleArray) {\r",
									"    let randomArray = [];\r",
									"    var possible = possibleArray;\r",
									"    let preDefinedLength = randomArrayLength;\r",
									"    for (let i = 0; i < preDefinedLength; i++) {\r",
									"        let choice = Math.floor((Math.random() * possible.length));\r",
									"        if (randomArray.includes(possible[choice]))\r",
									"            continue;\r",
									"        randomArray.push(possible[choice]);\r",
									"    }\r",
									"    return randomArray;\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"Managing\",\r\n            \"financialReportingTypes\": {{financialReportingTypesArray}},\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff7bed2d-36c3-4c47-ac5f-36825d1cea83",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ccefa7f6-58b8-4e1f-927a-b09dd9d2afdd",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Success - Array Inputs - Duplicates  for types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1faca784-1f9e-4ff3-88e4-3b5983e93767",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.createPartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that partner type does not have duplicate values\", function () {",
									"    var types_length = jsonData.data.createPartner.partner.types.value.length;",
									"    console.log('types_length=' + types_length)",
									"    pm.expect(types_length).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "564eb493-cf86-4a6d-8868-5c957c922f35",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"// TYPES ARRAY - generate array with duplicate values\r",
									"var partTypesArray = ['Managing',\r",
									"'Funding',\r",
									"'Impact',\r",
									"'Technical',\r",
									"'Resource'];\r",
									"\r",
									"pm.globals.set('partnerTypeArray', JSON.stringify(new Array(2).fill(partTypesArray[_.random(0, partTypesArray.length - 1)])));\r",
									"\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"pmcEntityCode\", makeid(false, true, false, 3));\r",
									"\r",
									"pm.globals.set('partnerAddress', pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
									"\r",
									"// Random array generator - Util Function\r",
									"function generateRandomArrayFromArray(randomArrayLength, possibleArray) {\r",
									"    let randomArray = [];\r",
									"    var possible = possibleArray;\r",
									"    let preDefinedLength = randomArrayLength;\r",
									"    for (let i = 0; i < preDefinedLength; i++) {\r",
									"        let choice = Math.floor((Math.random() * possible.length));\r",
									"        if (randomArray.includes(possible[choice]))\r",
									"            continue;\r",
									"        randomArray.push(possible[choice]);\r",
									"    }\r",
									"    return randomArray;\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": {{partnerTypeArray}},\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Mandatory Field Blank - organizationId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c1bc67a-f937-4fd3-b04d-d54e36c425b6",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that organizationId error message is correct\", function () {",
									"    var error_organizationId = jsonData.errors[0].extensions.errors['partner.organizationId'].IsId;  ",
									"    pm.expect(error_organizationId).to.eql(\"Invalid ID\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e65db094-3b94-40bc-849f-3907d7593c21",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Mandatory Field Removed  - organizationId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d53f861a-eb1a-4315-8d05-81ca877ae31e",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.include(\"Field \\\"organizationId\\\" of required type \\\"ID!\\\" was not provided.\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "70828168-ecc4-4700-b083-feca38828b67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Mandatory Field Blank - types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cd7466f-371b-4a37-8de4-30e116ce0a3c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"PartnerType\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "99f39d62-48f5-4048-b541-b28613bbfdd0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2bbc264-870e-4900-b117-6e08aa8e1237",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0e7451a8-3e2e-4aa7-bf7a-27c06d521b01",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Mandatory Field Removed - types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11ff2bbf-28a5-488e-98bf-98f4af64c3d8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.createPartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that types are empty\", function () {",
									"    var types =jsonData.data.createPartner.partner.types.value;",
									"pm.expect(types).to.eql([]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39868689-a7dd-45db-9cd3-19240ad6871b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Not Mandatory Field Blank - financialReportingTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39a527fc-29c1-4a07-924b-d1992e7b0c10",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"FinancialReportingType\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9adb4618-7c45-4623-ae1b-f20c4ecc3d0f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4916c68c-5e74-4e0d-9dee-181d920bb240",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a2141cf5-8dfc-4653-a7f1-044002646be3",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Not Mandatory Field Removed - financialReportingTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40860f35-f0a5-4f07-a620-0a7a8db0da29",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.createPartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that agreementStatus is null\", function () {",
									"    var financialReportingTypes =jsonData.data.createPartner.partner.financialReportingTypes.value;",
									"pm.expect(financialReportingTypes).to.eql([]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2082d503-3049-4217-a5bd-98022404867e",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set('partnerType', \"Managing\");\r",
									"\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"pmcEntityCode\", makeid(false, true, false, 3));\r",
									"\r",
									"pm.globals.set('partnerAddress', pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Not Mandatory Field Blank - pmcEntityCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679a1002-4634-4fdf-8363-0ef9fcb24fd8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that pmcEntityCode error message is correct\", function () {",
									"    var error_pmcEntityCode = jsonData.errors[0].extensions.errors['partner.pmcEntityCode'].matches;  ",
									"    pm.expect(error_pmcEntityCode).to.eql(\"pmcEntityCode must match /^[A-Z]{3}$/ regular expression\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bfe70f99-b077-4a13-b313-f4d8fdeba111",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b330816c-14cf-4e7e-b16d-0f41ac877a39",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4bcfa1af-83c8-414f-88b1-4f4b5c3a3722",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner  Not Mandatory Field Removed - pmcEntityCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "341fd486-a03d-4f80-b4f8-12f432bce64c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.createPartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that pmcEntityCode is null\", function () {",
									"    var pmcEntityCode = jsonData.data.createPartner.partner.pmcEntityCode.value;",
									"    pm.expect(pmcEntityCode).to.eql(null);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "18c11d34-caa7-4eb9-a36c-0edaa05691e8",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set('partnerType', \"Managing\");\r",
									"\r",
									"// Taking random value for the financialReportingTypes from pre-defined possible values\r",
									"var optionsArray = ['Funded', 'FieldEngaged'];\r",
									"var randomNumber = Math.floor(Math.random() * optionsArray.length);\r",
									"pm.globals.set('financialReportingTypes', optionsArray[randomNumber]);\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"\r",
									"pm.globals.set('partnerAddress', pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48b43183-eebb-4021-bf07-d533de7bf3e6",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b0c35da9-5c86-4178-b446-a1334b4dba42",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Success - Only Required Inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c6e2883-786f-4730-8e50-a5d875799846",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.createPartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"",
									"    // Saving data for future use",
									"    pm.globals.set(\"partnerid\", id);",
									"});",
									"",
									"//Saving data for future use",
									"var partner = JSON.stringify(jsonData.data.createPartner.partner);",
									"pm.globals.set(\"partner_data\", partner);",
									"",
									"//  CHeck for empty / null \\ blank for not provided input fields",
									"",
									"",
									"pm.test(\"Verify that partner types are null\", function () {",
									"    var types = jsonData.data.createPartner.partner.types.value;",
									"    pm.expect(types).to.eql([]);",
									"});",
									"",
									"pm.test(\"Verify that partner financialReportingTypes are null\", function () {",
									"    var financialReportingTypes = jsonData.data.createPartner.partner.financialReportingTypes.value;",
									"    pm.expect(financialReportingTypes).to.eql([]);",
									"});",
									"",
									"pm.test(\"Verify that created partner pmcEntityCode is are null\", function () {",
									"    var pmcEntityCode = jsonData.data.createPartner.partner.pmcEntityCode.value;",
									"    pm.expect(pmcEntityCode).to.eql(null);",
									"});",
									"",
									"pm.test(\"Verify that created partner globalInnovationsClient are null\", function () {",
									"    var globalInnovationsClient = jsonData.data.createPartner.partner.globalInnovationsClient.value;",
									"    pm.expect(globalInnovationsClient).to.eql(null);",
									"});",
									"",
									"pm.test(\"Verify that created partner active are null\", function () {",
									"    var active = jsonData.data.createPartner.partner.active.value;",
									"    pm.expect(active).to.eql(null);",
									"});",
									"",
									"pm.test(\"Verify that created partner address are null\", function () {",
									"    var address = jsonData.data.createPartner.partner.address.value;",
									"    pm.expect(address).to.eql(null);",
									"});",
									"",
									"pm.test(\"Verify that created partner organization name is same as previous value\", function () {",
									"    var orgName = jsonData.data.createPartner.partner.organization.value.name.value;",
									"    pm.expect(orgName).to.eql(pm.globals.get('orgName'));",
									"});",
									"",
									"pm.test(\"Verify that created partner avatarLetters is same as previous value\", function () {",
									"    var avatarLetters = jsonData.data.createPartner.partner.avatarLetters;",
									"    pm.expect(avatarLetters).to.eql(pm.globals.get('avatarLetters'));",
									"});",
									"",
									"// pm.test(\"Verify that created partner pointOfContact is same as previous value\", function () {",
									"//     var pointOfContact = jsonData.data.createPartner.partner.pointOfContact.value;",
									"//     pm.expect(pointOfContact).to.eql(null);",
									"// });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3276c3ed-835e-492c-a830-ca8947480fa4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Mismatch - organizationId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08d7509f-a16f-4630-b24d-809eced34cc4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"organizationId\\\" of required type \\\"ID!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "51331b36-6af4-4dc2-9568-2e034934152f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId1\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Mismatch - types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbbc7549-1200-44c7-a946-d66a7c290c02",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"invalid value\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d034dd29-b32b-4225-ae7a-ff5c857910a9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types1\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Mismatch - financialReportingTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4faebb42-8c68-4b78-a1e3-7062e35998e5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreatePartner\\\". Did you mean \\\"financialReportingTypes\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d0c55d9e-55b9-4977-af4a-3a7751bb1dfb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes1\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Mismatch - pmcEntityCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec2956e-e77e-4866-a000-8d9ea49eb6ea",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreatePartner\\\". Did you mean \\\"pmcEntityCode\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "91df382e-0345-4042-a911-e12810a96c0a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode1\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Mismatch -globalInnovationsClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce76ae1e-3dc8-4cc0-8d9a-5e7729a62cb8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreatePartner\\\". Did you mean \\\"globalInnovationsClient\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9fced84c-ba8b-4bee-8b1d-5fb0a7862596",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient1\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Mismatch - active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f80bbfb-e7d4-4841-9ce0-97e9ce730bef",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreatePartner\\\". Did you mean \\\"active\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7c1b1f77-2c7a-470b-8a42-66a35d2f2c60",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active1\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Mismatch - address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed1ca9e6-4105-4a0d-804d-fbe747160889",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"CreatePartner\\\". Did you mean \\\"address\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6f26bfae-d367-4d01-b6cf-8ba74cf6f727",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address1\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Invalid - organizationId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9343a28f-2a78-487e-9c67-2430c023e60d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that organizationId error message is correct\", function () {",
									"    var error_organizationId = jsonData.errors[0].extensions.errors['partner.organizationId'].IsId;  ",
									"    pm.expect(error_organizationId).to.eql(\"Invalid ID\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a9d0b63a-8f25-4b72-abaa-a5c54246e76e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"@#$%^78 ^&*(\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Invalid - types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce51737b-a1af-484e-8d2b-04c54f6f2182",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"PartnerType\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "14268427-8577-4fed-8f84-8016a25ce149",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"$%^&*()\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Invalid - financialReportingTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3458dc40-cff0-44bb-bc52-fd9e84940bef",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"FinancialReportingType\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "82db7f73-2f60-42c5-8a25-594e0219f1f9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"@#$%^&*(0\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Partner Parameter Invalid - pmcEntityCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9193fad4-da1f-45af-96f0-9cc7e397a47c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that pmcEntityCode error message is correct\", function () {",
									"    var error_pmcEntityCode = jsonData.errors[0].extensions.errors['partner.pmcEntityCode'].matches;  ",
									"    pm.expect(error_pmcEntityCode).to.eql(\"pmcEntityCode must match /^[A-Z]{3}$/ regular expression\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1f41208a-4fc8-412c-a794-3ba4607bd650",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"$%^&*(\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Partner ( Create Org )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "969eb329-71bf-4d55-a59b-bed9b352b791",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.createOrganization.organization.id;",
									"pm.globals.set(\"organizationid\", id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "84922165-6edc-4d54-9173-de4e370befff",
								"exec": [
									"const moment = require('moment');\r",
									"\r",
									"pm.globals.set(\"orgName\", \"OrganizationName_\" + moment().format(\"DDMMYYYYhhmmss\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrganization($input: CreateOrganizationInput!) {\r\n  createOrganization(input: $input) {\r\n    organization {\r\n      id\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      address {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      createdAt\r\n      avatarLetters\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\n    \"input\": {\n        \"organization\": {\n            \"name\": \"{{orgName}}\",\n            \"address\":\"{{orgAddress}}\"\n        }\n    }\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Get Partner  by Id ( Create Partner )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7ab7a06-64af-4b50-aa94-1f954333ac98",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Saving data for future use",
									"var id = jsonData.data.createPartner.partner.id;",
									"pm.globals.set(\"partnerid\", id);",
									"",
									"var partner = JSON.stringify(jsonData.data.createPartner.partner);",
									"pm.globals.set(\"partner_data\", partner);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9e9f3dd2-cc8d-44bc-baa5-e18ba10a7a47",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set('partnerType', \"Managing\");\r",
									"\r",
									"// Taking random value for the financialReportingTypes from pre-defined possible values\r",
									"var optionsArray = ['Funded', 'FieldEngaged'];\r",
									"var randomNumber = Math.floor(Math.random() * optionsArray.length);\r",
									"pm.globals.set('financialReportingTypes', optionsArray[randomNumber]);\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"pmcEntityCode\", makeid(false, true, false, 3));\r",
									"\r",
									"pm.globals.set('partnerAddress', pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPartner($input: CreatePartnerInput!) {\r\n  createPartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"organizationId\": \"{{organizationid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": false,\r\n            \"active\": false,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Partner By Id Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4156a6b3-a545-4a76-b9dd-876f0a0ab970",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"var partner_data = JSON.parse(pm.variables.get(\"partner_data\"));",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.partner.id;  ",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"// Verifying returned partner info with recently stored partner info",
									"pm.test(\"Verifying partner ID\", function () {",
									"    var id = jsonData.data.partner.id;  ",
									"    pm.expect(id).to.eql(partner_data.id);",
									"});",
									"",
									"pm.test(\"Verifying createdAt\", function () {",
									"    var time = jsonData.data.partner.createdAt;",
									"    pm.expect(time).to.eql(partner_data.createdAt);",
									"});",
									"",
									"pm.test(\"Verifying partner type\", function () {",
									"    var type = jsonData.data.partner.types.value[0];",
									"    pm.expect(type).to.eql(partner_data.types.value[0]);",
									"});",
									"",
									"pm.test(\"Verifying financialReportingTypes\", function () {",
									"    var financialReportingTypes = jsonData.data.partner.financialReportingTypes.value;",
									"    pm.expect(financialReportingTypes).to.eql(partner_data.financialReportingTypes.value);",
									"});",
									"",
									"pm.test(\"Verifying pmcEntityCode\", function () {",
									"    var pmcEntityCode = jsonData.data.partner.pmcEntityCode.value;",
									"    pm.expect(pmcEntityCode).to.eql(partner_data.pmcEntityCode.value);",
									"});",
									"",
									"pm.test(\"Verifying globalInnovationsClient\", function () {",
									"    var globalInnovationsClient = jsonData.data.partner.globalInnovationsClient.value;",
									"    pm.expect(globalInnovationsClient).to.eql(partner_data.globalInnovationsClient.value);",
									"});",
									"",
									"pm.test(\"Verifying active\", function () {",
									"    var active = jsonData.data.partner.active.value;",
									"    pm.expect(active).to.eql(partner_data.active.value);",
									"});",
									"",
									"pm.test(\"Verifying address\", function () {",
									"    var address = jsonData.data.partner.address.value;",
									"    pm.expect(address).to.eql(partner_data.address.value);",
									"});",
									"",
									"pm.test(\"Verifying organization ID\", function () {",
									"    var id = jsonData.data.partner.organization.id;  ",
									"    pm.expect(id).to.eql(partner_data.organization.id);",
									"});",
									"",
									"pm.test(\"Verifying organization's createdAt\", function () {",
									"    var createdAt = jsonData.data.partner.organization.createdAt;",
									"    pm.expect(createdAt).to.eql(partner_data.organization.createdAt);",
									"});",
									"",
									"pm.test(\"Verifying organization name\", function () {",
									"    var name = jsonData.data.partner.organization.value.name.value;",
									"    pm.expect(name).to.eql(partner_data.organization.value.name.value);",
									"",
									"});",
									"",
									"pm.test(\"Verifying organization avatarLetters\", function () {",
									"    var avatarLetters = jsonData.data.partner.organization.value.avatarLetters;",
									"    pm.expect(avatarLetters).to.eql(partner_data.organization.value.avatarLetters);",
									"});",
									"",
									"pm.test(\"Verifying pointOfContact\", function () {",
									"    var pointOfContact = jsonData.data.partner.pointOfContact.value;",
									"    pm.expect(pointOfContact).to.eql(partner_data.pointOfContact.value);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "690cb892-a3df-4403-8f17-6ceff4a4d0c9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partner($id: ID!) {\r\n  partner(id: $id) {\r\n    id\r\n    createdAt\r\n    types {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    financialReportingTypes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    pmcEntityCode {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    globalInnovationsClient {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    active {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    address {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    organization {\r\n      value {\r\n        id\r\n        createdAt\r\n        name {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        avatarLetters\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n    pointOfContact {\r\n      value {\r\n        id\r\n        fullName\r\n        firstName\r\n        avatarLetters\r\n        createdAt\r\n        email {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        realFirstName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        realLastName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        displayFirstName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        displayLastName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        phone {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        about {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        status {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        title {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        roles {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n\r\n        timezone {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            name\r\n            lat\r\n            long\r\n            countries {\r\n              code\r\n              name\r\n              zones {\r\n                name\r\n                lat\r\n                long\r\n                countries {\r\n                  code\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        unavailabilities {\r\n          canRead\r\n          items {\r\n            id\r\n            createdAt\r\n            description {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            start\r\n            end\r\n          }\r\n          total\r\n          hasMore\r\n          canCreate\r\n        }\r\n        organizations {\r\n          canRead\r\n          items {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n          total\r\n          hasMore\r\n          canCreate\r\n        }\r\n        education {\r\n          canRead\r\n          total\r\n          hasMore\r\n          canCreate\r\n          items {\r\n            id\r\n            createdAt\r\n            degree {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            major {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            institution {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"{{partnerid}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Partner By Id Mandatory Field Blank - Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56a6c113-34bc-462e-b98e-c22378484beb",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that partnership error message is correct\", function () {",
									"    var error_partnership_message = jsonData.errors[0].extensions.errors.id.IsId;",
									"    pm.expect(error_partnership_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "aefa7c36-480c-4190-8df4-ef8b5736cfa1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partner($id: ID!) {\r\n  partner(id: $id) {\r\n    id\r\n    createdAt\r\n    types {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    financialReportingTypes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    pmcEntityCode {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    globalInnovationsClient {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    active {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    address {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    organization {\r\n      value {\r\n        id\r\n        createdAt\r\n        name {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        avatarLetters\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n    pointOfContact {\r\n      value {\r\n        id\r\n        fullName\r\n        firstName\r\n        avatarLetters\r\n        createdAt\r\n        email {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        realFirstName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        realLastName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        displayFirstName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        displayLastName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        phone {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        about {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        status {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        title {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        roles {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n\r\n        timezone {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            name\r\n            lat\r\n            long\r\n            countries {\r\n              code\r\n              name\r\n              zones {\r\n                name\r\n                lat\r\n                long\r\n                countries {\r\n                  code\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        unavailabilities {\r\n          canRead\r\n          items {\r\n            id\r\n            createdAt\r\n            description {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            start\r\n            end\r\n          }\r\n          total\r\n          hasMore\r\n          canCreate\r\n        }\r\n        organizations {\r\n          canRead\r\n          items {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n          total\r\n          hasMore\r\n          canCreate\r\n        }\r\n        education {\r\n          canRead\r\n          total\r\n          hasMore\r\n          canCreate\r\n          items {\r\n            id\r\n            createdAt\r\n            degree {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            major {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            institution {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Partner By Id Parameter Mismatch - Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46472834-688b-4dc5-87a2-5784c924fe3e",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "33188a16-51ac-434e-be43-2df6d1b6a176",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partner($id: ID!) {\r\n  partner(id: $id) {\r\n    id\r\n    createdAt\r\n    types {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    financialReportingTypes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    pmcEntityCode {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    globalInnovationsClient {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    active {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    address {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    organization {\r\n      value {\r\n        id\r\n        createdAt\r\n        name {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        avatarLetters\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n    pointOfContact {\r\n      value {\r\n        id\r\n        fullName\r\n        firstName\r\n        avatarLetters\r\n        createdAt\r\n        email {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        realFirstName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        realLastName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        displayFirstName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        displayLastName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        phone {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        about {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        status {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        title {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        roles {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n\r\n        timezone {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            name\r\n            lat\r\n            long\r\n            countries {\r\n              code\r\n              name\r\n              zones {\r\n                name\r\n                lat\r\n                long\r\n                countries {\r\n                  code\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        unavailabilities {\r\n          canRead\r\n          items {\r\n            id\r\n            createdAt\r\n            description {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            start\r\n            end\r\n          }\r\n          total\r\n          hasMore\r\n          canCreate\r\n        }\r\n        organizations {\r\n          canRead\r\n          items {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n          total\r\n          hasMore\r\n          canCreate\r\n        }\r\n        education {\r\n          canRead\r\n          total\r\n          hasMore\r\n          canCreate\r\n          items {\r\n            id\r\n            createdAt\r\n            degree {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            major {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            institution {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id1\": \"{{partnerid}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Partner By Id Parameter Invalid - Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10f14ad7-a605-41e0-b90f-8b6892db4477",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that partnership error message is correct\", function () {",
									"    var error_partnership_message = jsonData.errors[0].extensions.errors.id.IsId;",
									"    pm.expect(error_partnership_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3891ed14-408a-4a1c-8436-c6da22de6272",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partner($id: ID!) {\r\n  partner(id: $id) {\r\n    id\r\n    createdAt\r\n    types {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    financialReportingTypes {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    pmcEntityCode {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    globalInnovationsClient {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    active {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    address {\r\n      value\r\n      canEdit\r\n      canRead\r\n    }\r\n    organization {\r\n      value {\r\n        id\r\n        createdAt\r\n        name {\r\n          value\r\n          canEdit\r\n          canRead\r\n        }\r\n        avatarLetters\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n    pointOfContact {\r\n      value {\r\n        id\r\n        fullName\r\n        firstName\r\n        avatarLetters\r\n        createdAt\r\n        email {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        realFirstName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        realLastName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        displayFirstName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        displayLastName {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        phone {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        about {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        status {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        title {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        roles {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n\r\n        timezone {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            name\r\n            lat\r\n            long\r\n            countries {\r\n              code\r\n              name\r\n              zones {\r\n                name\r\n                lat\r\n                long\r\n                countries {\r\n                  code\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        unavailabilities {\r\n          canRead\r\n          items {\r\n            id\r\n            createdAt\r\n            description {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            start\r\n            end\r\n          }\r\n          total\r\n          hasMore\r\n          canCreate\r\n        }\r\n        organizations {\r\n          canRead\r\n          items {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n          total\r\n          hasMore\r\n          canCreate\r\n        }\r\n        education {\r\n          canRead\r\n          total\r\n          hasMore\r\n          canCreate\r\n          items {\r\n            id\r\n            createdAt\r\n            degree {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            major {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            institution {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n      canEdit\r\n      canRead\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"~ ~ __ @#$%^ j\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f75e59ac-ab37-436e-8063-47799a72a353",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.updatePartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that partner is updated exactly for requested ID\", function () {",
									"    var id = jsonData.data.updatePartner.partner.id;",
									"    pm.expect(id).to.eql(pm.globals.get('partnerid'));",
									"});",
									"",
									"pm.test(\"Verify that partner's createdAt is in Specific time format\", function () {",
									"    var time = jsonData.data.updatePartner.partner.createdAt;",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"    pm.expect(isValidTime).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify that partner modifiedAt is in Specific time format\", function () {",
									"    var time = jsonData.data.updatePartner.partner.modifiedAt;",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"    pm.expect(isValidTime).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify updated partner type is same as requested types\", function () {",
									"    var type = jsonData.data.updatePartner.partner.types.value[0];",
									"    pm.expect(type).to.eql(pm.globals.get('partnerType'));",
									"});",
									"",
									"pm.test(\"Verify updated financialReportingTypes is same as requested types\", function () {",
									"    var financialReportingTypes = jsonData.data.updatePartner.partner.financialReportingTypes.value[0];",
									"    pm.expect(financialReportingTypes).to.eql(pm.globals.get('financialReportingTypes'));",
									"});",
									"",
									"pm.test(\"Verify updated pmcEntityCode is same as requested code\", function () {",
									"    var pmcEntityCode = jsonData.data.updatePartner.partner.pmcEntityCode.value;",
									"    pm.expect(pmcEntityCode).to.eql(pm.globals.get('pmcEntityCode'));",
									"});",
									"",
									"pm.test(\"Verify updated globalInnovationsClient is same as requested\", function () {",
									"    var globalInnovationsClient = jsonData.data.updatePartner.partner.globalInnovationsClient.value;",
									"    pm.expect(globalInnovationsClient).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify updated active is same as requested\", function () {",
									"    var active = jsonData.data.updatePartner.partner.active.value;",
									"    pm.expect(active).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify updated address is same as requested address\", function () {",
									"    var address = jsonData.data.updatePartner.partner.address.value;",
									"    pm.expect(address).to.eql(pm.globals.get('partnerAddress'));",
									"});",
									"",
									"pm.test(\"Verify that organization ID is not blank or null\", function () {",
									"    var id = jsonData.data.updatePartner.partner.organization.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that organization's createdAt is in Specific time format\", function () {",
									"    var time = jsonData.data.updatePartner.partner.organization.value.createdAt;",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"    pm.expect(isValidTime).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify that organization name is not blank or null\", function () {",
									"    var name = jsonData.data.updatePartner.partner.organization.value.name.value;",
									"    pm.expect(name).to.not.eql(null);",
									"    pm.expect(name).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that organization's avatarLetters are as per organization name\", function () {",
									"    var avatarLetters = jsonData.data.updatePartner.partner.organization.value.avatarLetters;",
									"    pm.expect(avatarLetters).to.eql('O');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e6295ac1-8359-4a78-ab7d-d64748c534b7",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set('partnerType', \"Managing\");\r",
									"\r",
									"// Taking random value for the financialReportingTypes from pre-defined possible values\r",
									"var optionsArray = ['Funded', 'FieldEngaged'];\r",
									"var randomNumber = Math.floor(Math.random() * optionsArray.length);\r",
									"pm.globals.set('financialReportingTypes', optionsArray[randomNumber]);\r",
									"\r",
									"// generate random id from characters\r",
									"function makeid(lower, caps, mix, length) {\r",
									"    var result = '';\r",
									"    var characters;\r",
									"    if (lower) {\r",
									"        characters = 'abcdefghijklmnopqrstuvwxyz';\r",
									"    } else if (caps) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"    } else if (mix) {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    } else {\r",
									"        characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    }\r",
									"    var charactersLength = characters.length;\r",
									"    for (var i = 0; i < length; i++) {\r",
									"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"pm.globals.set(\"pmcEntityCode\", makeid(false, true, false, 3));\r",
									"\r",
									"pm.globals.set('partnerAddress', pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Mandatory Field Removed - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00172599-d832-4466-9bf7-549318c647af",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"id\\\" of required type \\\"ID!\\\" was not provided.\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1925234d-fd72-41eb-9bf1-fade6c55adcd",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Mandatory Field Blank - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b53d4cea-d5a0-4d23-b827-edb604e28190",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that partnership ID error message is correct\", function () {",
									"    var error_partnershipId = jsonData.errors[0].extensions.errors['partner.id'].IsId;  ",
									"    pm.expect(error_partnershipId).to.eql(\"Invalid ID\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7a264065-80d9-4415-9479-42ed44ee4d6e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Not Mandatory Field Removed - types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef8070c5-e0d8-44be-a24a-54374d63ab33",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.updatePartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that updated partner types is equal to previous value\", function () {",
									"    var types = jsonData.data.updatePartner.partner.types.value[0];",
									"    pm.expect(types).to.eql(pm.globals.get('partnerType'));",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f9f02b2a-5355-48f5-b2cc-4eb303992e4f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Not Mandatory Field Blank - types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a71ace0-493b-43d3-b739-00b01fb136ee",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"PartnerType\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "544cac42-4a00-41ea-893b-1981be395e0d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Not Mandatory Field Removed - financialReportingTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52d4201c-1914-4e63-8fa1-a2988c10babd",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.updatePartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that updated partner financialReportingTypes is equal to previous value\", function () {",
									"    var financialReportingTypes = jsonData.data.updatePartner.partner.financialReportingTypes.value[0];",
									"    pm.expect(financialReportingTypes).to.eql(pm.globals.get('financialReportingTypes'));",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8229ca71-93d2-48d0-b851-db476536f4b4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Not Mandatory Field Blank - FinancialReportingType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ae9eede-57c1-4cc5-9d35-88230be0e7a6",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"FinancialReportingType\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8080359b-c77b-4779-8007-60f08ad94902",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Not Mandatory Field Removed - pmcEntityCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bee3c415-e0ba-4e99-b984-3d7119a6cdfb",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.updatePartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"pm.test(\"Verify that updated partner pmcEntityCode is equal to previous value\", function () {",
									"    var pmcEntityCode = jsonData.data.updatePartner.partner.pmcEntityCode.value;",
									"    pm.expect(pmcEntityCode).to.eql(pm.globals.get('pmcEntityCode'));",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9be9e322-9a1e-41a4-aa74-433ee971d632",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Not Mandatory Field Blank - pmcEntityCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fec2a078-f2c8-42b8-8e00-67da181258d4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that pmcEntityCode error message is correct\", function () {",
									"    var error_pmcEntityCode = jsonData.errors[0].extensions.errors['partner.pmcEntityCode'].matches;  ",
									"    pm.expect(error_pmcEntityCode).to.eql(\"pmcEntityCode must match /^[A-Z]{3}$/ regular expression\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0631123c-7e13-42d5-b583-67d16148c3fa",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Success - Only Required Inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9af9ede8-ef17-4218-9b2f-b955f1c9da21",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partner ID is not blank or null\", function () {",
									"    var id = jsonData.data.updatePartner.partner.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"",
									"    // Saving data for future use",
									"    pm.globals.set(\"partnerid\", id);",
									"});",
									"",
									"// Saving partner object for future use in Filter by ProjectId",
									"var partner = JSON.stringify(jsonData.data.updatePartner.partner);",
									"pm.globals.set(\"partner_data\", partner);",
									"",
									"pm.test(\"Verify that partner is updated exactly for requested ID\", function () {",
									"    var id = jsonData.data.updatePartner.partner.id;",
									"    pm.expect(id).to.eql(pm.globals.get('partnerid'));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2601f6ac-2a8b-4547-9559-e18a96f8bc4e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Parameter Mismatch - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d78788b9-39ec-47ba-9d32-abf3d329f85c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"id\\\" of required type \\\"ID!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7f535ef2-8895-4d4a-8d2a-200a306e0c39",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id1\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Parameter Mismatch - types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a01c720-c5e3-40e8-916b-596865399d85",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"types1\\\" is not defined by type \\\"UpdatePartner\\\". Did you mean \\\"types\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1997b8e2-2803-45c6-818a-61be0d2cf3d7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types1\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Parameter Mismatch - financialReportingTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "adc04463-36e4-4709-a619-a08be8e4e3ce",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\" Did you mean \\\"financialReportingTypes\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "72052061-40e4-40ce-bb1d-f28afcd98ac0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes1\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Parameter Mismatch - pmcEntityCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14df5701-f1a4-4b57-8e30-7ab0ea330c3a",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"UpdatePartner\\\". Did you mean \\\"pmcEntityCode\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d93ba2d3-eb2a-47f2-8980-65573fc5a1bc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode1\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Parameter Mismatch - address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c852cc91-6a59-4dc2-84c7-75b9f087b099",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"UpdatePartner\\\". Did you mean \\\"address\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "05f08a37-b01f-434f-8950-0e860f2540ef",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address1\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Parameter Invalid - Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6404788-4919-4321-a403-6166cad8d1e3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that partnership ID error message is correct\", function () {",
									"    var error_partnershipId = jsonData.errors[0].extensions.errors['partner.id'].IsId;  ",
									"    pm.expect(error_partnershipId).to.eql(\"Invalid ID\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cb68c643-851f-4c37-aabd-688493647d79",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"#$%^&*(\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Parameter Invalid - types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d7138b5-d9b3-458b-a4b5-e7343767b93d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"PartnerType\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1c958547-3553-409d-9e4b-aea258e26669",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"%^&*()_\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Parameter Invalid - financialReportingTypes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15d85c1d-5508-46c1-ba5b-fa70e77ac082",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"FinancialReportingType\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql('INTERNAL_SERVER_ERROR');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "721a2d04-ed3e-48dd-a2eb-f886a71d68c0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"$%^&*()_\",\r\n            \"pmcEntityCode\": \"{{pmcEntityCode}}\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Partner Parameter Invalid - pmcEntityCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4bb10a7-4b68-4f69-b88e-309dede532aa",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that pmcEntityCode error message is correct\", function () {",
									"    var error_pmcEntityCode = jsonData.errors[0].extensions.errors['partner.pmcEntityCode'].matches;  ",
									"    pm.expect(error_pmcEntityCode).to.eql(\"pmcEntityCode must match /^[A-Z]{3}$/ regular expression\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e9a0530f-4882-444f-8d55-129b0216e490",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePartner($input: UpdatePartnerInput!) {\r\n  updatePartner(input: $input) {\r\n    partner {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            total\r\n            hasMore\r\n            canCreate\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n          }\r\n        }\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"partner\": {\r\n            \"id\": \"{{partnerid}}\",\r\n            \"types\": \"{{partnerType}}\",\r\n            \"financialReportingTypes\": \"{{financialReportingTypes}}\",\r\n            \"pmcEntityCode\": \"@#$%^&*(\",\r\n            \"globalInnovationsClient\": true,\r\n            \"active\": true,\r\n            \"address\": \"{{partnerAddress}}\"\r\n        }\r\n    }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06ee8fe2-ccf6-4c2e-9eda-d74fc41601fe",
								"exec": [
									"var jsonData = pm.response.json();",
									"var lodash = require('lodash');",
									"var partner_data = JSON.parse(pm.variables.get(\"partner_data\")); // Get stored Partner object",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - Pagination",
									"pm.test(\"Verify that total is greater than Zero\", function () {",
									"    var total = jsonData.data.partners.total;",
									"    pm.expect(total).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Verify that hasMore is correct\", function () {",
									"    var total = jsonData.data.partners.total;",
									"    var hasMore = jsonData.data.partners.hasMore;",
									"    if (Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) < total) {",
									"        pm.expect(hasMore).to.eql(true);",
									"    } else {",
									"        pm.expect(hasMore).to.eql(false);",
									"    }",
									"});",
									"",
									"pm.test(\"Verify that number of items returned are exact\", function () {",
									"    var total = jsonData.data.partners.total;                  // total returned in response",
									"    var returneditems = jsonData.data.partners.items.length;   // no. of items returned in response array",
									"    var itemCount = Number(pm.globals.get('itemCount'));    // no. of items per page",
									"    var page = Number(pm.globals.get('page'));              // page number",
									"    var expectedItems = itemCount * page;                   // items we are expecting",
									"",
									"    if (expectedItems <= total) {",
									"        pm.expect(returneditems).to.eql(itemCount);",
									"    } else {",
									"        if ((expectedItems - total) < itemCount) {",
									"            var lastItems = total - ((itemCount * (page - 1)));   // items in last page",
									"            pm.expect(returneditems).to.eql(lastItems);",
									"        }",
									"    }",
									"});",
									"",
									"/**",
									" * Setting up 'page' number to be used in next request",
									" * For locating recently created Object position on Specific page",
									" */",
									"var total = jsonData.data.partners.total;",
									"var itemCount = Number(pm.globals.get('itemCount'));",
									"",
									"if (total > itemCount) {",
									"",
									"    if ((total % itemCount) == 0) {",
									"        var pageToset = total / itemCount;",
									"        pm.globals.set(\"page\", pageToset);",
									"    } else {",
									"        var pageToset = Math.floor(total / itemCount) + 1;",
									"        pm.globals.set(\"page\", pageToset);",
									"    }",
									"",
									"} else {",
									"    pm.globals.set(\"page\", 1);  // Set page to 1 if total <= itemCount",
									"}",
									"",
									"// Verifying recently created Partnership's information with Partnership object returned within items array",
									"",
									"// get Partnership object first having same id as recently created Partnership's id",
									"var myPartner = lodash.find(jsonData.data.partners.items, ['id', partner_data.id]);",
									"",
									"if (myPartner == undefined) return;",
									"/**",
									" * As Partnership listing results are sorted by 'name',",
									" * recently created partnership object may exist any where in the listing,",
									" * So we can not verify the object details if it's not within first page.",
									" */",
									"",
									"// pm.test(\"Verifying partnership ID\", function () {",
									"//     var id = myPartnership.id;  ",
									"//     pm.expect(id).to.eql(partnership_data.id);",
									"// });",
									"",
									"// pm.test(\"Verifying partnership's createdAt\", function () {",
									"//     var createdAt = myPartnership.createdAt;  ",
									"//     pm.expect(createdAt).to.eql(partnership_data.createdAt);",
									"// });",
									"",
									"// pm.test(\"Verifying partnership type\", function () {",
									"//     var type = myPartnership.types.value[0];",
									"//     pm.expect(type).to.eql(partnership_data.types.value[0]);",
									"// });",
									"",
									"// pm.test(\"Verifying agreementStatus\", function () {",
									"//     var agreementStatus = myPartnership.agreementStatus.value;",
									"//     pm.expect(agreementStatus).to.eql(partnership_data.agreementStatus.value);",
									"// });",
									"",
									"// pm.test(\"Verifying mouStatus\", function () {",
									"//     var mouStatus = myPartnership.mouStatus.value;",
									"//     pm.expect(mouStatus).to.eql(partnership_data.mouStatus.value);",
									"// });",
									"",
									"// pm.test(\"Verifying mouStart\", function () {",
									"//     var mouStart = myPartnership.mouStart.value;",
									"//     pm.expect(mouStart).to.eql(partnership_data.mouStart.value);",
									"// });",
									"",
									"// pm.test(\"Verifying mouEnd\", function () {",
									"//     var mouEnd = myPartnership.mouEnd.value;",
									"//     pm.expect(mouEnd).to.eql(partnership_data.mouEnd.value);",
									"// });",
									"",
									"// pm.test(\"Verifying mouStartOverride\", function () {",
									"//     var mouStartOverride = myPartnership.mouStartOverride.value;",
									"//     pm.expect(mouStartOverride).to.eql(partnership_data.mouStartOverride.value);",
									"// });",
									"",
									"// pm.test(\"Verifying mouEndOverride\", function () {",
									"//     var mouEndOverride = myPartnership.mouEndOverride.value;",
									"//     pm.expect(mouEndOverride).to.eql(partnership_data.mouEndOverride.value);",
									"// });",
									"",
									"// pm.test(\"Verifying organization ID\", function () {",
									"//     var id = myPartnership.organization.id;  ",
									"//     pm.expect(id).to.eql(partnership_data.organization.id);",
									"// });",
									"",
									"// pm.test(\"Verifying organization's createdAt\", function () {",
									"//     var time = myPartnership.organization.createdAt;",
									"//     pm.expect(time).to.eql(partnership_data.organization.createdAt);",
									"// });",
									"",
									"// pm.test(\"Verifying organization name\", function () {",
									"//     var name = myPartnership.organization.name.value;",
									"//     pm.expect(name).to.eql(partnership_data.organization.name.value);",
									"// });",
									"",
									"// pm.test(\"Verifying organization's avatarLetters\", function () {",
									"//     var avatarLetters = myPartnership.organization.avatarLetters;",
									"//     pm.expect(avatarLetters).to.eql(partnership_data.organization.avatarLetters);",
									"// });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "df1ee1bb-974f-4efc-be65-859c1ba2a6c7",
								"exec": [
									"pm.globals.set(\"itemCount\", 25);\r",
									"pm.globals.set(\"page\", 1);\r",
									"pm.globals.set('order', \"ASC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Success - item Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ddbb1f12-81b8-429d-9415-3d836e292dc7",
								"exec": [
									"var jsonData = pm.response.json();",
									"var lodash = require('lodash');",
									"var partner_data = JSON.parse(pm.variables.get(\"partner_data\")); // Get stored Partnership object",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - Pagination",
									"pm.test(\"Verify that total is greater than Zero\", function () {",
									"    var total = jsonData.data.partners.total;",
									"    pm.expect(total).to.be.above(0);",
									"});",
									"",
									"// Verifying recently created Partnership's information with Partnership object returned within items array",
									"",
									"// get Partnership object first having same id as recently created Partnership's id",
									"var myPartner = lodash.find(jsonData.data.partners.items, ['id', partner_data.id]);",
									"",
									"pm.test(\"Verifying partner ID\", function () {",
									"    var id = myPartner.id;",
									"    pm.expect(id).to.eql(partner_data.id);",
									"});",
									"",
									"pm.test(\"Verifying partner's createdAt\", function () {",
									"    var createdAt = myPartner.createdAt;",
									"    pm.expect(createdAt).to.eql(partner_data.createdAt);",
									"});",
									"",
									"pm.test(\"Verifying partner's modifiedAt\", function () {",
									"    var modifiedAt = myPartner.modifiedAt;",
									"    pm.expect(modifiedAt).to.eql(partner_data.modifiedAt);",
									"});",
									"",
									"pm.test(\"Verifying partner type\", function () {",
									"    var type = myPartner.types.value[0];",
									"    pm.expect(type).to.eql(partner_data.types.value[0]);",
									"});",
									"",
									"pm.test(\"Verifying financialReportingTypes\", function () {",
									"    var financialReportingTypes = myPartner.financialReportingTypes.value;",
									"    pm.expect(financialReportingTypes).to.eql(partner_data.financialReportingTypes.value);",
									"});",
									"",
									"pm.test(\"Verifying pmcEntityCode\", function () {",
									"    var pmcEntityCode = myPartner.pmcEntityCode.value;",
									"    pm.expect(pmcEntityCode).to.eql(partner_data.pmcEntityCode.value);",
									"});",
									"",
									"pm.test(\"Verifying globalInnovationsClient\", function () {",
									"    var globalInnovationsClient = myPartner.globalInnovationsClient.value;",
									"    pm.expect(globalInnovationsClient).to.eql(partner_data.globalInnovationsClient.value);",
									"});",
									"",
									"pm.test(\"Verifying active\", function () {",
									"    var active = myPartner.active.value;",
									"    pm.expect(active).to.eql(partner_data.active.value);",
									"});",
									"",
									"pm.test(\"Verifying address\", function () {",
									"    var address = myPartner.address.value;",
									"    pm.expect(address).to.eql(partner_data.address.value);",
									"});",
									"",
									"pm.test(\"Verifying organization ID\", function () {",
									"    var id = myPartner.organization.value.id;",
									"    pm.expect(id).to.eql(partner_data.organization.value.id);",
									"});",
									"",
									"pm.test(\"Verifying organization's createdAt\", function () {",
									"    var time = myPartner.organization.value.createdAt;",
									"    pm.expect(time).to.eql(partner_data.organization.value.createdAt);",
									"});",
									"",
									"pm.test(\"Verifying organization name\", function () {",
									"    var name = myPartner.organization.value.name.value;",
									"    pm.expect(name).to.eql(partner_data.organization.value.name.value);",
									"});",
									"",
									"pm.test(\"Verifying organization's avatarLetters\", function () {",
									"    var avatarLetters = myPartner.organization.value.avatarLetters;",
									"    pm.expect(avatarLetters).to.eql(partner_data.organization.value.avatarLetters);",
									"});",
									"",
									"pm.test(\"Verifying pointOfContact\", function () {",
									"    var pointOfContact = myPartner.pointOfContact.value;",
									"    pm.expect(pointOfContact).to.eql(partner_data.pointOfContact.value);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2b1575a3-d265-4a20-86d0-a72e9fecd2bd",
								"exec": [
									"pm.globals.set(\"itemCount\", 25);\r",
									"// Page is set from previous request test script based on total\r",
									"pm.globals.set('order', \"ASC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners  Success - total",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3221968-6bd7-41ac-8164-da33557e03e3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - total",
									"pm.test(\"Verify that total is greater than Zero\", function () {",
									"    var total = jsonData.data.partners.total;  ",
									"    pm.expect(total).to.be.above(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a887e49b-625e-4374-adaa-8c0b3f2991c4",
								"exec": [
									"pm.globals.set(\"itemCount\",10);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Success - hasMore - True",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "400d7188-4e63-4add-af0d-7a32c5b07114",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - hasMore",
									"pm.test(\"Verify that hasMore is true Only when partner items are still available\", function () {",
									"    var total = jsonData.data.partners.total;",
									"    var hasMore = jsonData.data.partners.hasMore;",
									"    if(Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) < total){",
									"        pm.expect(hasMore).to.eql(true);",
									"    } else {",
									"        pm.expect(hasMore).to.eql(false);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1272d663-6abb-4c7c-aaca-f8c7ae3d741b",
								"exec": [
									"pm.globals.set(\"itemCount\",1);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Success - hasMore - False",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a17778b-ade8-43a8-b161-8e74dc3b2138",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - hasMore",
									"pm.test(\"Verify that hasMore is false Only when no more partnership items available\", function () {",
									"    var total = jsonData.data.partners.total;",
									"    var hasMore = jsonData.data.partners.hasMore;  ",
									"    if(Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) >= total){",
									"        pm.expect(hasMore).to.eql(false);",
									"    } else {",
									"        pm.expect(hasMore).to.eql(true);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2c481d79-a28a-4797-bd50-c17adbe825e2",
								"exec": [
									"pm.globals.set(\"itemCount\",100);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners  Success - items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac9e2511-a806-42fc-b795-a8f71964d0d8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - no. of items are exact",
									"pm.test(\"Verify that number of items returned are exact\", function () {",
									"    var total = jsonData.data.partners.total;                  // total returned in response",
									"    var returneditems = jsonData.data.partners.items.length;   // no. of items returned in response array",
									"    var itemCount = Number(pm.globals.get('itemCount'));    // no. of items per page",
									"    var page = Number(pm.globals.get('page'));              // page number",
									"    var expectedItems = itemCount * page;                   // items we are expecting",
									"",
									"    if (expectedItems <= total) {",
									"        pm.expect(returneditems).to.eql(itemCount);",
									"    } else {",
									"        if ((expectedItems - total) < itemCount) {",
									"            var lastItems = total - ((itemCount * (page - 1)));   // items in last page",
									"            pm.expect(returneditems).to.eql(lastItems);",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "849b3044-67b9-4867-b2db-64d2403e1205",
								"exec": [
									"pm.globals.set(\"itemCount\",100);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Success - createdAt sorting ASC",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c9bc05e-3ba7-4e27-8dae-a3109c6e7c24",
								"exec": [
									"var jsonData = pm.response.json();",
									"var lodash = require('lodash');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - Name sorting ASC",
									"pm.test(\"Verify that items are sorted by 'createdAt' and orderd by 'ASC' order \", function () {",
									"",
									"    var responseBody = jsonData.data.partners.items;",
									"    var expectedSortedOrder = lodash.orderBy(responseBody, ['createdAt'], ['asc'])",
									"    pm.expect(responseBody).to.eql(expectedSortedOrder);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f91e9d81-dd25-4d33-873c-b6d0a4086300",
								"exec": [
									"pm.globals.set(\"itemCount\",10);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Success - createdAt sorting DESC",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56383014-194d-4992-8cf9-d8696edc9de1",
								"exec": [
									"var jsonData = pm.response.json();",
									"var lodash = require('lodash');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - Name sorting DESC",
									"pm.test(\"Verify that items are sorted by 'createdAt' and orderd by 'DESC' order \", function () {",
									"",
									"    var responseBody = jsonData.data.partners.items;",
									"    var expectedSortedOrder = lodash.orderBy(responseBody,['createdAt'],['desc'])",
									"    pm.expect(responseBody).to.eql(expectedSortedOrder);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a7603115-98f8-40f5-9e8c-859227627c28",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Not Mandatory Field Removed - count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e849f973-137c-413f-b448-51e0bcd3ba45",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that number of items returned is equal to total\", function () {",
									"    var total = jsonData.data.partners.total;",
									"    var items = jsonData.data.partners.items.length;",
									"    if (total <= 25)    // 25 is maximum db items limit returned per page when count is not specified",
									"        pm.expect(items).to.eql(total);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8e080a8e-fcec-4657-b75a-8f0eafb1eca4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Not Mandatory Field Blank - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a74b626f-1837-4132-9dc4-e9f7263f847f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Invalid input\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 500\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(500);",
									"});",
									"",
									"pm.test(\"Verify that error code is InternalServerError\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"InternalServerError\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1babb222-fa04-4858-b8bc-c7f5ee62c20a",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Not Mandatory Field Blank  - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "354315ab-801a-4ebc-9033-e7037646c9de",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"Order\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d8313488-82af-46ef-863d-1913dde2f4e0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Parameter mismatch - count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39e308eb-ffd7-4b83-84a1-e7e79a4328b2",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"PartnerListInput\\\". Did you mean \\\"count\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a4fa8454-f879-4e8f-87eb-ea85f589c212",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count1\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Parameter mismatch - page",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f0d4802-f9e0-44ef-8d2a-23ae65f176d7",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"PartnerListInput\\\". Did you mean \\\"page\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cd66515b-5ca8-4d9a-888b-c185f4dc5063",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page1\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Parameter mismatch - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cda29f76-2555-4cfe-acc2-eb4b5e327518",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"PartnerListInput\\\". Did you mean \\\"sort\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "633c1f6b-b71e-4f2c-b4d2-825188907219",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort1\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Parameter mismatch - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc517b38-2af5-4e39-9595-b97054f574d5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"PartnerListInput\\\". Did you mean \\\"order\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6a8499d9-c81f-48d6-9e33-9873095a1cf4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order1\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Parameter Invalid - count min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7517976-3bb5-4809-aed5-a5b54a10412c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that count error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].extensions.errors.count.min;  ",
									"    pm.expect(error_message).to.eql(\"count must not be less than 1\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9e701865-3628-4b3e-8f5e-3f31658f71a2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": 0,\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Parameter Invalid - count max",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c8c045a-665d-466f-bd50-54cbdd12463d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that count error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].extensions.errors.count.max;  ",
									"    pm.expect(error_message).to.eql(\"count must not be greater than 100\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ca967459-4a48-4030-99ea-2518079b6019",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": 159,\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Parameter Invalid - page",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2277a3fa-8f58-4f24-9644-380da4bf28d3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that page error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].extensions.errors.page.min;  ",
									"    pm.expect(error_message).to.eql(\"page must not be less than 1\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cc653b63-7678-45c0-b6b8-b589d0505aeb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{count}},\r\n    \"page\": 0,\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Parameter Invalid - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4918dc9-bd09-4634-a43b-6a1de438748f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"PENDING >> Similar to BUG #776(closed-Sprint 13) for Users (Sort Field allows empty value/unusual characters)\", function () {",
									"",
									"    if (jsonData.data) {",
									"        pm.expect(\"BACKEND\").to.eql(\"PENDING\"); // fail forcefully",
									"    } else {",
									"        pm.expect(\"WRITE TEST CASES\").to.eql(\"ERRORS >>> \" + jsonData.errors[0].message);",
									"    }",
									"});",
									"",
									"// pm.test(\"Verify that error message is correct\", function () {",
									"//     var error_message = jsonData.errors[0].message;  ",
									"//     pm.expect(error_message).to.include(\"expected whitespace, comment or\");",
									"// });",
									"",
									"// pm.test(\"Verify that error code is InternalServerError\", function () {",
									"//     var error_code = jsonData.errors[0].extensions.code;  ",
									"//     pm.expect(error_code).to.eql(\"InternalServerError\");",
									"// });",
									"",
									"// pm.test(\"Verify that error status is 500\", function () {",
									"//     var error_status = jsonData.errors[0].extensions.status;  ",
									"//     pm.expect(error_status).to.eql(500);",
									"// });",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a6d27462-a9f1-4e89-9f23-520852e30350",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{count}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"@#$%^&*(\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Partners Parameter Invalid - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "026d03f6-4c99-48c1-a187-e70993c0aec2",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"Order\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "58afeac0-ae8a-438a-b801-2b1515f9dc08",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query partners($input: PartnerListInput!) {\r\n  partners(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      modifiedAt\r\n      types {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      financialReportingTypes {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      pmcEntityCode {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      globalInnovationsClient {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      active {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      address {\r\n        value\r\n        canEdit\r\n        canRead\r\n      }\r\n      organization {\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            value\r\n            canEdit\r\n            canRead\r\n          }\r\n          avatarLetters\r\n        }\r\n        canEdit\r\n        canEdit\r\n      }\r\n      pointOfContact {\r\n        value {\r\n          id\r\n          fullName\r\n          firstName\r\n          avatarLetters\r\n          createdAt\r\n          email {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          realLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayFirstName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          displayLastName {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          phone {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          about {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          status {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          title {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          roles {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n\r\n          timezone {\r\n            canRead\r\n            canEdit\r\n            value {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n                name\r\n                zones {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          unavailabilities {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              description {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              start\r\n              end\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          organizations {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              name {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              avatarLetters\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n          education {\r\n            canRead\r\n            items {\r\n              id\r\n              createdAt\r\n              degree {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              major {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n              institution {\r\n                canRead\r\n                canEdit\r\n                value\r\n              }\r\n            }\r\n            total\r\n            hasMore\r\n            canCreate\r\n          }\r\n        }\r\n\r\n        canEdit\r\n        canRead\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "\r\n{\r\n  \"input\": {\r\n    \"count\": {{count}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"createdAt\",\r\n    \"order\": \"!@#$%\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Partner Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be4f5250-622d-4fa2-ac3c-d53906f384a7",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that partnership is deleted\", function () {",
									"    pm.expect(jsonData.data.deletePartner).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deletePartner($id : ID!){\r\n  deletePartner(id : $id)\r\n}",
								"variables": "{\r\n    \"id\": \"{{partnerid}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Partner Mandatory Field Blank - Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69c87b0d-06ef-4cf4-9c09-ec77a18f558e",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that partnership ID error message is correct\", function () {",
									"    var error_partnershipId = jsonData.errors[0].extensions.errors.id.IsId;",
									"    pm.expect(error_partnershipId).to.eql(\"Invalid ID\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deletePartner($id : ID!){\r\n  deletePartner(id : $id)\r\n}",
								"variables": "{\r\n  \"id\": \"\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Partner Mandatory Field Removed - Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c0acba0-8771-4362-9c33-3fd94e283e90",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deletePartner($id : ID!){\r\n  deletePartner(id : $id)\r\n}",
								"variables": "{\r\n  \r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Partner Parameter Mismatch - Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04fe17fe-a827-4981-bd86-102e9a97a979",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deletePartner($id : ID!){\r\n  deletePartner(id : $id)\r\n}",
								"variables": "{\r\n  \"id1\": \"\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Partner Parameter Invalid - Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fb24e25-d420-47fb-8b18-1d471febe125",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that partnership ID error message is correct\", function () {",
									"    var error_partnershipId = jsonData.errors[0].extensions.errors.id.IsId;",
									"    pm.expect(error_partnershipId).to.eql(\"Invalid ID\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;",
									"    pm.expect(error_status).to.eql(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deletePartner($id : ID!){\r\n  deletePartner(id : $id)\r\n}",
								"variables": "{\r\n  \"id\": \"---- @@@ hhkjh 2323\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"protocolProfileBehavior": {}
}