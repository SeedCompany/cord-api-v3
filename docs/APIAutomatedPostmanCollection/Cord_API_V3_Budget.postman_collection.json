{
	"info": {
		"_postman_id": "4aa94820-0ba4-486f-979d-7d231fea4e8e",
		"name": "Cord_API_V3_Budget",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pre-req ( Session + Register + Login ) for Budget",
			"item": [
				{
					"name": "Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ffc5c086-1148-4b60-bfec-e2c31c088995",
								"exec": [
									"var response = pm.response.json();\r",
									"pm.globals.set(\"token\", response.data.session.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "# Write your query or mutation here\r\nquery {\r\n  session(browser: false) {\r\n    user {\r\n      id,\r\n      email\r\n      {\r\n        value\r\n      }\r\n      realFirstName\r\n      {\r\n        value\r\n      }\r\n      createdAt\r\n      displayLastName\r\n      {\r\n         value\r\n      }\r\n      \r\n      \r\n      \r\n    },\r\n    token\r\n  }\r\n}",
								"variables": ""
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72639ba0-3ce8-495d-adfb-8df0ef29d7b4",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// This is safe check to prevent failing futher cases If the Root User is already Created\r",
									"if (jsonData.errors) {\r",
									"    if (jsonData.errors.length) return;\r",
									"}\r",
									"\r",
									"//Saving data for future use\r",
									"var id = jsonData.data.register.user.id;\r",
									"pm.globals.set(\"userid\", id);\r",
									"\r",
									"var user = JSON.stringify(jsonData.data.register.user);\r",
									"pm.globals.set(\"user_data\", user);\r",
									"\r",
									"var email = jsonData.data.register.user.email.value;\r",
									"pm.globals.set(\"email\", email);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "31433475-9cd9-4e96-9066-9dbd8388b86d",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"realFirstName\", \"FirstName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"realLastName\", \"LastName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"email\", \"email\" + moment().format(\"DDMYYYYhhmmss\") + \"@test.com\");\r",
									"pm.globals.set(\"password\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"displayFirstName\", \"DisplayFirstName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"displayLastName\", \"DisplayLastName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"pm.globals.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));\r",
									"\r",
									"var timezoneObject = {\r",
									"    \"name\": \"Europe/Andorra\",\r",
									"    \"lat\": 42.5,\r",
									"    \"long\": 1.5167,\r",
									"    \"countries\": [\r",
									"        {\r",
									"            \"code\": \"AD\",\r",
									"            \"name\": \"Andorra\",\r",
									"            \"zones\": [\r",
									"                {\r",
									"                    \"name\": \"Europe/Andorra\",\r",
									"                    \"lat\": 42.5,\r",
									"                    \"long\": 1.5167,\r",
									"                    \"countries\": [\r",
									"                        {\r",
									"                            \"code\": \"AD\",\r",
									"                            \"name\": \"Andorra\"\r",
									"                        }\r",
									"                    ]\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ]\r",
									"};\r",
									"pm.globals.set('timezoneObject', JSON.stringify(timezoneObject));\r",
									"pm.globals.set(\"timezone\", timezoneObject.name);\r",
									"\r",
									"pm.globals.set(\"bio\", \"I'm Tester\");\r",
									"\r",
									"// Taking random value for the User status from pre-defined possible values\r",
									"var userStatusArray = ['Active','Disabled'];\r",
									"var randomNumber = Math.floor(Math.random()*userStatusArray.length);\r",
									"// pm.globals.set('userStatus', userStatusArray[randomNumber]);\r",
									"pm.globals.set(\"userStatus\", \"Active\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation register($input: RegisterInput!) {\r\n  register(input: $input) {\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value{\r\n          name\r\n          lat\r\n          long\r\n          countries{\r\n            code\r\n            name\r\n            zones{\r\n              name\r\n              lat\r\n              long\r\n              countries{\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      bio {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n\r\n      unavailabilities {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      organizations {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      education {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          degree {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          major {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          institution {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": \r\n  {\r\n    \"realFirstName\": \"Piyush\",\r\n    \"realLastName\": \"Patel\",\r\n    \"email\" : \"{{login_email}}\",\r\n    \"password\": \"{{login_password}}\",\r\n    \"displayFirstName\": \"{{displayFirstName}}\",\r\n    \"displayLastName\": \"{{displayLastName}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"timezone\": \"{{timezone}}\",\r\n    \"bio\": \"{{bio}}\",\r\n    \"status\": \"{{userStatus}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Root Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f0dfe30-54b7-4b95-8723-45cf6cf1adde",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var id = jsonData.data.login.user.id;",
									"pm.globals.set(\"userid\", id);",
									"",
									"var email = jsonData.data.login.user.email.value;",
									"pm.globals.set(\"email\", email);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "17d80d36-0e95-420f-a9ca-a7ff50e9a856",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($input: LoginInput!) {\r\n  login(input: $input) {\r\n    user {\r\n      id\r\n      fullName\r\n      firstName\r\n      avatarLetters\r\n      createdAt\r\n      email {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      realLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayFirstName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      displayLastName {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      phone {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      timezone {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          name\r\n          lat\r\n          long\r\n          countries {\r\n            code\r\n            name\r\n            zones {\r\n              name\r\n              lat\r\n              long\r\n              countries {\r\n                code\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      bio {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      status {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n\r\n      unavailabilities {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          description {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          start\r\n          end\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      organizations {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n      education {\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          degree {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          major {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          institution {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n        }\r\n        total\r\n        hasMore\r\n        canCreate\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n   \"input\": {\r\n      \"email\": \"{{login_email}}\",\r\n      \"password\": \"{{login_password}}\"\r\n   }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-req for Create Budget ( Create Project )",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f1562f3-54d0-4ba4-94d0-272984a1f6c3",
								"exec": [
									"  var jsonData = pm.response.json();",
									"",
									"  var id = jsonData.data.createProject.project.id;",
									"    pm.globals.set(\"projectid\",id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "872581b9-fa30-4294-8903-bf3ae93c1eac",
								"exec": [
									"const moment = require('moment');\r",
									"pm.globals.set(\"timestamp\", moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"pm.globals.set(\"projectName\", \"ProjectName\" + moment().format(\"DDMYYYYhhmmss\"));\r",
									"\r",
									"// Taking random value for the Project type from pre-defined possible values\r",
									"var projTypeArray = [\r",
									"    'Translation',\r",
									"    'Internship'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random()*projTypeArray.length);\r",
									"pm.globals.set('projectType', projTypeArray[randomNumber]);\r",
									"\r",
									"pm.globals.set('locationId', 'X9uvqqN59EEcyGIw1xHPAOx7dXmYF4GXm20.aGPHWl13lMpmlvvsRADHNQ.Xepq3xRTSQDmV8NR0qDalA');\r",
									"pm.globals.set(\"mouStart\", moment().format(\"YYYY-MM-DD\"))\r",
									"\r",
									"var mouEnd = pm.variables.replaceIn('{{$randomDateFuture}}')\r",
									"pm.globals.set(\"mouEnd\", moment(mouEnd).format(\"YYYY-MM-DD\"));\r",
									"\r",
									"var estimatedSubmissionDate = pm.variables.replaceIn('{{$randomDateFuture}}')\r",
									"pm.globals.set(\"estimatedSubmission\", moment(estimatedSubmissionDate).format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createProject($input: CreateProjectInput!) {\r\n  createProject(input: $input) {\r\n    project {\r\n      id\r\n      createdAt\r\n      type\r\n      sensitivity\r\n      name {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      deptId {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      step {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      status\r\n      location {\r\n        value {\r\n          id\r\n          name {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          region {\r\n            value {\r\n              id\r\n              name {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              zone {\r\n                value {\r\n                  id\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  director {\r\n                    value {\r\n                      id\r\n                      email {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      phone {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      timezone {\r\n                        canRead\r\n                        canEdit\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      bio {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      status {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      unavailabilities {\r\n                        items {\r\n                          id\r\n                          description {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          start\r\n                          end\r\n                          createdAt\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                      }\r\n                      organizations {\r\n                        items {\r\n                          id\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          avatarLetters\r\n                          createdAt\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                      }\r\n                      education {\r\n                        items {\r\n                          id\r\n                          degree {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          major {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          institution {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          createdAt\r\n                        }\r\n                        total\r\n                        hasMore\r\n                        canCreate\r\n                        canRead\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  createdAt\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              director {\r\n                value {\r\n                  id\r\n                  email {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  phone {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  timezone {\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  bio {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  status {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  unavailabilities {\r\n                    items {\r\n                      id\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                  }\r\n                  organizations {\r\n                    items {\r\n                      id\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      avatarLetters\r\n                      createdAt\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                  }\r\n                  education {\r\n                    items {\r\n                      id\r\n                      degree {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      major {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      createdAt\r\n                    }\r\n                    total\r\n                    hasMore\r\n                    canCreate\r\n                    canRead\r\n                  }\r\n                  createdAt\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              createdAt\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          createdAt\r\n        }\r\n        canRead\r\n        canEdit\r\n      }\r\n      mouStart {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      mouEnd {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      estimatedSubmission {\r\n        value\r\n        canRead\r\n        canEdit\r\n      }\r\n      modifiedAt\r\n      avatarLetters\r\n      team {\r\n        total\r\n        hasMore\r\n        canCreate\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          #modifiedAt\r\n          user {\r\n            value {\r\n              id\r\n              createdAt\r\n              email {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              phone {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              timezone {\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              bio {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              status {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              unavailabilities {\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  start\r\n                  end\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n              organizations {\r\n                items {\r\n                  id\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  avatarLetters\r\n                  createdAt\r\n                }\r\n                total\r\n                hasMore\r\n                canCreate\r\n                canRead\r\n              }\r\n              education {\r\n                canRead\r\n                hasMore\r\n                canCreate\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  degree {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  major {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          roles {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n        }\r\n      }\r\n      engagements {\r\n        total\r\n        hasMore\r\n        canCreate\r\n        canRead\r\n        items {\r\n          id\r\n          createdAt\r\n          status\r\n          ceremony {\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n              planned {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              estimatedDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              actualDate {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          completeDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          disbursementCompleteDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          communicationsCompleteDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          startDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          endDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          initialEndDate {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          lastSuspendedAt {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          lastReactivatedAt {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          statusModifiedAt {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          modifiedAt\r\n        }\r\n      }\r\n      budget {\r\n        value {\r\n          id\r\n          createdAt\r\n          status\r\n          records {\r\n            id\r\n            createdAt\r\n            fiscalYear {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            amount {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            organization {\r\n              value {\r\n                id\r\n                createdAt\r\n                name {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                avatarLetters\r\n              }\r\n              canRead\r\n              canEdit\r\n            }\r\n          }\r\n          total\r\n        }\r\n        canRead\r\n        canEdit\r\n      }\r\n      partnerships {\r\n        canRead\r\n        hasMore\r\n        canCreate\r\n        total\r\n        items {\r\n          id\r\n          createdAt\r\n          agreementStatus {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouStatus {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouStart {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mouEnd {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          organization {\r\n            id\r\n            name {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            avatarLetters\r\n            createdAt\r\n          }\r\n          types {\r\n            value\r\n            canRead\r\n            canEdit\r\n          }\r\n          mou {\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n              category\r\n              mimeType\r\n              name\r\n              size\r\n              modifiedAt\r\n              downloadUrl\r\n              createdBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              modifiedBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              children {\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  category\r\n                  name\r\n                  createdBy {\r\n                    id\r\n                    createdAt\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    bio {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    unavailabilities {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  parents {\r\n                    id\r\n                    createdAt\r\n                    type\r\n                    category\r\n                    name\r\n                    parents {\r\n                      id\r\n                      type\r\n                    }\r\n                    createdBy {\r\n                      id\r\n                      createdAt\r\n                      email {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      phone {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      timezone {\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      bio {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      status {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      unavailabilities {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          description {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          start\r\n                          end\r\n                        }\r\n                      }\r\n                      organizations {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          avatarLetters\r\n                        }\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          major {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          institution {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                total\r\n                hasMore\r\n              }\r\n              parents {\r\n                id\r\n                createdAt\r\n                type\r\n                category\r\n                name\r\n                parents {\r\n                  id\r\n                  type\r\n                  # also contains other fields as parent 'Parents'\r\n                }\r\n                createdBy {\r\n                  id\r\n                  createdAt\r\n                  email {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  phone {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  timezone {\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  bio {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  status {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  unavailabilities {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      major {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n          agreement {\r\n            value {\r\n              id\r\n              createdAt\r\n              type\r\n              category\r\n              name\r\n              parents {\r\n                id\r\n                createdAt\r\n                type\r\n                category\r\n                name\r\n                createdBy {\r\n                  id\r\n                  createdAt\r\n                  email {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  realLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayFirstName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  displayLastName {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  phone {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  timezone {\r\n                    value {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                        name\r\n                        zones {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  bio {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  status {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  fullName\r\n                  firstName\r\n                  avatarLetters\r\n                  unavailabilities {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      description {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      start\r\n                      end\r\n                    }\r\n                  }\r\n                  organizations {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      name {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      avatarLetters\r\n                    }\r\n                  }\r\n                  education {\r\n                    canRead\r\n                    hasMore\r\n                    canCreate\r\n                    total\r\n                    items {\r\n                      id\r\n                      createdAt\r\n                      degree {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      major {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      institution {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                parents {\r\n                  id\r\n                  type\r\n                  # also contains other fields as parent 'Parents'\r\n                }\r\n              }\r\n              createdBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              mimeType\r\n              size\r\n              modifiedAt\r\n              modifiedBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              children {\r\n                total\r\n                hasMore\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  type\r\n                  category\r\n                  name\r\n                  createdBy {\r\n                    id\r\n                    createdAt\r\n                    email {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    realLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayFirstName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    displayLastName {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    phone {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    timezone {\r\n                      value {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                          name\r\n                          zones {\r\n                            name\r\n                            lat\r\n                            long\r\n                            countries {\r\n                              code\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    bio {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    status {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    fullName\r\n                    firstName\r\n                    avatarLetters\r\n                    unavailabilities {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        description {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        start\r\n                        end\r\n                      }\r\n                    }\r\n                    organizations {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        name {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        avatarLetters\r\n                      }\r\n                    }\r\n                    education {\r\n                      canRead\r\n                      hasMore\r\n                      canCreate\r\n                      total\r\n                      items {\r\n                        id\r\n                        createdAt\r\n                        degree {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        major {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                        institution {\r\n                          value\r\n                          canRead\r\n                          canEdit\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  parents {\r\n                    id\r\n                    createdAt\r\n                    type\r\n                    category\r\n                    name\r\n                    createdBy {\r\n                      id\r\n                      createdAt\r\n                      email {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      realLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayFirstName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      displayLastName {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      phone {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      timezone {\r\n                        value {\r\n                          name\r\n                          lat\r\n                          long\r\n                          countries {\r\n                            code\r\n                            name\r\n                            zones {\r\n                              name\r\n                              lat\r\n                              long\r\n                              countries {\r\n                                code\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      bio {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      status {\r\n                        value\r\n                        canRead\r\n                        canEdit\r\n                      }\r\n                      fullName\r\n                      firstName\r\n                      avatarLetters\r\n                      unavailabilities {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          description {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          start\r\n                          end\r\n                        }\r\n                      }\r\n                      organizations {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          name {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          avatarLetters\r\n                        }\r\n                      }\r\n                      education {\r\n                        canRead\r\n                        hasMore\r\n                        canCreate\r\n                        total\r\n                        items {\r\n                          id\r\n                          createdAt\r\n                          degree {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          major {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                          institution {\r\n                            value\r\n                            canRead\r\n                            canEdit\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    parents {\r\n                      id\r\n                      type\r\n                      # also contains other fields as parent 'Parents'\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              downloadUrl\r\n            }\r\n            canRead\r\n            canEdit\r\n          }\r\n        }\r\n      }\r\n      rootDirectory {\r\n        canEdit\r\n        canRead\r\n        value {\r\n          id\r\n          createdAt\r\n          type\r\n          category\r\n          name\r\n          parents {\r\n            id\r\n            createdAt\r\n            type\r\n            category\r\n            name\r\n            parents {\r\n              id\r\n              name\r\n              type\r\n              # also contains other fields as parent 'parents'\r\n            }\r\n            createdBy {\r\n              id\r\n              createdAt\r\n              email {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              realLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayFirstName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              displayLastName {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              phone {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              timezone {\r\n                value {\r\n                  name\r\n                  lat\r\n                  long\r\n                  countries {\r\n                    code\r\n                    name\r\n                    zones {\r\n                      name\r\n                      lat\r\n                      long\r\n                      countries {\r\n                        code\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                canRead\r\n                canEdit\r\n              }\r\n              bio {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              status {\r\n                value\r\n                canRead\r\n                canEdit\r\n              }\r\n              fullName\r\n              firstName\r\n              avatarLetters\r\n              unavailabilities {\r\n                canRead\r\n                hasMore\r\n                canCreate\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  description {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  start\r\n                  end\r\n                }\r\n              }\r\n              organizations {\r\n                canRead\r\n                hasMore\r\n                canCreate\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  name {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  avatarLetters\r\n                }\r\n              }\r\n              education {\r\n                canRead\r\n                hasMore\r\n                canCreate\r\n                total\r\n                items {\r\n                  id\r\n                  createdAt\r\n                  degree {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  major {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                  institution {\r\n                    value\r\n                    canRead\r\n                    canEdit\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          createdBy {\r\n            id\r\n            createdAt\r\n            email {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            realFirstName {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            realLastName {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            displayFirstName {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            displayLastName {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            phone {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            timezone {\r\n              value {\r\n                name\r\n                lat\r\n                long\r\n                countries {\r\n                  code\r\n                  name\r\n                  zones {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              canRead\r\n              canEdit\r\n            }\r\n            bio {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            status {\r\n              value\r\n              canRead\r\n              canEdit\r\n            }\r\n            fullName\r\n            firstName\r\n            avatarLetters\r\n            unavailabilities {\r\n              canRead\r\n              hasMore\r\n              canCreate\r\n              total\r\n              items {\r\n                id\r\n                createdAt\r\n                description {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                start\r\n                end\r\n              }\r\n            }\r\n            organizations {\r\n              canRead\r\n              hasMore\r\n              canCreate\r\n              total\r\n              items {\r\n                id\r\n                createdAt\r\n                name {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                avatarLetters\r\n              }\r\n            }\r\n            education {\r\n              canRead\r\n              hasMore\r\n              canCreate\r\n              total\r\n              items {\r\n                id\r\n                createdAt\r\n                degree {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                major {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                institution {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n              }\r\n            }\r\n          }\r\n          children {\r\n            total\r\n            hasMore\r\n            items {\r\n              id\r\n              createdAt\r\n              type\r\n              category\r\n              name\r\n              createdBy {\r\n                id\r\n                createdAt\r\n                email {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                realLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayFirstName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                displayLastName {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                phone {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                timezone {\r\n                  value {\r\n                    name\r\n                    lat\r\n                    long\r\n                    countries {\r\n                      code\r\n                      name\r\n                      zones {\r\n                        name\r\n                        lat\r\n                        long\r\n                        countries {\r\n                          code\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                bio {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                status {\r\n                  value\r\n                  canRead\r\n                  canEdit\r\n                }\r\n                fullName\r\n                firstName\r\n                avatarLetters\r\n                unavailabilities {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    description {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    start\r\n                    end\r\n                  }\r\n                }\r\n                organizations {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    name {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    avatarLetters\r\n                  }\r\n                }\r\n                education {\r\n                  canRead\r\n                  hasMore\r\n                  canCreate\r\n                  total\r\n                  items {\r\n                    id\r\n                    createdAt\r\n                    degree {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    major {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                    institution {\r\n                      value\r\n                      canRead\r\n                      canEdit\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              parents {\r\n                id\r\n                type\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"project\": {\r\n      \"name\": \"{{projectName}}\",\r\n      \"type\": \"{{projectType}}\",\r\n      \"mouStart\": \"{{mouStart}}\",\r\n      \"mouEnd\": \"{{mouEnd}}\",\r\n      \"estimatedSubmission\": \"{{estimatedSubmission}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "40d5a439-e4ce-409f-ac0a-426b085d6cc1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "87e89903-ed1a-4b24-9a02-94fcda225d65",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Budget",
			"item": [
				{
					"name": "Create Budget Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0441bb0-44da-4820-9c56-94b3e73dd1b1",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that budget ID is not blank or null\", function () {",
									"    var id = jsonData.data.createBudget.budget.id;  ",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"",
									"    // Saving data for future use",
									"    pm.globals.set(\"budgetid\",id);",
									"});",
									"",
									"// Saving whole budget Object to globals for future use",
									"var budget = JSON.stringify(jsonData.data.createBudget.budget);",
									"pm.globals.set(\"budget_data\",budget);",
									"",
									"pm.test(\"Verify that status is Pending\", function () {",
									"    var status = jsonData.data.createBudget.budget.status;",
									"    pm.expect(status).to.eql('Pending');",
									"});",
									"",
									"pm.test(\"Verify that team total is 0\", function () {",
									"    var total = jsonData.data.createBudget.budget.total;",
									"    pm.expect(total).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "616e83dc-a87f-4555-9de4-1567fb46a594",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createBudget($input: CreateBudgetInput!) {\r\n  createBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"projectId\": \"{{projectid}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Budget Mandatory Field Blank - projectId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b534eca5-fbea-4582-b1b6-7f97909b279f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that minLength message is correct\", function () {",
									"    var minLength_message = jsonData.errors[0].extensions.errors['budget.projectId'].IsShortId;  ",
									"    pm.expect(minLength_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d98e1db7-a422-4d93-85bc-71a10aebbe48",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createBudget($input: CreateBudgetInput!) {\r\n  createBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"projectId\": \"\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Budget Mandatory Field Removed - projectId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "181c2c81-c55b-4ad9-86b0-119611bd8405",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"projectId\\\" of required type \\\"ID!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "60eb8e50-4a1f-4439-b75a-b28285a6b840",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createBudget($input: CreateBudgetInput!) {\r\n  createBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Budget Parameter Mismatch - projectId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b6dba6b-895c-4e15-bcbc-7b28bb08302c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"projectId\\\" of required type \\\"ID!\\\" was not provided.\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8d328e35-7a4b-4eba-87e0-25f4c61ae9a1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createBudget($input: CreateBudgetInput!) {\r\n  createBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"projectId1\": \"\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Budget Parameter - Invalid - projectId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b901251b-87d7-4147-ba08-a682b19f430c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that minLength message is correct\", function () {",
									"    var minLength_message = jsonData.errors[0].extensions.errors['budget.projectId'].IsShortId;  ",
									"    pm.expect(minLength_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a5083ab5-a303-43a0-8f6c-b545ecf0a646",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createBudget($input: CreateBudgetInput!) {\r\n  createBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"projectId\": \"!@#$%^r5111111111111111111155*\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Budget by ID success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a888127-abbf-4a75-8fee-7348349dad93",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"var budget_data = JSON.parse(pm.variables.get(\"budget_data\"));",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that budget ID is not blank or null\", function () {",
									"    var id = jsonData.data.budget.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									"",
									"// Verifying returned budget info with recently stored budget info",
									"pm.test(\"Verifying budget ID\", function () {",
									"    var id = jsonData.data.budget.id;",
									"    pm.expect(id).to.eql(budget_data.id);",
									"});",
									"",
									"pm.test(\"Verifying budget's createdAt\", function () {",
									"    var createdAt = jsonData.data.budget.createdAt;",
									"    pm.expect(createdAt).to.eql(budget_data.createdAt);",
									"});",
									"",
									"pm.test(\"Verifying budget status\", function () {",
									"    var status = jsonData.data.budget.status;",
									"    pm.expect(status).to.eql(budget_data.status);",
									"});",
									"",
									"pm.test(\"Verifying total\", function () {",
									"    var total = jsonData.data.budget.total;",
									"    pm.expect(total).to.eql(budget_data.total);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "604e6c54-6feb-4bad-9fcb-c9f28d12743a",
								"exec": [
									"pm.globals.set(\"count\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('sort', \"status\");\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query budget($id: ID!) {\r\n  budget(id: $id) {\r\n    id\r\n    createdAt\r\n    status\r\n    total\r\n    records {\r\n      id\r\n      createdAt\r\n      fiscalYear {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      amount {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      organization {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"{{budgetid}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Budget by ID Mandatory Field Blank- id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95debb0c-8940-44d5-b541-003e4eed1e3e",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that budget error message is correct\", function () {",
									"    var error_budget_message = jsonData.errors[0].extensions.errors.id.IsShortId;  ",
									"    pm.expect(error_budget_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "89e98ad8-5720-4481-8c3d-dbebb7d865f7",
								"exec": [
									"pm.globals.set(\"count\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('sort', \"status\");\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query budget($id: ID!) {\r\n  budget(id: $id) {\r\n    id\r\n    createdAt\r\n    status\r\n    total\r\n    records {\r\n      id\r\n      createdAt\r\n      fiscalYear {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      amount {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      organization {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Budget by ID Parameter Mismatch - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca7e9dee-dd56-4dc9-a751-f6de30636507",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "67d8f770-6830-46c6-9517-df6dc26346e1",
								"exec": [
									"pm.globals.set(\"count\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('sort', \"status\");\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query budget($id: ID!) {\r\n  budget(id: $id) {\r\n    id\r\n    createdAt\r\n    status\r\n    total\r\n    records {\r\n      id\r\n      createdAt\r\n      fiscalYear {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      amount {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      organization {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id1\": \"{{budgetid}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Budget by ID Parameter Invalid - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7dc15a27-af06-43ca-962f-4b7dc8797ff0",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that budget error message is correct\", function () {",
									"    var error_budget_message = jsonData.errors[0].extensions.errors.id.IsShortId;  ",
									"    pm.expect(error_budget_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "421d98d6-8a53-4f5f-a85e-9a820b6d5b9c",
								"exec": [
									"pm.globals.set(\"count\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('sort', \"status\");\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query budget($id: ID!) {\r\n  budget(id: $id) {\r\n    id\r\n    createdAt\r\n    status\r\n    total\r\n    records {\r\n      id\r\n      createdAt\r\n      fiscalYear {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      amount {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      organization {\r\n        canRead\r\n        canEdit\r\n        value {\r\n          id\r\n          createdAt\r\n          name {\r\n            canRead\r\n            canEdit\r\n            value\r\n          }\r\n          avatarLetters\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"^^ ** )) $%^ \"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Budget Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a620bee2-ce19-4f88-a31a-1487498293c5",
								"exec": [
									"var jsonData = pm.response.json();",
									"const moment = require('moment');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that budget ID is not blank or null\", function () {",
									"    var id = jsonData.data.updateBudget.budget.id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"",
									"    // Saving data for future use",
									"    var id = jsonData.data.updateBudget.budget.id;",
									"    pm.globals.set(\"budgetid\", id);",
									"});",
									"",
									"// Saving whole budget Object to globals for future use",
									"var budget = JSON.stringify(jsonData.data.updateBudget.budget);",
									"pm.globals.set(\"budget_data\", budget);",
									"",
									"pm.test(\"Verify that budget is updated exactly for requested ID\", function () {",
									"    var id = jsonData.data.updateBudget.budget.id;",
									"    pm.expect(id).to.eql(pm.globals.get('budgetid'));",
									"});",
									"",
									"pm.test(\"Verify that budget status is as requested status \", function () {",
									"    var status = jsonData.data.updateBudget.budget.status;",
									"    pm.expect(status).to.eql(pm.globals.get('budgetStatus'));",
									"});",
									"",
									"pm.test(\"Verify that team total is 0\", function () {",
									"    var total = jsonData.data.updateBudget.budget.total;",
									"    pm.expect(total).to.eql(0);",
									"});",
									"",
									"pm.test(\"Verify that budget's createdAt is in Specific time format\", function () {",
									"    var time = jsonData.data.updateBudget.budget.createdAt;",
									"    var isValidTime = moment(time, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid();",
									"    pm.expect(isValidTime).to.eql(true);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3ed908b1-05b2-416a-b22a-a870fa390158",
								"exec": [
									"var optionsArray = [\r",
									"    'Pending',\r",
									"    'Current',\r",
									"    'Superceded',\r",
									"    'Rejected'\r",
									"];\r",
									"var randomNumber = Math.floor(Math.random()*optionsArray.length);\r",
									"pm.globals.set('budgetStatus', optionsArray[randomNumber]);\r",
									"//pm.globals.set('budgetStatus', \"Superceded\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBudget($input: UpdateBudgetInput!) {\r\n  updateBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"id\": \"{{budgetid}}\",\r\n      \"status\": \"{{budgetStatus}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Budget Mandatory Field Removed - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e6a8d3f-0e35-4489-b3fa-b59c59917ee8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"id\\\" of required type \\\"ID!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBudget($input: UpdateBudgetInput!) {\r\n  updateBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n     \r\n      \"status\": \"{{budgetStatus}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Budget Mandatory Field Blank - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf4ec9a8-b95f-454e-bc4f-2f15106cd895",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that minLength message is correct\", function () {",
									"    var minLength_message = jsonData.errors[0].extensions.errors['budget.id'].IsShortId;  ",
									"    pm.expect(minLength_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBudget($input: UpdateBudgetInput!) {\r\n  updateBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"id\": \"\",\r\n      \"status\": \"{{budgetStatus}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Budget Mandatory Field Removed - status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5b838e8-4ddc-4317-aa0a-a6c37971427f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"status\\\" of required type \\\"BudgetStatus!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBudget($input:UpdateBudgetInput!)\r\n{\r\n  updateBudget(input:$input)\r\n  {\r\n    budget\r\n    {\r\n      id\r\n      createdAt\r\n      status\r\n      records\r\n    {\r\n      id\r\n      createdAt\r\n      fiscalYear\r\n      {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      amount\r\n      {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      organization\r\n      {\r\n        canRead\r\n        canEdit\r\n        value\r\n        {\r\n          id\r\n          createdAt\r\n          name\r\n         {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n          avatarLetters\r\n        }\r\n      }\r\n    }\r\n      total\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"id\": \"{{budgetid}}\"\r\n      \r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Budget Mandatory Field Blank - status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d43832f6-a318-4d97-8dd5-ff03481ec106",
								"exec": [
									"var jsonData = pm.response.json();",
									"var user_data = JSON.parse(pm.variables.get(\"user_data\"));",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"BudgetStatus\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_message = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_message).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBudget($input:UpdateBudgetInput!)\r\n{\r\n  updateBudget(input:$input)\r\n  {\r\n    budget\r\n    {\r\n      id\r\n      createdAt\r\n      status\r\n      records\r\n    {\r\n      id\r\n      createdAt\r\n      fiscalYear\r\n      {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      amount\r\n      {\r\n        canRead\r\n        canEdit\r\n        value\r\n      }\r\n      organization\r\n      {\r\n        canRead\r\n        canEdit\r\n        value\r\n        {\r\n          id\r\n          createdAt\r\n          name\r\n         {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n          avatarLetters\r\n        }\r\n      }\r\n    }\r\n      total\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"id\": \"{{budgetid}}\",\r\n      \"status\": \"\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Budget Parameter Mismatch - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7574d5f2-d0bd-4973-b40d-288d2247468b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"id\\\" of required type \\\"ID!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBudget($input: UpdateBudgetInput!) {\r\n  updateBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"id1\": \"{{budgetid}}\",\r\n      \"status\": \"\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Budget Parameter Mismatch - status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03a43bb3-f4ce-4c46-b37c-1c31067108ce",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Field \\\"status\\\" of required type \\\"BudgetStatus!\\\" was not provided\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBudget($input: UpdateBudgetInput!) {\r\n  updateBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"id\": \"{{budgetid}}\",\r\n      \"status1\": \"{{budgetStatus}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Budget Parameter - Invalid - Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed5a717c-40a2-44c5-b393-6ad20d5c99f3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that minLength message is correct\", function () {",
									"    var minLength_message = jsonData.errors[0].extensions.errors['budget.id'].IsShortId;  ",
									"    pm.expect(minLength_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBudget($input: UpdateBudgetInput!) {\r\n  updateBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"id\": \"!@#$%^&*()\",\r\n      \"status\": \"{{budgetStatus}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Budget Parameter - Invalid - Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "badb4d31-b1b2-4687-ae26-e21049a6d1dd",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"BudgetStatus\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBudget($input: UpdateBudgetInput!) {\r\n  updateBudget(input: $input) {\r\n    budget {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"budget\": {\r\n      \"id\": \"{{budgetid}}\",\r\n      \"status\": \"!@#$%^&*()\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Budgets Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8391c85-ad70-46c9-9f83-da54f587b57f",
								"exec": [
									"var jsonData = pm.response.json();",
									"var budget_data = JSON.parse(pm.variables.get(\"budget_data\")); // Get stored budget object",
									"const moment = require('moment');",
									"var lodash = require('lodash');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - Pagination",
									"pm.test(\"Verify that total is greater than Zero\", function () {",
									"    var total = jsonData.data.budgets.total;",
									"    pm.expect(total).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Verify that hasMore is correct\", function () {",
									"    var total = jsonData.data.budgets.total;",
									"    var hasMore = jsonData.data.budgets.hasMore;",
									"    if (Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) < total) {",
									"        pm.expect(hasMore).to.eql(true);",
									"    } else {",
									"        pm.expect(hasMore).to.eql(false);",
									"    }",
									"});",
									"",
									"pm.test(\"Verify that number of items returned are exact\", function () {",
									"    var total = jsonData.data.budgets.total;                  // total returned in response",
									"    var returneditems = jsonData.data.budgets.items.length;   // no. of items returned in response array",
									"    var itemCount = Number(pm.globals.get('itemCount'));    // no. of items per page",
									"    var page = Number(pm.globals.get('page'));              // page number",
									"    var expectedItems = itemCount * page;                   // items we are expecting",
									"",
									"    if (expectedItems <= total) {",
									"        pm.expect(returneditems).to.eql(itemCount);",
									"    } else {",
									"        if ((expectedItems - total) < itemCount) {",
									"            var lastItems = total - ((itemCount * (page - 1)));   // items in last page",
									"            pm.expect(returneditems).to.eql(lastItems);",
									"        }",
									"    }",
									"});",
									"",
									"",
									"// SORTING AND FILTER TESTS",
									"pm.test(\"Verify that items are sorted by 'status' and ordered by requested order \", function () {",
									"",
									"    var responseBody = jsonData.data.budgets.items;",
									"    if (pm.globals.get('order') == \"ASC\") {",
									"        var expectedSortedOrder = lodash.orderBy(responseBody, ['status'], ['asc']);",
									"        pm.expect(responseBody).to.eql(expectedSortedOrder);",
									"    } else {",
									"        var expectedSortedOrder = lodash.orderBy(responseBody, ['status'], ['desc']);",
									"        pm.expect(responseBody).to.eql(expectedSortedOrder);",
									"    }",
									"",
									"});",
									"",
									"/**",
									" * Setting up 'page' number to be used in next request",
									" * For locating recently created Object position on Specific page",
									" */",
									"var total = jsonData.data.budgets.total;",
									"var itemCount = Number(pm.globals.get('itemCount'));",
									"",
									"if (total > itemCount) {",
									"",
									"    if ((total % itemCount) == 0) {",
									"        var pageToset = total / itemCount;",
									"        pm.globals.set(\"page\", pageToset);",
									"    } else {",
									"        var pageToset = Math.floor(total / itemCount) + 1;",
									"        pm.globals.set(\"page\", pageToset);",
									"    }",
									"",
									"} else {",
									"    pm.globals.set(\"page\", 1);  // Set page to 1 if total <= itemCount",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e43a73dc-3618-43bd-be77-52915e2cf174",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query budgets($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Budgets Success - item Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92a26e5e-146c-411d-a469-1978fd5eb80e",
								"exec": [
									"var jsonData = pm.response.json();",
									"var budget_data = JSON.parse(pm.variables.get(\"budget_data\")); // Get stored budget object",
									"const moment = require('moment');",
									"var lodash = require('lodash');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - Pagination",
									"pm.test(\"Verify that total is greater than Zero\", function () {",
									"    var total = jsonData.data.budgets.total;",
									"    pm.expect(total).to.be.above(0);",
									"});",
									"",
									"// Verifying recently created budget's information with budget object returned within items array",
									"",
									"// get Budget object first having same id as recently created Budget's id",
									"var myBudget = lodash.find(jsonData.data.budgets.items, ['id', budget_data.id]);",
									"",
									"// if (myBudget == undefined) return; // Safe to return if recent budget is not within first page",
									"",
									"pm.test(\"Verifying budget ID\", function () {",
									"    var id = myBudget.id;",
									"    pm.expect(id).to.eql(budget_data.id);",
									"});",
									"",
									"pm.test(\"Verifying budget's createdAt\", function () {",
									"    var createdAt = myBudget.createdAt;",
									"    pm.expect(createdAt).to.eql(budget_data.createdAt);",
									"});",
									"",
									"pm.test(\"Verifying budget status\", function () {",
									"    var status = myBudget.status;",
									"    pm.expect(status).to.eql(budget_data.status);",
									"});",
									"",
									"pm.test(\"Verifying budget total\", function () {",
									"    var total = myBudget.total;",
									"    pm.expect(total).to.eql(budget_data.total);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "18673c51-c12e-4a4c-a8e2-08232ad142ce",
								"exec": [
									"pm.globals.set(\"itemCount\",25);\r",
									"// Page is set from previous request test script based on total\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query budgets($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Budgets Success - total",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3b7f382-bd0c-480d-bd8e-ca818a74a95d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - total",
									"pm.test(\"Verify that total is greater than Zero\", function () {",
									"    var total = jsonData.data.budgets.total;  ",
									"    pm.expect(total).to.be.above(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d5c857a5-5436-49ec-8817-e0d042f8a9e6",
								"exec": [
									"pm.globals.set(\"itemCount\",10);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Budgets Success - hasMore - True",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "127d741f-b305-450e-b75c-3eb253ffac5d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - hasMore",
									"pm.test(\"Verify that hasMore is true Only when budget items are still available\", function () {",
									"    var total = jsonData.data.budgets.total;",
									"    var hasMore = jsonData.data.budgets.hasMore;  ",
									"    if(Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) < total){",
									"        pm.expect(hasMore).to.eql(true);",
									"    } else {",
									"        pm.expect(hasMore).to.eql(false);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fd1461fb-9e04-49a3-b461-0ea18d107222",
								"exec": [
									"pm.globals.set(\"itemCount\",2);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Budgets Success - hasMore - False",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45fde6d4-838b-4cf2-a7dd-06aa2c23e37f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - hasMore",
									"pm.test(\"Verify that hasMore is false Only when no more budget items available\", function () {",
									"    var total = jsonData.data.budgets.total;",
									"    var hasMore = jsonData.data.budgets.hasMore;  ",
									"    if(Number(pm.globals.get('itemCount')) * Number(pm.globals.get('page')) >= total){",
									"        pm.expect(hasMore).to.eql(false);",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4c12dcfc-b28d-4464-8690-ecd94ea7d53b",
								"exec": [
									"pm.globals.set(\"itemCount\",100);\r",
									"pm.globals.set(\"page\",88);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Budgets Success - items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17c5e6c0-ce4e-4a76-a7dd-7190f166a8eb",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - items",
									"pm.test(\"Verify that number of items returned are exact\", function () {",
									"    var total = jsonData.data.budgets.total;                  // total returned in response",
									"    var returneditems = jsonData.data.budgets.items.length;   // no. of items returned in response array",
									"    var itemCount = Number(pm.globals.get('itemCount'));    // no. of items per page",
									"    var page = Number(pm.globals.get('page'));              // page number",
									"    var expectedItems = itemCount * page;                   // items we are expecting",
									"",
									"    if (expectedItems <= total) {",
									"        pm.expect(returneditems).to.eql(itemCount);",
									"    } else {",
									"        if ((expectedItems - total) < itemCount) {",
									"            var lastItems = total - ((itemCount * (page - 1)));   // items in last page",
									"            pm.expect(returneditems).to.eql(lastItems);",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b82961e9-8059-42b6-bf0e-94d3bd6463d2",
								"exec": [
									"pm.globals.set(\"itemCount\",10);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Budget Success - status sorting ASC",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52d50a51-62cd-4eec-b45d-8d811e46192c",
								"exec": [
									"var jsonData = pm.response.json();",
									"var lodash = require('lodash');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - Ordered by ASC",
									"pm.test(\"Verify that items are sorted by 'status' and ordered by 'ASC'\", function () {",
									"    var responseBody = jsonData.data.budgets.items;",
									"    var expectedSortedOrder = lodash.orderBy(responseBody,['status'],['asc'])",
									"    pm.expect(responseBody).to.eql(expectedSortedOrder);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e756aa0b-157d-431d-9ae8-27675b0e3635",
								"exec": [
									"pm.globals.set(\"itemCount\",10);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"ASC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Budget Success - status sorting DESC",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e3c68c4-f761-4393-a9c7-fa282f2fdb05",
								"exec": [
									"var jsonData = pm.response.json();",
									"var lodash = require('lodash');",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific - Ordered by DESC",
									"pm.test(\"Verify that items are sorted by 'status' and ordered by 'DESC'\", function () {",
									"    var responseBody = jsonData.data.budgets.items;",
									"    var expectedSortedOrder = lodash.orderBy(responseBody,['status'],['desc'])",
									"    pm.expect(responseBody).to.eql(expectedSortedOrder);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "53333801-cc35-4353-94b7-145ddb8b9589",
								"exec": [
									"pm.globals.set(\"itemCount\",10);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Success - Only Required Inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b2d9362-0d0d-47d3-9036-6039597fef09",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that total is greater than Zero\", function () {",
									"    var total = jsonData.data.budgets.total;",
									"    pm.expect(total).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Verify that budget ID is not blank or null\", function () {",
									"    var id = jsonData.data.budgets.items[0].id;",
									"    pm.expect(id).to.not.eql(null);",
									"    pm.expect(id).to.not.eql(\"\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c416bd84-fee2-42bf-a4bd-2fbfc6ce2524",
								"exec": [
									"pm.globals.set(\"itemCount\",10);\r",
									"pm.globals.set(\"page\",1);\r",
									"pm.globals.set('order', \"DESC\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query budgets($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}}\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Not Mandatory Field Removed - count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bdc9486e-0e44-4a04-8895-6aa1bef169ea",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that number of items returned is equal to total\", function () {",
									"    var total = jsonData.data.budgets.total;",
									"    var items = jsonData.data.budgets.items.length;",
									"    if (total <= 25)    // 25 is maximum db items limit returned per page when count is not specified",
									"        pm.expect(items).to.eql(total);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ae113ce4-4fed-4b63-a0bc-058d80ca91b0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Not Mandatory Field Blank - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "beef066a-7a25-4a8c-96d3-8caca4ceedce",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"PENDING >> Similar to BUG #776(closed-Sprint 13) for Users (Sort Field allows empty value/unusual characters)\", function () {",
									"",
									"    if (jsonData.data) {",
									"        pm.expect(\"BACKEND\").to.eql(\"PENDING\"); // fail forcefully",
									"    } else {",
									"        pm.expect(\"WRITE TEST CASES\").to.eql(\"ERRORS >>> \" + jsonData.errors[0].message);",
									"    }",
									"});",
									"// pm.test(\"Verify that error message is correct\", function () {",
									"//     var error_message = jsonData.errors[0].message;  ",
									"//     pm.expect(error_message).to.include(\"Invalid input\");",
									"// });",
									"",
									"// pm.test(\"Verify that error status is 500\", function () {",
									"//     var error_status = jsonData.errors[0].extensions.status;  ",
									"//     pm.expect(error_status).to.eql(500);",
									"// });",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "78938e0c-04c8-46b7-94e6-566cbfd3906d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Not Mandatory Field Blank - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e0630a5-6ef7-4155-aef0-02abaf37e113",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"Order\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d81ceff3-8fa6-4a30-968c-fb4b02653c0f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"\",\r\n    \"filter\": {\r\n      \"projectId\": \"{{projectid}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Parameter Mismatch - count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c4712ec-d926-4534-9957-051777b3b4df",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"BudgetListInput\\\". Did you mean \\\"count\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1315c1b6-0cd3-48c9-9ddb-87bf673ef21e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count1\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"projectId\": \"{{projectid}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Parameter Mismatch - page",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0919aaff-2dc1-472d-98fe-1ce17c323811",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"BudgetListInput\\\". Did you mean \\\"page\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3d618b02-57c5-492c-afb1-8ad0d7f2aa36",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page1\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"projectId\": \"{{projectid}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Parameter Mismatch - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5495574-b090-4263-9b52-ac83b5c86805",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"BudgetListInput\\\". Did you mean \\\"sort\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9606ba97-5ad9-4342-b3a8-0b7e7aeaf386",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort1\": \"status\",\r\n    \"order\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"projectId\": \"{{projectid}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Parameter Mismatch - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95c338fd-8de2-4c13-b224-53d842b8b8e3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"is not defined by type \\\"BudgetListInput\\\". Did you mean \\\"order\\\"?\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5ab86822-ccb0-442e-8bfd-d200998cb486",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{itemCount}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order1\": \"{{order}}\",\r\n    \"filter\": {\r\n      \"projectId\": \"{{projectid}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Parameter Invalid - count min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d6e1e50-7953-4537-bd8a-55360f7195b0",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that count error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].extensions.errors.count.min;  ",
									"    pm.expect(error_message).to.eql(\"count must not be less than 1\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0b24a978-5b55-4758-b191-60b1ecfc214e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": 0,\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Parameter Invalid - count max",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab3d195b-64b4-4bf7-b755-be6d0acdd95f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that count error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].extensions.errors.count.max;  ",
									"    pm.expect(error_message).to.eql(\"count must not be greater than 100\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e967ff93-943b-49a4-a5dc-513e0bde74e7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": 159,\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Parameter Invalid - page",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5bf7a523-6d6c-4578-a585-759b1d15855a",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that page error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].extensions.errors.page.min;  ",
									"    pm.expect(error_message).to.eql(\"page must not be less than 1\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "10fbb60a-337a-437e-be57-caa7a5c2f3a8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{count}},\r\n    \"page\": 0,\r\n    \"sort\": \"status\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Parameter Invalid - sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71e0d141-27ba-413e-b5ec-cde5cdac1e4b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"PENDING >> Similar to BUG #776(closed-Sprint 13) for Users (Sort Field allows empty value/unusual characters)\", function () {",
									"",
									"    if (jsonData.data) {",
									"        pm.expect(\"BACKEND\").to.eql(\"PENDING\"); // fail forcefully",
									"    } else {",
									"        pm.expect(\"WRITE TEST CASES\").to.eql(\"ERRORS >>> \" + jsonData.errors[0].message);",
									"    }",
									"});",
									"",
									"// pm.test(\"Verify that error message is correct\", function () {",
									"//     var error_message = jsonData.errors[0].message;  ",
									"//     pm.expect(error_message).to.include(\"expected whitespace, comment or\");",
									"// });",
									"",
									"// pm.test(\"Verify that error code is InternalServerError\", function () {",
									"//     var error_code = jsonData.errors[0].extensions.code;  ",
									"//     pm.expect(error_code).to.eql(\"InternalServerError\");",
									"// });",
									"",
									"// pm.test(\"Verify that error status is 500\", function () {",
									"//     var error_status = jsonData.errors[0].extensions.status;  ",
									"//     pm.expect(error_status).to.eql(500);",
									"// });",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "de94d539-433f-4687-8469-393993572db7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{count}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"qqq\",\r\n    \"order\": \"{{order}}\"\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Budgets Parameter Invalid - order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c84cf4a8-0738-47e4-bd65-1d4e5608ab7c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"does not exist in \\\"Order\\\" enum\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c57eb1a7-0420-4b9d-aa7a-6362e392ecd9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($input: BudgetListInput!) {\r\n  budgets(input: $input) {\r\n    total\r\n    hasMore\r\n    items {\r\n      id\r\n      createdAt\r\n      status\r\n      total\r\n      records {\r\n        id\r\n        createdAt\r\n        fiscalYear {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        amount {\r\n          canRead\r\n          canEdit\r\n          value\r\n        }\r\n        organization {\r\n          canRead\r\n          canEdit\r\n          value {\r\n            id\r\n            createdAt\r\n            name {\r\n              canRead\r\n              canEdit\r\n              value\r\n            }\r\n            avatarLetters\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"count\": {{count}},\r\n    \"page\": {{page}},\r\n    \"sort\": \"status\",\r\n    \"order\": \"^^4##!!(())\",\r\n    \"filter\": {\r\n      \"projectId\": \"{{projectid}}\"\r\n    }\r\n  }\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Budget success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c62f4037-6cba-464e-b294-6d4a976e0fb0",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that budget is deleted\", function () {",
									"    pm.expect(jsonData.data.deleteBudget).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteBudget($id:ID!)\r\n{\r\n  deleteBudget(id:$id)\r\n}",
								"variables": "\r\n    {\r\n      \"id\": \"{{budgetid}}\"\r\n    }"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Budget Mandatory Field Blank - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68c81c3c-e5ff-4c97-bf5b-e8f76413150e",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is 400\", function () {",
									"    var error_message = jsonData.errors[0].message;",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that budget error message is correct\", function () {",
									"    var error_budget_message = jsonData.errors[0].extensions.errors.id.IsShortId;",
									"    pm.expect(error_budget_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteBudget($id:ID!)\r\n{\r\n  deleteBudget(id:$id)\r\n}",
								"variables": "{\r\n  \"id\": \"\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Budget Mandatory Field Removed - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54618bf3-d99e-42e2-8485-60480a2a48dc",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.include(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteBudget($id:ID!)\r\n{\r\n  deleteBudget(id:$id)\r\n}",
								"variables": "{\r\n  \r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Budget Parameter Mismatch - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52965e70-6300-49b8-b3f0-4196243a0da1",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 400 Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is correct\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\");",
									"});",
									"",
									"pm.test(\"Verify that error code is INTERNAL_SERVER_ERROR\", function () {",
									"    var error_code = jsonData.errors[0].extensions.code;  ",
									"    pm.expect(error_code).to.eql(\"INTERNAL_SERVER_ERROR\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteBudget($id:ID!)\r\n{\r\n  deleteBudget(id:$id)\r\n}",
								"variables": "{\r\n  \"id1\": \"{{budgetid}}\"\r\n}"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Budget Parameter - Invalid - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "531b8047-3a25-45f4-abea-c8ea28a7fdac",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//Common Verification",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.globals.get('responseTime')));",
									"});",
									"",
									"//Test Specific",
									"pm.test(\"Verify that error message is 400\", function () {",
									"    var error_message = jsonData.errors[0].message;  ",
									"    pm.expect(error_message).to.eql(\"Input validation failed\");",
									"});",
									"",
									"pm.test(\"Verify that error status is 400\", function () {",
									"    var error_status = jsonData.errors[0].extensions.status;  ",
									"    pm.expect(error_status).to.eql(400);",
									"});",
									"",
									"pm.test(\"Verify that budget error message is correct\", function () {",
									"    var error_budget_message = jsonData.errors[0].extensions.errors.id.IsShortId;  ",
									"    pm.expect(error_budget_message).to.eql(\"Invalid ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteBudget($id:ID!)\r\n{\r\n  deleteBudget(id:$id)\r\n\r\n}",
								"variables": "\r\n    {\r\n      \"id\": \"!@#$%^&*()\"\r\n    }"
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{env}}/graphql",
							"host": [
								"{{env}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"protocolProfileBehavior": {}
}