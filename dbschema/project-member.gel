module Project {
  type Member extending Child {
    required user: default::User {
      readonly := true;
      on target delete delete source;
    };
    constraint exclusive on ((.project, .user));
    
    multi roles: default::Role;

    active := not exists .inactiveAt; 

    inactiveAt: datetime;
    trigger enforceValidDates after update for each do (
      assert(
        __new__.inactiveAt >= __new__.createdAt
          or not exists __new__.inactiveAt, # allow clearing
        message := "Inactive point must be after the created point"
      )
    );
  }
}
