// GENERATED by @gel/generate v0.6.2

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _default from "./default";
import type * as _std from "./std";
export type $TemporalλShape = $.typeutil.flatten<_default.$MediaλShape & {
  "duration": $.PropertyDesc<_std.$int32, $.Cardinality.One, false, false, false, false>;
}>;
type $Temporal = $.ObjectType<"Media::Temporal", $TemporalλShape, null, [
  ..._default.$Media['__exclusives__'],
], "Media::Audio" | "Media::Video">;
const $Temporal = $.makeType<$Temporal>(_.spec, "1c6d69ae-0670-11f0-a150-fb0856212a44", _.syntax.literal);

const Temporal: $.$expr_PathNode<$.TypeSet<$Temporal, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Temporal, $.Cardinality.Many), null);

export type $AudioλShape = $.typeutil.flatten<$TemporalλShape & {
}>;
type $Audio = $.ObjectType<"Media::Audio", $AudioλShape, null, [
  ...$Temporal['__exclusives__'],
], "Media::Audio">;
const $Audio = $.makeType<$Audio>(_.spec, "1c6fb164-0670-11f0-93b8-47c7ab565ab9", _.syntax.literal);

const Audio: $.$expr_PathNode<$.TypeSet<$Audio, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Audio, $.Cardinality.Many), null);

export type $VisualλShape = $.typeutil.flatten<_default.$MediaλShape & {
  "dimensions": $.PropertyDesc<$.NamedTupleType<{width: _std.$int16, height: _std.$int16}>, $.Cardinality.One, false, false, false, false>;
}>;
type $Visual = $.ObjectType<"Media::Visual", $VisualλShape, null, [
  ..._default.$Media['__exclusives__'],
], "Media::Image" | "Media::Video">;
const $Visual = $.makeType<$Visual>(_.spec, "1c71ed62-0670-11f0-b54a-35ca8fd19715", _.syntax.literal);

const Visual: $.$expr_PathNode<$.TypeSet<$Visual, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Visual, $.Cardinality.Many), null);

export type $ImageλShape = $.typeutil.flatten<$VisualλShape & {
}>;
type $Image = $.ObjectType<"Media::Image", $ImageλShape, null, [
  ...$Visual['__exclusives__'],
], "Media::Image">;
const $Image = $.makeType<$Image>(_.spec, "1c73f5b2-0670-11f0-9eb9-49ebb1abd2c4", _.syntax.literal);

const Image: $.$expr_PathNode<$.TypeSet<$Image, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Image, $.Cardinality.Many), null);

export type $VideoλShape = $.typeutil.flatten<$VisualλShape & $TemporalλShape & {
}>;
type $Video = $.ObjectType<"Media::Video", $VideoλShape, null, [
  ...$Visual['__exclusives__'],
  ...$Temporal['__exclusives__'],
], "Media::Video">;
const $Video = $.makeType<$Video>(_.spec, "1c75f22c-0670-11f0-a0d4-850890e58842", _.syntax.literal);

const Video: $.$expr_PathNode<$.TypeSet<$Video, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Video, $.Cardinality.Many), null);



export { $Temporal, Temporal, $Audio, Audio, $Visual, Visual, $Image, Image, $Video, Video };

type __defaultExports = {
  "Temporal": typeof Temporal;
  "Audio": typeof Audio;
  "Visual": typeof Visual;
  "Image": typeof Image;
  "Video": typeof Video
};
const __defaultExports: __defaultExports = {
  "Temporal": Temporal,
  "Audio": Audio,
  "Visual": Visual,
  "Image": Image,
  "Video": Video
};
export default __defaultExports;
