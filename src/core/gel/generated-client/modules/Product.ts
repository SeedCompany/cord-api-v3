// GENERATED by @gel/generate v0.6.2

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _Engagement from "./Engagement";
import type * as _default from "./default";
export type $Medium = {
  "Print": $.$expr_Literal<$Medium>;
  "Web": $.$expr_Literal<$Medium>;
  "EBook": $.$expr_Literal<$Medium>;
  "App": $.$expr_Literal<$Medium>;
  "TrainedStoryTellers": $.$expr_Literal<$Medium>;
  "Audio": $.$expr_Literal<$Medium>;
  "Video": $.$expr_Literal<$Medium>;
  "Other": $.$expr_Literal<$Medium>;
} & $.EnumType<"Product::Medium", ["Print", "Web", "EBook", "App", "TrainedStoryTellers", "Audio", "Video", "Other"]>;
const Medium: $Medium = $.makeType<$Medium>(_.spec, "47f19c24-01a9-11f0-b924-b79ca936e3c6", _.syntax.literal);

export type $Methodology = {
  "Paratext": $.$expr_Literal<$Methodology>;
  "OtherWritten": $.$expr_Literal<$Methodology>;
  "Render": $.$expr_Literal<$Methodology>;
  "Audacity": $.$expr_Literal<$Methodology>;
  "AdobeAudition": $.$expr_Literal<$Methodology>;
  "OtherOralTranslation": $.$expr_Literal<$Methodology>;
  "StoryTogether": $.$expr_Literal<$Methodology>;
  "SeedCompanyMethod": $.$expr_Literal<$Methodology>;
  "OneStory": $.$expr_Literal<$Methodology>;
  "Craft2Tell": $.$expr_Literal<$Methodology>;
  "OtherOralStories": $.$expr_Literal<$Methodology>;
  "Film": $.$expr_Literal<$Methodology>;
  "SignLanguage": $.$expr_Literal<$Methodology>;
  "OtherVisual": $.$expr_Literal<$Methodology>;
} & $.EnumType<"Product::Methodology", ["Paratext", "OtherWritten", "Render", "Audacity", "AdobeAudition", "OtherOralTranslation", "StoryTogether", "SeedCompanyMethod", "OneStory", "Craft2Tell", "OtherOralStories", "Film", "SignLanguage", "OtherVisual"]>;
const Methodology: $Methodology = $.makeType<$Methodology>(_.spec, "331b135c-01a9-11f0-a246-c124a392e138", _.syntax.literal);

export type $ProgressMeasurement = {
  "Number": $.$expr_Literal<$ProgressMeasurement>;
  "Percent": $.$expr_Literal<$ProgressMeasurement>;
  "Boolean": $.$expr_Literal<$ProgressMeasurement>;
} & $.EnumType<"Product::ProgressMeasurement", ["Number", "Percent", "Boolean"]>;
const ProgressMeasurement: $ProgressMeasurement = $.makeType<$ProgressMeasurement>(_.spec, "493ab138-01a9-11f0-9d6a-d73bbbac26d3", _.syntax.literal);

export type $Purpose = {
  "EvangelismChurchPlanting": $.$expr_Literal<$Purpose>;
  "ChurchLife": $.$expr_Literal<$Purpose>;
  "ChurchMaturity": $.$expr_Literal<$Purpose>;
  "SocialIssues": $.$expr_Literal<$Purpose>;
  "Discipleship": $.$expr_Literal<$Purpose>;
} & $.EnumType<"Product::Purpose", ["EvangelismChurchPlanting", "ChurchLife", "ChurchMaturity", "SocialIssues", "Discipleship"]>;
const Purpose: $Purpose = $.makeType<$Purpose>(_.spec, "493acb1e-01a9-11f0-a2ee-ad7758ce78a0", _.syntax.literal);

export type $Step = {
  "ExegesisAndFirstDraft": $.$expr_Literal<$Step>;
  "TeamCheck": $.$expr_Literal<$Step>;
  "CommunityTesting": $.$expr_Literal<$Step>;
  "BackTranslation": $.$expr_Literal<$Step>;
  "ConsultantCheck": $.$expr_Literal<$Step>;
  "InternalizationAndDrafting": $.$expr_Literal<$Step>;
  "PeerRevision": $.$expr_Literal<$Step>;
  "ConsistencyCheckAndFinalEdits": $.$expr_Literal<$Step>;
  "Craft": $.$expr_Literal<$Step>;
  "Test": $.$expr_Literal<$Step>;
  "Check": $.$expr_Literal<$Step>;
  "Record": $.$expr_Literal<$Step>;
  "Develop": $.$expr_Literal<$Step>;
  "Translate": $.$expr_Literal<$Step>;
  "Completed": $.$expr_Literal<$Step>;
} & $.EnumType<"Product::Step", ["ExegesisAndFirstDraft", "TeamCheck", "CommunityTesting", "BackTranslation", "ConsultantCheck", "InternalizationAndDrafting", "PeerRevision", "ConsistencyCheckAndFinalEdits", "Craft", "Test", "Check", "Record", "Develop", "Translate", "Completed"]>;
const Step: $Step = $.makeType<$Step>(_.spec, "492d9dfe-01a9-11f0-af9d-91a57470bac2", _.syntax.literal);

export type $PartnershipProducingMediumλShape = $.typeutil.flatten<_Engagement.$ChildλShape & {
  "medium": $.PropertyDesc<$Medium, $.Cardinality.One, false, false, false, false>;
  "partnership": $.LinkDesc<_default.$Partnership, $.Cardinality.One, {}, false, false,  true, false>;
}>;
type $PartnershipProducingMedium = $.ObjectType<"Product::PartnershipProducingMedium", $PartnershipProducingMediumλShape, null, [
  ..._Engagement.$Child['__exclusives__'],
], "Product::PartnershipProducingMedium">;
const $PartnershipProducingMedium = $.makeType<$PartnershipProducingMedium>(_.spec, "47f1b4a2-01a9-11f0-8a7a-83fb6a599c2f", _.syntax.literal);

const PartnershipProducingMedium: $.$expr_PathNode<$.TypeSet<$PartnershipProducingMedium, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($PartnershipProducingMedium, $.Cardinality.Many), null);



export { Medium, Methodology, ProgressMeasurement, Purpose, Step, $PartnershipProducingMedium, PartnershipProducingMedium };

type __defaultExports = {
  "Medium": typeof Medium;
  "Methodology": typeof Methodology;
  "ProgressMeasurement": typeof ProgressMeasurement;
  "Purpose": typeof Purpose;
  "Step": typeof Step;
  "PartnershipProducingMedium": typeof PartnershipProducingMedium
};
const __defaultExports: __defaultExports = {
  "Medium": Medium,
  "Methodology": Methodology,
  "ProgressMeasurement": ProgressMeasurement,
  "Purpose": Purpose,
  "Step": Step,
  "PartnershipProducingMedium": PartnershipProducingMedium
};
export default __defaultExports;
