// GENERATED by @gel/generate v0.6.2

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _default from "./default";
import type * as _std from "./std";
export type $Degree = {
  "Primary": $.$expr_Literal<$Degree>;
  "Secondary": $.$expr_Literal<$Degree>;
  "Associates": $.$expr_Literal<$Degree>;
  "Bachelors": $.$expr_Literal<$Degree>;
  "Masters": $.$expr_Literal<$Degree>;
  "Doctorate": $.$expr_Literal<$Degree>;
} & $.EnumType<"User::Degree", ["Primary", "Secondary", "Associates", "Bachelors", "Masters", "Doctorate"]>;
const Degree: $Degree = $.makeType<$Degree>(_.spec, "08bb45b6-0670-11f0-b009-31bdeb6865c7", _.syntax.literal);

export type $Status = {
  "Active": $.$expr_Literal<$Status>;
  "Disabled": $.$expr_Literal<$Status>;
} & $.EnumType<"User::Status", ["Active", "Disabled"]>;
const Status: $Status = $.makeType<$Status>(_.spec, "08b3b4ea-0670-11f0-b323-994840dbc670", _.syntax.literal);

export type $EducationλShape = $.typeutil.flatten<_default.$ResourceλShape & {
  "degree": $.PropertyDesc<$Degree, $.Cardinality.One, false, false, false, false>;
  "institution": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "major": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "<education[is User]": $.LinkDesc<_default.$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<education[is currentUser]": $.LinkDesc<_default.$currentUser, $.Cardinality.Many, {}, false, false,  false, false>;
  "<education": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Education = $.ObjectType<"User::Education", $EducationλShape, null, [
  ..._default.$Resource['__exclusives__'],
], "User::Education">;
const $Education = $.makeType<$Education>(_.spec, "08bb5024-0670-11f0-81da-e969081ab764", _.syntax.literal);

const Education: $.$expr_PathNode<$.TypeSet<$Education, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Education, $.Cardinality.Many), null);

export type $UnavailabilityλShape = $.typeutil.flatten<_default.$ResourceλShape & {
  "dates": $.PropertyDesc<$.RangeType<_std.$datetime>, $.Cardinality.One, false, false, false, false>;
  "end": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, true, false, false>;
  "start": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, true, false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "<unavailabilities[is User]": $.LinkDesc<_default.$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<unavailabilities[is currentUser]": $.LinkDesc<_default.$currentUser, $.Cardinality.Many, {}, false, false,  false, false>;
  "<unavailabilities": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Unavailability = $.ObjectType<"User::Unavailability", $UnavailabilityλShape, null, [
  ..._default.$Resource['__exclusives__'],
], "User::Unavailability">;
const $Unavailability = $.makeType<$Unavailability>(_.spec, "08adc5f8-0670-11f0-ace2-b16b2c927985", _.syntax.literal);

const Unavailability: $.$expr_PathNode<$.TypeSet<$Unavailability, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Unavailability, $.Cardinality.Many), null);



export { Degree, Status, $Education, Education, $Unavailability, Unavailability };

type __defaultExports = {
  "Degree": typeof Degree;
  "Status": typeof Status;
  "Education": typeof Education;
  "Unavailability": typeof Unavailability
};
const __defaultExports: __defaultExports = {
  "Degree": Degree,
  "Status": Status,
  "Education": Education,
  "Unavailability": Unavailability
};
export default __defaultExports;
