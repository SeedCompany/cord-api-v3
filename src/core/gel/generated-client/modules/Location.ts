// GENERATED by @gel/generate v0.6.2

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $IsoAlpha3Code = $.ScalarType<"std::str", string>;
const IsoAlpha3Code: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "323efb7e-01a9-11f0-8fa6-85510f2e4f67", _.syntax.literal);

export type $Type = {
  "Country": $.$expr_Literal<$Type>;
  "City": $.$expr_Literal<$Type>;
  "County": $.$expr_Literal<$Type>;
  "Region": $.$expr_Literal<$Type>;
  "State": $.$expr_Literal<$Type>;
  "CrossBorderArea": $.$expr_Literal<$Type>;
} & $.EnumType<"Location::Type", ["Country", "City", "County", "Region", "State", "CrossBorderArea"]>;
const Type: $Type = $.makeType<$Type>(_.spec, "323f7cfc-01a9-11f0-8c56-857d25a37ae7", _.syntax.literal);



export { IsoAlpha3Code, Type };

type __defaultExports = {
  "IsoAlpha3Code": typeof IsoAlpha3Code;
  "Type": typeof Type
};
const __defaultExports: __defaultExports = {
  "IsoAlpha3Code": IsoAlpha3Code,
  "Type": Type
};
export default __defaultExports;
