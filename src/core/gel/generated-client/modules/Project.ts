// GENERATED by @gel/generate v0.6.2

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
import type * as _default from "./default";
import type * as _Engagement from "./Engagement";
import type * as _Ethnologue from "./Ethnologue";
import type * as _Budget from "./Budget";
import type * as _Product from "./Product";
import type * as _ProgressReport from "./ProgressReport";
import type * as _ProgressReportProductProgress from "./ProgressReport/ProductProgress";
export type $Status = {
  "InDevelopment": $.$expr_Literal<$Status>;
  "Active": $.$expr_Literal<$Status>;
  "Terminated": $.$expr_Literal<$Status>;
  "Completed": $.$expr_Literal<$Status>;
  "DidNotDevelop": $.$expr_Literal<$Status>;
} & $.EnumType<"Project::Status", ["InDevelopment", "Active", "Terminated", "Completed", "DidNotDevelop"]>;
const Status: $Status = $.makeType<$Status>(_.spec, "076f572e-0670-11f0-8230-d7b33a5475f8", _.syntax.literal);

export type $Step = {
  "EarlyConversations": $.$expr_Literal<$Step>;
  "PendingConceptApproval": $.$expr_Literal<$Step>;
  "PrepForConsultantEndorsement": $.$expr_Literal<$Step>;
  "PendingConsultantEndorsement": $.$expr_Literal<$Step>;
  "PrepForFinancialEndorsement": $.$expr_Literal<$Step>;
  "PendingFinancialEndorsement": $.$expr_Literal<$Step>;
  "FinalizingProposal": $.$expr_Literal<$Step>;
  "PendingRegionalDirectorApproval": $.$expr_Literal<$Step>;
  "PendingZoneDirectorApproval": $.$expr_Literal<$Step>;
  "PendingFinanceConfirmation": $.$expr_Literal<$Step>;
  "OnHoldFinanceConfirmation": $.$expr_Literal<$Step>;
  "DidNotDevelop": $.$expr_Literal<$Step>;
  "Rejected": $.$expr_Literal<$Step>;
  "Active": $.$expr_Literal<$Step>;
  "ActiveChangedPlan": $.$expr_Literal<$Step>;
  "DiscussingChangeToPlan": $.$expr_Literal<$Step>;
  "PendingChangeToPlanApproval": $.$expr_Literal<$Step>;
  "PendingChangeToPlanConfirmation": $.$expr_Literal<$Step>;
  "DiscussingSuspension": $.$expr_Literal<$Step>;
  "PendingSuspensionApproval": $.$expr_Literal<$Step>;
  "Suspended": $.$expr_Literal<$Step>;
  "DiscussingReactivation": $.$expr_Literal<$Step>;
  "PendingReactivationApproval": $.$expr_Literal<$Step>;
  "DiscussingTermination": $.$expr_Literal<$Step>;
  "PendingTerminationApproval": $.$expr_Literal<$Step>;
  "FinalizingCompletion": $.$expr_Literal<$Step>;
  "Terminated": $.$expr_Literal<$Step>;
  "Completed": $.$expr_Literal<$Step>;
} & $.EnumType<"Project::Step", ["EarlyConversations", "PendingConceptApproval", "PrepForConsultantEndorsement", "PendingConsultantEndorsement", "PrepForFinancialEndorsement", "PendingFinancialEndorsement", "FinalizingProposal", "PendingRegionalDirectorApproval", "PendingZoneDirectorApproval", "PendingFinanceConfirmation", "OnHoldFinanceConfirmation", "DidNotDevelop", "Rejected", "Active", "ActiveChangedPlan", "DiscussingChangeToPlan", "PendingChangeToPlanApproval", "PendingChangeToPlanConfirmation", "DiscussingSuspension", "PendingSuspensionApproval", "Suspended", "DiscussingReactivation", "PendingReactivationApproval", "DiscussingTermination", "PendingTerminationApproval", "FinalizingCompletion", "Terminated", "Completed"]>;
const Step: $Step = $.makeType<$Step>(_.spec, "076f6412-0670-11f0-a6d5-f9bbf9c2c76e", _.syntax.literal);

export type $Type = {
  "MomentumTranslation": $.$expr_Literal<$Type>;
  "MultiplicationTranslation": $.$expr_Literal<$Type>;
  "Internship": $.$expr_Literal<$Type>;
} & $.EnumType<"Project::Type", ["MomentumTranslation", "MultiplicationTranslation", "Internship"]>;
const Type: $Type = $.makeType<$Type>(_.spec, "07842ffa-0670-11f0-808c-933a2fde9cf5", _.syntax.literal);

export type $ContextAwareλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "ownSensitivity": $.PropertyDesc<_default.$Sensitivity, $.Cardinality.AtMostOne, false, false, false, false>;
  "projectContext": $.LinkDesc<$Context, $.Cardinality.One, {}, false, false,  false, false>;
  "sensitivity": $.PropertyDesc<_default.$Sensitivity, $.Cardinality.One, false, true, false, false>;
  "isMember": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
}>;
type $ContextAware = $.ObjectType<"Project::ContextAware", $ContextAwareλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
], "Budget::Record" | "Engagement::CertificationCeremony" | "Engagement::DedicationCeremony" | "Ethnologue::Language" | "Product::PartnershipProducingMedium" | "ProgressReport::CommunityStory" | "ProgressReport::Highlight" | "ProgressReport::Media" | "ProgressReport::ProductProgress::Step" | "ProgressReport::TeamNews" | "ProgressReport::VarianceExplanation" | "Project::Member" | "Project::WorkflowEvent" | "default::Budget" | "default::DerivativeScriptureProduct" | "default::DirectScriptureProduct" | "default::FinancialReport" | "default::InternshipEngagement" | "default::InternshipProject" | "default::Language" | "default::LanguageEngagement" | "default::MomentumTranslationProject" | "default::MultiplicationTranslationProject" | "default::NarrativeReport" | "default::Organization" | "default::OtherProduct" | "default::Partner" | "default::Partnership" | "default::ProgressReport">;
const $ContextAware = $.makeType<$ContextAware>(_.spec, "07928a32-0670-11f0-9489-3760334e8a9b", _.syntax.literal);

const ContextAware: $.$expr_PathNode<$.TypeSet<$ContextAware, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ContextAware, $.Cardinality.Many), null);

export type $ChildλShape = $.typeutil.flatten<_default.$ResourceλShape & $ContextAwareλShape & {
  "project": $.LinkDesc<_default.$Project, $.Cardinality.One, {}, false, false,  true, false>;
}>;
type $Child = $.ObjectType<"Project::Child", $ChildλShape, null, [
  ..._default.$Resource['__exclusives__'],
  ...$ContextAware['__exclusives__'],
], "Budget::Record" | "Engagement::CertificationCeremony" | "Engagement::DedicationCeremony" | "Product::PartnershipProducingMedium" | "ProgressReport::CommunityStory" | "ProgressReport::Highlight" | "ProgressReport::Media" | "ProgressReport::TeamNews" | "ProgressReport::VarianceExplanation" | "Project::Member" | "default::Budget" | "default::DerivativeScriptureProduct" | "default::DirectScriptureProduct" | "default::FinancialReport" | "default::InternshipEngagement" | "default::LanguageEngagement" | "default::NarrativeReport" | "default::OtherProduct" | "default::Partnership" | "default::ProgressReport">;
const $Child = $.makeType<$Child>(_.spec, "085f0bc0-0670-11f0-bebb-3b9237272521", _.syntax.literal);

const Child: $.$expr_PathNode<$.TypeSet<$Child, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Child, $.Cardinality.Many), null);

export type $ContextλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "projects": $.LinkDesc<_default.$Project, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Project::ContextAware]": $.LinkDesc<$ContextAware, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Engagement]": $.LinkDesc<_default.$Engagement, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Engagement::DedicationCeremony]": $.LinkDesc<_Engagement.$DedicationCeremony, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Project::Child]": $.LinkDesc<$Child, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Engagement::Child]": $.LinkDesc<_Engagement.$Child, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Engagement::Ceremony]": $.LinkDesc<_Engagement.$Ceremony, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Engagement::CertificationCeremony]": $.LinkDesc<_Engagement.$CertificationCeremony, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Project::Member]": $.LinkDesc<$Member, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Ethnologue::Language]": $.LinkDesc<_Ethnologue.$Language, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Budget::Record]": $.LinkDesc<_Budget.$Record, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Budget]": $.LinkDesc<_default.$Budget, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Organization]": $.LinkDesc<_default.$Organization, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Product::PartnershipProducingMedium]": $.LinkDesc<_Product.$PartnershipProducingMedium, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Partnership]": $.LinkDesc<_default.$Partnership, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is ProgressReport::Child]": $.LinkDesc<_ProgressReport.$Child, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is ProgressReport::CommunityStory]": $.LinkDesc<_ProgressReport.$CommunityStory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is ProgressReport::Highlight]": $.LinkDesc<_ProgressReport.$Highlight, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is ProgressReport::Media]": $.LinkDesc<_ProgressReport.$Media, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is ProgressReport::TeamNews]": $.LinkDesc<_ProgressReport.$TeamNews, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is ProgressReport::VarianceExplanation]": $.LinkDesc<_ProgressReport.$VarianceExplanation, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is ProgressReport::ProductProgress::Step]": $.LinkDesc<_ProgressReportProductProgress.$Step, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Product]": $.LinkDesc<_default.$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Project::WorkflowEvent]": $.LinkDesc<$WorkflowEvent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is DerivativeScriptureProduct]": $.LinkDesc<_default.$DerivativeScriptureProduct, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is LanguageEngagement]": $.LinkDesc<_default.$LanguageEngagement, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is DirectScriptureProduct]": $.LinkDesc<_default.$DirectScriptureProduct, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is OtherProduct]": $.LinkDesc<_default.$OtherProduct, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is FinancialReport]": $.LinkDesc<_default.$FinancialReport, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is NarrativeReport]": $.LinkDesc<_default.$NarrativeReport, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Project]": $.LinkDesc<_default.$Project, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is InternshipEngagement]": $.LinkDesc<_default.$InternshipEngagement, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is TranslationProject]": $.LinkDesc<_default.$TranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is MomentumTranslationProject]": $.LinkDesc<_default.$MomentumTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is InternshipProject]": $.LinkDesc<_default.$InternshipProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is ProgressReport]": $.LinkDesc<_default.$ProgressReport, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Partner]": $.LinkDesc<_default.$Partner, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is MultiplicationTranslationProject]": $.LinkDesc<_default.$MultiplicationTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext[is Language]": $.LinkDesc<_default.$Language, $.Cardinality.Many, {}, false, false,  false, false>;
  "<projectContext": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Context = $.ObjectType<"Project::Context", $ContextλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
], "Project::Context">;
const $Context = $.makeType<$Context>(_.spec, "07b6ab60-0670-11f0-a2f4-fbd0f6652b42", _.syntax.literal);

const Context: $.$expr_PathNode<$.TypeSet<$Context, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Context, $.Cardinality.Many), null);

export type $FinancialApproverλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "user": $.LinkDesc<_default.$User, $.Cardinality.One, {}, true, false,  false, false>;
  "projectTypes": $.PropertyDesc<$Type, $.Cardinality.AtLeastOne, false, false, false, false>;
}>;
type $FinancialApprover = $.ObjectType<"Project::FinancialApprover", $FinancialApproverλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {user: {__element__: _default.$User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
], "Project::FinancialApprover">;
const $FinancialApprover = $.makeType<$FinancialApprover>(_.spec, "0a1007f8-0670-11f0-ad9d-412ea99bc381", _.syntax.literal);

const FinancialApprover: $.$expr_PathNode<$.TypeSet<$FinancialApprover, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($FinancialApprover, $.Cardinality.Many), null);

export type $MemberλShape = $.typeutil.flatten<$ChildλShape & {
  "user": $.LinkDesc<_default.$User, $.Cardinality.One, {}, false, false,  true, false>;
  "roles": $.PropertyDesc<_default.$Role, $.Cardinality.Many, false, false, false, false>;
  "<members[is Project]": $.LinkDesc<_default.$Project, $.Cardinality.Many, {}, false, false,  false, false>;
  "<members[is TranslationProject]": $.LinkDesc<_default.$TranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<membership[is Project]": $.LinkDesc<_default.$Project, $.Cardinality.Many, {}, false, false,  false, false>;
  "<membership[is TranslationProject]": $.LinkDesc<_default.$TranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<members[is MomentumTranslationProject]": $.LinkDesc<_default.$MomentumTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<membership[is MomentumTranslationProject]": $.LinkDesc<_default.$MomentumTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<members[is InternshipProject]": $.LinkDesc<_default.$InternshipProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<membership[is InternshipProject]": $.LinkDesc<_default.$InternshipProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<members[is MultiplicationTranslationProject]": $.LinkDesc<_default.$MultiplicationTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<membership[is MultiplicationTranslationProject]": $.LinkDesc<_default.$MultiplicationTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<members": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<membership": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Member = $.ObjectType<"Project::Member", $MemberλShape, null, [
  ...$Child['__exclusives__'],
], "Project::Member">;
const $Member = $.makeType<$Member>(_.spec, "08c4596c-0670-11f0-ae24-5d4d872434f0", _.syntax.literal);

const Member: $.$expr_PathNode<$.TypeSet<$Member, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Member, $.Cardinality.Many), null);

export type $WorkflowEventλShape = $.typeutil.flatten<$ContextAwareλShape & {
  "project": $.LinkDesc<_default.$Project, $.Cardinality.One, {}, false, false,  true, false>;
  "at": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, true, true>;
  "to": $.PropertyDesc<$Step, $.Cardinality.One, false, false, true, false>;
  "who": $.LinkDesc<_default.$Actor, $.Cardinality.One, {}, false, false,  true, true>;
  "notes": $.PropertyDesc<_default.$RichText, $.Cardinality.AtMostOne, false, false, true, false>;
  "transitionKey": $.PropertyDesc<_std.$uuid, $.Cardinality.AtMostOne, false, false, true, false>;
  "<workflowEvents[is Project]": $.LinkDesc<_default.$Project, $.Cardinality.Many, {}, false, false,  false, false>;
  "<latestWorkflowEvent[is Project]": $.LinkDesc<_default.$Project, $.Cardinality.Many, {}, false, false,  false, false>;
  "<workflowEvents[is TranslationProject]": $.LinkDesc<_default.$TranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<latestWorkflowEvent[is TranslationProject]": $.LinkDesc<_default.$TranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<workflowEvents[is MomentumTranslationProject]": $.LinkDesc<_default.$MomentumTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<latestWorkflowEvent[is MomentumTranslationProject]": $.LinkDesc<_default.$MomentumTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<workflowEvents[is InternshipProject]": $.LinkDesc<_default.$InternshipProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<latestWorkflowEvent[is InternshipProject]": $.LinkDesc<_default.$InternshipProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<workflowEvents[is MultiplicationTranslationProject]": $.LinkDesc<_default.$MultiplicationTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<latestWorkflowEvent[is MultiplicationTranslationProject]": $.LinkDesc<_default.$MultiplicationTranslationProject, $.Cardinality.Many, {}, false, false,  false, false>;
  "<latestWorkflowEvent": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<workflowEvents": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $WorkflowEvent = $.ObjectType<"Project::WorkflowEvent", $WorkflowEventλShape, null, [
  ...$ContextAware['__exclusives__'],
], "Project::WorkflowEvent">;
const $WorkflowEvent = $.makeType<$WorkflowEvent>(_.spec, "1d999cc6-0670-11f0-b2af-b3bba076741b", _.syntax.literal);

const WorkflowEvent: $.$expr_PathNode<$.TypeSet<$WorkflowEvent, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($WorkflowEvent, $.Cardinality.Many), null);

type statusFromStepλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<$Step>>,
> = $.$expr_Function<
  $Status, $.cardutil.paramCardinality<P1>
>;
function statusFromStep<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<$Step>>,
>(
  step: P1,
): statusFromStepλFuncExpr<P1>;
function statusFromStep(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('Project::statusFromStep', args, _.spec, [
    {args: [{typeId: "076f6412-0670-11f0-a6d5-f9bbf9c2c76e", optional: false, setoftype: false, variadic: false}], returnTypeId: "076f572e-0670-11f0-8230-d7b33a5475f8"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "Project::statusFromStep",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};



export { Status, Step, Type, $ContextAware, ContextAware, $Child, Child, $Context, Context, $FinancialApprover, FinancialApprover, $Member, Member, $WorkflowEvent, WorkflowEvent };

type __defaultExports = {
  "Status": typeof Status;
  "Step": typeof Step;
  "Type": typeof Type;
  "ContextAware": typeof ContextAware;
  "Child": typeof Child;
  "Context": typeof Context;
  "FinancialApprover": typeof FinancialApprover;
  "Member": typeof Member;
  "WorkflowEvent": typeof WorkflowEvent;
  "statusFromStep": typeof statusFromStep
};
const __defaultExports: __defaultExports = {
  "Status": Status,
  "Step": Step,
  "Type": Type,
  "ContextAware": ContextAware,
  "Child": Child,
  "Context": Context,
  "FinancialApprover": FinancialApprover,
  "Member": Member,
  "WorkflowEvent": WorkflowEvent,
  "statusFromStep": statusFromStep
};
export default __defaultExports;
