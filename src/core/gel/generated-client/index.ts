// GENERATED by @gel/generate v0.6.2

export * from "./external";
export { createClient } from "gel";
import * as $ from "./reflection";
import * as $syntax from "./syntax";
import * as $op from "./operators";
import _std from "./modules/std";
import _Budget from "./modules/Budget";
import _Engagement from "./modules/Engagement";
import _Ethnologue from "./modules/Ethnologue";
import _Language from "./modules/Language";
import _Location from "./modules/Location";
import _Organization from "./modules/Organization";
import _Partner from "./modules/Partner";
import _Partnership from "./modules/Partnership";
import _Post from "./modules/Post";
import _Product from "./modules/Product";
import _ProgressReport from "./modules/ProgressReport";
import _Project from "./modules/Project";
import _User from "./modules/User";
import _cfg from "./modules/cfg";
import _default from "./modules/default";
import _schema from "./modules/schema";
import _sys from "./modules/sys";
import _Mixin from "./modules/Mixin";
import _Auth from "./modules/Auth";
import _Comments from "./modules/Comments";
import _File from "./modules/File";
import _Media from "./modules/Media";
import _Notification from "./modules/Notification";
import _Prompt from "./modules/Prompt";
import _Scripture from "./modules/Scripture";

const ExportDefault: typeof _std & 
  Omit<typeof _default, "Media" | "Notification" | "Budget" | "Product" | "Engagement" | "File" | "Project" | "Language" | "Location" | "Organization" | "Partner" | "Partnership" | "Post" | "ProgressReport" | "User"> & 
  $.util.OmitDollarPrefixed<typeof $syntax> & 
  typeof $op & {
  "std": typeof _std;
  "Budget": typeof _Budget & typeof _default.Budget;
  "Engagement": typeof _Engagement & typeof _default.Engagement;
  "Ethnologue": typeof _Ethnologue;
  "Language": typeof _Language & typeof _default.Language;
  "Location": typeof _Location & typeof _default.Location;
  "Organization": typeof _Organization & typeof _default.Organization;
  "Partner": typeof _Partner & typeof _default.Partner;
  "Partnership": typeof _Partnership & typeof _default.Partnership;
  "Post": typeof _Post & typeof _default.Post;
  "Product": typeof _Product & typeof _default.Product;
  "ProgressReport": typeof _ProgressReport & typeof _default.ProgressReport;
  "Project": typeof _Project & typeof _default.Project;
  "User": typeof _User & typeof _default.User;
  "cfg": typeof _cfg;
  "default": typeof _default;
  "schema": typeof _schema;
  "sys": typeof _sys;
  "Mixin": typeof _Mixin;
  "Auth": typeof _Auth;
  "Comments": typeof _Comments;
  "File": typeof _File & typeof _default.File;
  "Media": typeof _Media & typeof _default.Media;
  "Notification": typeof _Notification & typeof _default.Notification;
  "Prompt": typeof _Prompt;
  "Scripture": typeof _Scripture;
} = {
  ..._std,
  ..._default,
  ...$.util.omitDollarPrefixed($syntax),
  ...$op,
  "std": _std,
  "Budget": Object.freeze({ ..._Budget, ..._default.Budget }),
  "Engagement": Object.freeze({ ..._Engagement, ..._default.Engagement }),
  "Ethnologue": _Ethnologue,
  "Language": Object.freeze({ ..._Language, ..._default.Language }),
  "Location": Object.freeze({ ..._Location, ..._default.Location }),
  "Organization": Object.freeze({ ..._Organization, ..._default.Organization }),
  "Partner": Object.freeze({ ..._Partner, ..._default.Partner }),
  "Partnership": Object.freeze({ ..._Partnership, ..._default.Partnership }),
  "Post": Object.freeze({ ..._Post, ..._default.Post }),
  "Product": Object.freeze({ ..._Product, ..._default.Product }),
  "ProgressReport": Object.freeze({ ..._ProgressReport, ..._default.ProgressReport }),
  "Project": Object.freeze({ ..._Project, ..._default.Project }),
  "User": Object.freeze({ ..._User, ..._default.User }),
  "cfg": _cfg,
  "default": _default,
  "schema": _schema,
  "sys": _sys,
  "Mixin": _Mixin,
  "Auth": _Auth,
  "Comments": _Comments,
  "File": Object.freeze({ ..._File, ..._default.File }),
  "Media": Object.freeze({ ..._Media, ..._default.Media }),
  "Notification": Object.freeze({ ..._Notification, ..._default.Notification }),
  "Prompt": _Prompt,
  "Scripture": _Scripture,
};
const Cardinality = $.Cardinality;
type Cardinality = $.Cardinality;
export type Set<
  Type extends $.BaseType,
  Card extends $.Cardinality = $.Cardinality.Many
> = $.TypeSet<Type, Card>;


export default ExportDefault;
export { Cardinality };
